!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=4)}([function(t,e){t.exports=mapboxgl},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){var r;
/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */!function(e,n){"use strict";"object"==typeof t.exports?t.exports=e.document?n(e,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return n(t)}:n(e)}("undefined"!=typeof window?window:this,(function(n,i){"use strict";var o=[],a=Object.getPrototypeOf,s=o.slice,u=o.flat?function(t){return o.flat.call(t)}:function(t){return o.concat.apply([],t)},c=o.push,l=o.indexOf,f={},h=f.toString,p=f.hasOwnProperty,d=p.toString,g=d.call(Object),m={},v=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},y=function(t){return null!=t&&t===t.window},b=n.document,w={type:!0,src:!0,nonce:!0,noModule:!0};function x(t,e,n){var r,i,o=(n=n||b).createElement("script");if(o.text=t,e)for(r in w)(i=e[r]||e.getAttribute&&e.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function N(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?f[h.call(t)]||"object":typeof t}var L=function(t,e){return new L.fn.init(t,e)};function A(t){var e=!!t&&"length"in t&&t.length,n=N(t);return!v(t)&&!y(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}L.fn=L.prototype={jquery:"3.5.1",constructor:L,length:0,toArray:function(){return s.call(this)},get:function(t){return null==t?s.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=L.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return L.each(this,t)},map:function(t){return this.pushStack(L.map(this,(function(e,n){return t.call(e,n,e)})))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(L.grep(this,(function(t,e){return(e+1)%2})))},odd:function(){return this.pushStack(L.grep(this,(function(t,e){return e%2})))},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:c,sort:o.sort,splice:o.splice},L.extend=L.fn.extend=function(){var t,e,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[s]||{},s++),"object"==typeof a||v(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(t=arguments[s]))for(e in t)r=t[e],"__proto__"!==e&&a!==r&&(c&&r&&(L.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[e],o=i&&!Array.isArray(n)?[]:i||L.isPlainObject(n)?n:{},i=!1,a[e]=L.extend(c,o,r)):void 0!==r&&(a[e]=r));return a},L.extend({expando:"jQuery"+("3.5.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==h.call(t))&&(!(e=a(t))||"function"==typeof(n=p.call(e,"constructor")&&e.constructor)&&d.call(n)===g)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t,e,n){x(t,{nonce:e&&e.nonce},n)},each:function(t,e){var n,r=0;if(A(t))for(n=t.length;r<n&&!1!==e.call(t[r],r,t[r]);r++);else for(r in t)if(!1===e.call(t[r],r,t[r]))break;return t},makeArray:function(t,e){var n=e||[];return null!=t&&(A(Object(t))?L.merge(n,"string"==typeof t?[t]:t):c.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:l.call(e,t,n)},merge:function(t,e){for(var n=+e.length,r=0,i=t.length;r<n;r++)t[i++]=e[r];return t.length=i,t},grep:function(t,e,n){for(var r=[],i=0,o=t.length,a=!n;i<o;i++)!e(t[i],i)!==a&&r.push(t[i]);return r},map:function(t,e,n){var r,i,o=0,a=[];if(A(t))for(r=t.length;o<r;o++)null!=(i=e(t[o],o,n))&&a.push(i);else for(o in t)null!=(i=e(t[o],o,n))&&a.push(i);return u(a)},guid:1,support:m}),"function"==typeof Symbol&&(L.fn[Symbol.iterator]=o[Symbol.iterator]),L.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){f["[object "+e+"]"]=e.toLowerCase()}));var S=
/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */
function(t){var e,n,r,i,o,a,s,u,c,l,f,h,p,d,g,m,v,y,b,w="sizzle"+1*new Date,x=t.document,N=0,L=0,A=ut(),S=ut(),_=ut(),C=ut(),k=function(t,e){return t===e&&(f=!0),0},P={}.hasOwnProperty,F=[],T=F.pop,j=F.push,I=F.push,E=F.slice,B=function(t,e){for(var n=0,r=t.length;n<r;n++)if(t[n]===e)return n;return-1},O="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",q="(?:\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",D="\\["+M+"*("+q+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+q+"))|)"+M+"*\\]",R=":("+q+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+D+")*)|.*)\\)|)",U=new RegExp(M+"+","g"),z=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),H=new RegExp("^"+M+"*,"+M+"*"),W=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),V=new RegExp(M+"|>"),G=new RegExp(R),Y=new RegExp("^"+q+"$"),X={ID:new RegExp("^#("+q+")"),CLASS:new RegExp("^\\.("+q+")"),TAG:new RegExp("^("+q+"|[*])"),ATTR:new RegExp("^"+D),PSEUDO:new RegExp("^"+R),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+O+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},J=/HTML$/i,$=/^(?:input|select|textarea|button)$/i,K=/^h\d$/i,Q=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,tt=/[+~]/,et=new RegExp("\\\\[\\da-fA-F]{1,6}"+M+"?|\\\\([^\\r\\n\\f])","g"),nt=function(t,e){var n="0x"+t.slice(1)-65536;return e||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},rt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,it=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},ot=function(){h()},at=wt((function(t){return!0===t.disabled&&"fieldset"===t.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{I.apply(F=E.call(x.childNodes),x.childNodes),F[x.childNodes.length].nodeType}catch(t){I={apply:F.length?function(t,e){j.apply(t,E.call(e))}:function(t,e){for(var n=t.length,r=0;t[n++]=e[r++];);t.length=n-1}}}function st(t,e,r,i){var o,s,c,l,f,d,v,y=e&&e.ownerDocument,x=e?e.nodeType:9;if(r=r||[],"string"!=typeof t||!t||1!==x&&9!==x&&11!==x)return r;if(!i&&(h(e),e=e||p,g)){if(11!==x&&(f=Z.exec(t)))if(o=f[1]){if(9===x){if(!(c=e.getElementById(o)))return r;if(c.id===o)return r.push(c),r}else if(y&&(c=y.getElementById(o))&&b(e,c)&&c.id===o)return r.push(c),r}else{if(f[2])return I.apply(r,e.getElementsByTagName(t)),r;if((o=f[3])&&n.getElementsByClassName&&e.getElementsByClassName)return I.apply(r,e.getElementsByClassName(o)),r}if(n.qsa&&!C[t+" "]&&(!m||!m.test(t))&&(1!==x||"object"!==e.nodeName.toLowerCase())){if(v=t,y=e,1===x&&(V.test(t)||W.test(t))){for((y=tt.test(t)&&vt(e.parentNode)||e)===e&&n.scope||((l=e.getAttribute("id"))?l=l.replace(rt,it):e.setAttribute("id",l=w)),s=(d=a(t)).length;s--;)d[s]=(l?"#"+l:":scope")+" "+bt(d[s]);v=d.join(",")}try{return I.apply(r,y.querySelectorAll(v)),r}catch(e){C(t,!0)}finally{l===w&&e.removeAttribute("id")}}}return u(t.replace(z,"$1"),e,r,i)}function ut(){var t=[];return function e(n,i){return t.push(n+" ")>r.cacheLength&&delete e[t.shift()],e[n+" "]=i}}function ct(t){return t[w]=!0,t}function lt(t){var e=p.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ft(t,e){for(var n=t.split("|"),i=n.length;i--;)r.attrHandle[n[i]]=e}function ht(t,e){var n=e&&t,r=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(r)return r;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function pt(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function dt(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function gt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&at(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function mt(t){return ct((function(e){return e=+e,ct((function(n,r){for(var i,o=t([],n.length,e),a=o.length;a--;)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))}))}))}function vt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in n=st.support={},o=st.isXML=function(t){var e=t.namespaceURI,n=(t.ownerDocument||t).documentElement;return!J.test(e||n&&n.nodeName||"HTML")},h=st.setDocument=function(t){var e,i,a=t?t.ownerDocument||t:x;return a!=p&&9===a.nodeType&&a.documentElement?(d=(p=a).documentElement,g=!o(p),x!=p&&(i=p.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",ot,!1):i.attachEvent&&i.attachEvent("onunload",ot)),n.scope=lt((function(t){return d.appendChild(t).appendChild(p.createElement("div")),void 0!==t.querySelectorAll&&!t.querySelectorAll(":scope fieldset div").length})),n.attributes=lt((function(t){return t.className="i",!t.getAttribute("className")})),n.getElementsByTagName=lt((function(t){return t.appendChild(p.createComment("")),!t.getElementsByTagName("*").length})),n.getElementsByClassName=Q.test(p.getElementsByClassName),n.getById=lt((function(t){return d.appendChild(t).id=w,!p.getElementsByName||!p.getElementsByName(w).length})),n.getById?(r.filter.ID=function(t){var e=t.replace(et,nt);return function(t){return t.getAttribute("id")===e}},r.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n=e.getElementById(t);return n?[n]:[]}}):(r.filter.ID=function(t){var e=t.replace(et,nt);return function(t){var n=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},r.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var n,r,i,o=e.getElementById(t);if(o){if((n=o.getAttributeNode("id"))&&n.value===t)return[o];for(i=e.getElementsByName(t),r=0;o=i[r++];)if((n=o.getAttributeNode("id"))&&n.value===t)return[o]}return[]}}),r.find.TAG=n.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):n.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,r=[],i=0,o=e.getElementsByTagName(t);if("*"===t){for(;n=o[i++];)1===n.nodeType&&r.push(n);return r}return o},r.find.CLASS=n.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},v=[],m=[],(n.qsa=Q.test(p.querySelectorAll))&&(lt((function(t){var e;d.appendChild(t).innerHTML="<a id='"+w+"'></a><select id='"+w+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+M+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+M+"*(?:value|"+O+")"),t.querySelectorAll("[id~="+w+"-]").length||m.push("~="),(e=p.createElement("input")).setAttribute("name",""),t.appendChild(e),t.querySelectorAll("[name='']").length||m.push("\\["+M+"*name"+M+"*="+M+"*(?:''|\"\")"),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+w+"+*").length||m.push(".#.+[+~]"),t.querySelectorAll("\\\f"),m.push("[\\r\\n\\f]")})),lt((function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=p.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+M+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),d.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")}))),(n.matchesSelector=Q.test(y=d.matches||d.webkitMatchesSelector||d.mozMatchesSelector||d.oMatchesSelector||d.msMatchesSelector))&&lt((function(t){n.disconnectedMatch=y.call(t,"*"),y.call(t,"[s!='']:x"),v.push("!=",R)})),m=m.length&&new RegExp(m.join("|")),v=v.length&&new RegExp(v.join("|")),e=Q.test(d.compareDocumentPosition),b=e||Q.test(d.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,r=e&&e.parentNode;return t===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):t.compareDocumentPosition&&16&t.compareDocumentPosition(r)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},k=e?function(t,e){if(t===e)return f=!0,0;var r=!t.compareDocumentPosition-!e.compareDocumentPosition;return r||(1&(r=(t.ownerDocument||t)==(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!n.sortDetached&&e.compareDocumentPosition(t)===r?t==p||t.ownerDocument==x&&b(x,t)?-1:e==p||e.ownerDocument==x&&b(x,e)?1:l?B(l,t)-B(l,e):0:4&r?-1:1)}:function(t,e){if(t===e)return f=!0,0;var n,r=0,i=t.parentNode,o=e.parentNode,a=[t],s=[e];if(!i||!o)return t==p?-1:e==p?1:i?-1:o?1:l?B(l,t)-B(l,e):0;if(i===o)return ht(t,e);for(n=t;n=n.parentNode;)a.unshift(n);for(n=e;n=n.parentNode;)s.unshift(n);for(;a[r]===s[r];)r++;return r?ht(a[r],s[r]):a[r]==x?-1:s[r]==x?1:0},p):p},st.matches=function(t,e){return st(t,null,null,e)},st.matchesSelector=function(t,e){if(h(t),n.matchesSelector&&g&&!C[e+" "]&&(!v||!v.test(e))&&(!m||!m.test(e)))try{var r=y.call(t,e);if(r||n.disconnectedMatch||t.document&&11!==t.document.nodeType)return r}catch(t){C(e,!0)}return st(e,p,null,[t]).length>0},st.contains=function(t,e){return(t.ownerDocument||t)!=p&&h(t),b(t,e)},st.attr=function(t,e){(t.ownerDocument||t)!=p&&h(t);var i=r.attrHandle[e.toLowerCase()],o=i&&P.call(r.attrHandle,e.toLowerCase())?i(t,e,!g):void 0;return void 0!==o?o:n.attributes||!g?t.getAttribute(e):(o=t.getAttributeNode(e))&&o.specified?o.value:null},st.escape=function(t){return(t+"").replace(rt,it)},st.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},st.uniqueSort=function(t){var e,r=[],i=0,o=0;if(f=!n.detectDuplicates,l=!n.sortStable&&t.slice(0),t.sort(k),f){for(;e=t[o++];)e===t[o]&&(i=r.push(o));for(;i--;)t.splice(r[i],1)}return l=null,t},i=st.getText=function(t){var e,n="",r=0,o=t.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=i(t)}else if(3===o||4===o)return t.nodeValue}else for(;e=t[r++];)n+=i(e);return n},(r=st.selectors={cacheLength:50,createPseudo:ct,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(et,nt),t[3]=(t[3]||t[4]||t[5]||"").replace(et,nt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||st.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&st.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return X.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&G.test(n)&&(e=a(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(et,nt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=A[t+" "];return e||(e=new RegExp("(^|"+M+")"+t+"("+M+"|$)"))&&A(t,(function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")}))},ATTR:function(t,e,n){return function(r){var i=st.attr(r,t);return null==i?"!="===e:!e||(i+="","="===e?i===n:"!="===e?i!==n:"^="===e?n&&0===i.indexOf(n):"*="===e?n&&i.indexOf(n)>-1:"$="===e?n&&i.slice(-n.length)===n:"~="===e?(" "+i.replace(U," ")+" ").indexOf(n)>-1:"|="===e&&(i===n||i.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,n,r,i){var o="nth"!==t.slice(0,3),a="last"!==t.slice(-4),s="of-type"===e;return 1===r&&0===i?function(t){return!!t.parentNode}:function(e,n,u){var c,l,f,h,p,d,g=o!==a?"nextSibling":"previousSibling",m=e.parentNode,v=s&&e.nodeName.toLowerCase(),y=!u&&!s,b=!1;if(m){if(o){for(;g;){for(h=e;h=h[g];)if(s?h.nodeName.toLowerCase()===v:1===h.nodeType)return!1;d=g="only"===t&&!d&&"nextSibling"}return!0}if(d=[a?m.firstChild:m.lastChild],a&&y){for(b=(p=(c=(l=(f=(h=m)[w]||(h[w]={}))[h.uniqueID]||(f[h.uniqueID]={}))[t]||[])[0]===N&&c[1])&&c[2],h=p&&m.childNodes[p];h=++p&&h&&h[g]||(b=p=0)||d.pop();)if(1===h.nodeType&&++b&&h===e){l[t]=[N,p,b];break}}else if(y&&(b=p=(c=(l=(f=(h=e)[w]||(h[w]={}))[h.uniqueID]||(f[h.uniqueID]={}))[t]||[])[0]===N&&c[1]),!1===b)for(;(h=++p&&h&&h[g]||(b=p=0)||d.pop())&&((s?h.nodeName.toLowerCase()!==v:1!==h.nodeType)||!++b||(y&&((l=(f=h[w]||(h[w]={}))[h.uniqueID]||(f[h.uniqueID]={}))[t]=[N,b]),h!==e)););return(b-=i)===r||b%r==0&&b/r>=0}}},PSEUDO:function(t,e){var n,i=r.pseudos[t]||r.setFilters[t.toLowerCase()]||st.error("unsupported pseudo: "+t);return i[w]?i(e):i.length>1?(n=[t,t,"",e],r.setFilters.hasOwnProperty(t.toLowerCase())?ct((function(t,n){for(var r,o=i(t,e),a=o.length;a--;)t[r=B(t,o[a])]=!(n[r]=o[a])})):function(t){return i(t,0,n)}):i}},pseudos:{not:ct((function(t){var e=[],n=[],r=s(t.replace(z,"$1"));return r[w]?ct((function(t,e,n,i){for(var o,a=r(t,null,i,[]),s=t.length;s--;)(o=a[s])&&(t[s]=!(e[s]=o))})):function(t,i,o){return e[0]=t,r(e,null,o,n),e[0]=null,!n.pop()}})),has:ct((function(t){return function(e){return st(t,e).length>0}})),contains:ct((function(t){return t=t.replace(et,nt),function(e){return(e.textContent||i(e)).indexOf(t)>-1}})),lang:ct((function(t){return Y.test(t||"")||st.error("unsupported lang: "+t),t=t.replace(et,nt).toLowerCase(),function(e){var n;do{if(n=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(n=n.toLowerCase())===t||0===n.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===d},focus:function(t){return t===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:gt(!1),disabled:gt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!r.pseudos.empty(t)},header:function(t){return K.test(t.nodeName)},input:function(t){return $.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:mt((function(){return[0]})),last:mt((function(t,e){return[e-1]})),eq:mt((function(t,e,n){return[n<0?n+e:n]})),even:mt((function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t})),odd:mt((function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t})),lt:mt((function(t,e,n){for(var r=n<0?n+e:n>e?e:n;--r>=0;)t.push(r);return t})),gt:mt((function(t,e,n){for(var r=n<0?n+e:n;++r<e;)t.push(r);return t}))}}).pseudos.nth=r.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})r.pseudos[e]=pt(e);for(e in{submit:!0,reset:!0})r.pseudos[e]=dt(e);function yt(){}function bt(t){for(var e=0,n=t.length,r="";e<n;e++)r+=t[e].value;return r}function wt(t,e,n){var r=e.dir,i=e.next,o=i||r,a=n&&"parentNode"===o,s=L++;return e.first?function(e,n,i){for(;e=e[r];)if(1===e.nodeType||a)return t(e,n,i);return!1}:function(e,n,u){var c,l,f,h=[N,s];if(u){for(;e=e[r];)if((1===e.nodeType||a)&&t(e,n,u))return!0}else for(;e=e[r];)if(1===e.nodeType||a)if(l=(f=e[w]||(e[w]={}))[e.uniqueID]||(f[e.uniqueID]={}),i&&i===e.nodeName.toLowerCase())e=e[r]||e;else{if((c=l[o])&&c[0]===N&&c[1]===s)return h[2]=c[2];if(l[o]=h,h[2]=t(e,n,u))return!0}return!1}}function xt(t){return t.length>1?function(e,n,r){for(var i=t.length;i--;)if(!t[i](e,n,r))return!1;return!0}:t[0]}function Nt(t,e,n,r,i){for(var o,a=[],s=0,u=t.length,c=null!=e;s<u;s++)(o=t[s])&&(n&&!n(o,r,i)||(a.push(o),c&&e.push(s)));return a}function Lt(t,e,n,r,i,o){return r&&!r[w]&&(r=Lt(r)),i&&!i[w]&&(i=Lt(i,o)),ct((function(o,a,s,u){var c,l,f,h=[],p=[],d=a.length,g=o||function(t,e,n){for(var r=0,i=e.length;r<i;r++)st(t,e[r],n);return n}(e||"*",s.nodeType?[s]:s,[]),m=!t||!o&&e?g:Nt(g,h,t,s,u),v=n?i||(o?t:d||r)?[]:a:m;if(n&&n(m,v,s,u),r)for(c=Nt(v,p),r(c,[],s,u),l=c.length;l--;)(f=c[l])&&(v[p[l]]=!(m[p[l]]=f));if(o){if(i||t){if(i){for(c=[],l=v.length;l--;)(f=v[l])&&c.push(m[l]=f);i(null,v=[],c,u)}for(l=v.length;l--;)(f=v[l])&&(c=i?B(o,f):h[l])>-1&&(o[c]=!(a[c]=f))}}else v=Nt(v===a?v.splice(d,v.length):v),i?i(null,a,v,u):I.apply(a,v)}))}function At(t){for(var e,n,i,o=t.length,a=r.relative[t[0].type],s=a||r.relative[" "],u=a?1:0,l=wt((function(t){return t===e}),s,!0),f=wt((function(t){return B(e,t)>-1}),s,!0),h=[function(t,n,r){var i=!a&&(r||n!==c)||((e=n).nodeType?l(t,n,r):f(t,n,r));return e=null,i}];u<o;u++)if(n=r.relative[t[u].type])h=[wt(xt(h),n)];else{if((n=r.filter[t[u].type].apply(null,t[u].matches))[w]){for(i=++u;i<o&&!r.relative[t[i].type];i++);return Lt(u>1&&xt(h),u>1&&bt(t.slice(0,u-1).concat({value:" "===t[u-2].type?"*":""})).replace(z,"$1"),n,u<i&&At(t.slice(u,i)),i<o&&At(t=t.slice(i)),i<o&&bt(t))}h.push(n)}return xt(h)}return yt.prototype=r.filters=r.pseudos,r.setFilters=new yt,a=st.tokenize=function(t,e){var n,i,o,a,s,u,c,l=S[t+" "];if(l)return e?0:l.slice(0);for(s=t,u=[],c=r.preFilter;s;){for(a in n&&!(i=H.exec(s))||(i&&(s=s.slice(i[0].length)||s),u.push(o=[])),n=!1,(i=W.exec(s))&&(n=i.shift(),o.push({value:n,type:i[0].replace(z," ")}),s=s.slice(n.length)),r.filter)!(i=X[a].exec(s))||c[a]&&!(i=c[a](i))||(n=i.shift(),o.push({value:n,type:a,matches:i}),s=s.slice(n.length));if(!n)break}return e?s.length:s?st.error(t):S(t,u).slice(0)},s=st.compile=function(t,e){var n,i=[],o=[],s=_[t+" "];if(!s){for(e||(e=a(t)),n=e.length;n--;)(s=At(e[n]))[w]?i.push(s):o.push(s);(s=_(t,function(t,e){var n=e.length>0,i=t.length>0,o=function(o,a,s,u,l){var f,d,m,v=0,y="0",b=o&&[],w=[],x=c,L=o||i&&r.find.TAG("*",l),A=N+=null==x?1:Math.random()||.1,S=L.length;for(l&&(c=a==p||a||l);y!==S&&null!=(f=L[y]);y++){if(i&&f){for(d=0,a||f.ownerDocument==p||(h(f),s=!g);m=t[d++];)if(m(f,a||p,s)){u.push(f);break}l&&(N=A)}n&&((f=!m&&f)&&v--,o&&b.push(f))}if(v+=y,n&&y!==v){for(d=0;m=e[d++];)m(b,w,a,s);if(o){if(v>0)for(;y--;)b[y]||w[y]||(w[y]=T.call(u));w=Nt(w)}I.apply(u,w),l&&!o&&w.length>0&&v+e.length>1&&st.uniqueSort(u)}return l&&(N=A,c=x),b};return n?ct(o):o}(o,i))).selector=t}return s},u=st.select=function(t,e,n,i){var o,u,c,l,f,h="function"==typeof t&&t,p=!i&&a(t=h.selector||t);if(n=n||[],1===p.length){if((u=p[0]=p[0].slice(0)).length>2&&"ID"===(c=u[0]).type&&9===e.nodeType&&g&&r.relative[u[1].type]){if(!(e=(r.find.ID(c.matches[0].replace(et,nt),e)||[])[0]))return n;h&&(e=e.parentNode),t=t.slice(u.shift().value.length)}for(o=X.needsContext.test(t)?0:u.length;o--&&(c=u[o],!r.relative[l=c.type]);)if((f=r.find[l])&&(i=f(c.matches[0].replace(et,nt),tt.test(u[0].type)&&vt(e.parentNode)||e))){if(u.splice(o,1),!(t=i.length&&bt(u)))return I.apply(n,i),n;break}}return(h||s(t,p))(i,e,!g,n,!e||tt.test(t)&&vt(e.parentNode)||e),n},n.sortStable=w.split("").sort(k).join("")===w,n.detectDuplicates=!!f,h(),n.sortDetached=lt((function(t){return 1&t.compareDocumentPosition(p.createElement("fieldset"))})),lt((function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")}))||ft("type|href|height|width",(function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)})),n.attributes&&lt((function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")}))||ft("value",(function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue})),lt((function(t){return null==t.getAttribute("disabled")}))||ft(O,(function(t,e,n){var r;if(!n)return!0===t[e]?e.toLowerCase():(r=t.getAttributeNode(e))&&r.specified?r.value:null})),st}(n);L.find=S,L.expr=S.selectors,L.expr[":"]=L.expr.pseudos,L.uniqueSort=L.unique=S.uniqueSort,L.text=S.getText,L.isXMLDoc=S.isXML,L.contains=S.contains,L.escapeSelector=S.escape;var _=function(t,e,n){for(var r=[],i=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(i&&L(t).is(n))break;r.push(t)}return r},C=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},k=L.expr.match.needsContext;function P(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var F=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function T(t,e,n){return v(e)?L.grep(t,(function(t,r){return!!e.call(t,r,t)!==n})):e.nodeType?L.grep(t,(function(t){return t===e!==n})):"string"!=typeof e?L.grep(t,(function(t){return l.call(e,t)>-1!==n})):L.filter(e,t,n)}L.filter=function(t,e,n){var r=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===r.nodeType?L.find.matchesSelector(r,t)?[r]:[]:L.find.matches(t,L.grep(e,(function(t){return 1===t.nodeType})))},L.fn.extend({find:function(t){var e,n,r=this.length,i=this;if("string"!=typeof t)return this.pushStack(L(t).filter((function(){for(e=0;e<r;e++)if(L.contains(i[e],this))return!0})));for(n=this.pushStack([]),e=0;e<r;e++)L.find(t,i[e],n);return r>1?L.uniqueSort(n):n},filter:function(t){return this.pushStack(T(this,t||[],!1))},not:function(t){return this.pushStack(T(this,t||[],!0))},is:function(t){return!!T(this,"string"==typeof t&&k.test(t)?L(t):t||[],!1).length}});var j,I=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(L.fn.init=function(t,e,n){var r,i;if(!t)return this;if(n=n||j,"string"==typeof t){if(!(r="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:I.exec(t))||!r[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(r[1]){if(e=e instanceof L?e[0]:e,L.merge(this,L.parseHTML(r[1],e&&e.nodeType?e.ownerDocument||e:b,!0)),F.test(r[1])&&L.isPlainObject(e))for(r in e)v(this[r])?this[r](e[r]):this.attr(r,e[r]);return this}return(i=b.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):v(t)?void 0!==n.ready?n.ready(t):t(L):L.makeArray(t,this)}).prototype=L.fn,j=L(b);var E=/^(?:parents|prev(?:Until|All))/,B={children:!0,contents:!0,next:!0,prev:!0};function O(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}L.fn.extend({has:function(t){var e=L(t,this),n=e.length;return this.filter((function(){for(var t=0;t<n;t++)if(L.contains(this,e[t]))return!0}))},closest:function(t,e){var n,r=0,i=this.length,o=[],a="string"!=typeof t&&L(t);if(!k.test(t))for(;r<i;r++)for(n=this[r];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&L.find.matchesSelector(n,t))){o.push(n);break}return this.pushStack(o.length>1?L.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?l.call(L(t),this[0]):l.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(L.uniqueSort(L.merge(this.get(),L(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),L.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return _(t,"parentNode")},parentsUntil:function(t,e,n){return _(t,"parentNode",n)},next:function(t){return O(t,"nextSibling")},prev:function(t){return O(t,"previousSibling")},nextAll:function(t){return _(t,"nextSibling")},prevAll:function(t){return _(t,"previousSibling")},nextUntil:function(t,e,n){return _(t,"nextSibling",n)},prevUntil:function(t,e,n){return _(t,"previousSibling",n)},siblings:function(t){return C((t.parentNode||{}).firstChild,t)},children:function(t){return C(t.firstChild)},contents:function(t){return null!=t.contentDocument&&a(t.contentDocument)?t.contentDocument:(P(t,"template")&&(t=t.content||t),L.merge([],t.childNodes))}},(function(t,e){L.fn[t]=function(n,r){var i=L.map(this,e,n);return"Until"!==t.slice(-5)&&(r=n),r&&"string"==typeof r&&(i=L.filter(r,i)),this.length>1&&(B[t]||L.uniqueSort(i),E.test(t)&&i.reverse()),this.pushStack(i)}}));var M=/[^\x20\t\r\n\f]+/g;function q(t){return t}function D(t){throw t}function R(t,e,n,r){var i;try{t&&v(i=t.promise)?i.call(t).done(e).fail(n):t&&v(i=t.then)?i.call(t,e,n):e.apply(void 0,[t].slice(r))}catch(t){n.apply(void 0,[t])}}L.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return L.each(t.match(M)||[],(function(t,n){e[n]=!0})),e}(t):L.extend({},t);var e,n,r,i,o=[],a=[],s=-1,u=function(){for(i=i||t.once,r=e=!0;a.length;s=-1)for(n=a.shift();++s<o.length;)!1===o[s].apply(n[0],n[1])&&t.stopOnFalse&&(s=o.length,n=!1);t.memory||(n=!1),e=!1,i&&(o=n?[]:"")},c={add:function(){return o&&(n&&!e&&(s=o.length-1,a.push(n)),function e(n){L.each(n,(function(n,r){v(r)?t.unique&&c.has(r)||o.push(r):r&&r.length&&"string"!==N(r)&&e(r)}))}(arguments),n&&!e&&u()),this},remove:function(){return L.each(arguments,(function(t,e){for(var n;(n=L.inArray(e,o,n))>-1;)o.splice(n,1),n<=s&&s--})),this},has:function(t){return t?L.inArray(t,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return i=a=[],o=n="",this},disabled:function(){return!o},lock:function(){return i=a=[],n||e||(o=n=""),this},locked:function(){return!!i},fireWith:function(t,n){return i||(n=[t,(n=n||[]).slice?n.slice():n],a.push(n),e||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!r}};return c},L.extend({Deferred:function(t){var e=[["notify","progress",L.Callbacks("memory"),L.Callbacks("memory"),2],["resolve","done",L.Callbacks("once memory"),L.Callbacks("once memory"),0,"resolved"],["reject","fail",L.Callbacks("once memory"),L.Callbacks("once memory"),1,"rejected"]],r="pending",i={state:function(){return r},always:function(){return o.done(arguments).fail(arguments),this},catch:function(t){return i.then(null,t)},pipe:function(){var t=arguments;return L.Deferred((function(n){L.each(e,(function(e,r){var i=v(t[r[4]])&&t[r[4]];o[r[1]]((function(){var t=i&&i.apply(this,arguments);t&&v(t.promise)?t.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[r[0]+"With"](this,i?[t]:arguments)}))})),t=null})).promise()},then:function(t,r,i){var o=0;function a(t,e,r,i){return function(){var s=this,u=arguments,c=function(){var n,c;if(!(t<o)){if((n=r.apply(s,u))===e.promise())throw new TypeError("Thenable self-resolution");c=n&&("object"==typeof n||"function"==typeof n)&&n.then,v(c)?i?c.call(n,a(o,e,q,i),a(o,e,D,i)):(o++,c.call(n,a(o,e,q,i),a(o,e,D,i),a(o,e,q,e.notifyWith))):(r!==q&&(s=void 0,u=[n]),(i||e.resolveWith)(s,u))}},l=i?c:function(){try{c()}catch(n){L.Deferred.exceptionHook&&L.Deferred.exceptionHook(n,l.stackTrace),t+1>=o&&(r!==D&&(s=void 0,u=[n]),e.rejectWith(s,u))}};t?l():(L.Deferred.getStackHook&&(l.stackTrace=L.Deferred.getStackHook()),n.setTimeout(l))}}return L.Deferred((function(n){e[0][3].add(a(0,n,v(i)?i:q,n.notifyWith)),e[1][3].add(a(0,n,v(t)?t:q)),e[2][3].add(a(0,n,v(r)?r:D))})).promise()},promise:function(t){return null!=t?L.extend(t,i):i}},o={};return L.each(e,(function(t,n){var a=n[2],s=n[5];i[n[1]]=a.add,s&&a.add((function(){r=s}),e[3-t][2].disable,e[3-t][3].disable,e[0][2].lock,e[0][3].lock),a.add(n[3].fire),o[n[0]]=function(){return o[n[0]+"With"](this===o?void 0:this,arguments),this},o[n[0]+"With"]=a.fireWith})),i.promise(o),t&&t.call(o,o),o},when:function(t){var e=arguments.length,n=e,r=Array(n),i=s.call(arguments),o=L.Deferred(),a=function(t){return function(n){r[t]=this,i[t]=arguments.length>1?s.call(arguments):n,--e||o.resolveWith(r,i)}};if(e<=1&&(R(t,o.done(a(n)).resolve,o.reject,!e),"pending"===o.state()||v(i[n]&&i[n].then)))return o.then();for(;n--;)R(i[n],a(n),o.reject);return o.promise()}});var U=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;L.Deferred.exceptionHook=function(t,e){n.console&&n.console.warn&&t&&U.test(t.name)&&n.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},L.readyException=function(t){n.setTimeout((function(){throw t}))};var z=L.Deferred();function H(){b.removeEventListener("DOMContentLoaded",H),n.removeEventListener("load",H),L.ready()}L.fn.ready=function(t){return z.then(t).catch((function(t){L.readyException(t)})),this},L.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--L.readyWait:L.isReady)||(L.isReady=!0,!0!==t&&--L.readyWait>0||z.resolveWith(b,[L]))}}),L.ready.then=z.then,"complete"===b.readyState||"loading"!==b.readyState&&!b.documentElement.doScroll?n.setTimeout(L.ready):(b.addEventListener("DOMContentLoaded",H),n.addEventListener("load",H));var W=function(t,e,n,r,i,o,a){var s=0,u=t.length,c=null==n;if("object"===N(n))for(s in i=!0,n)W(t,e,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,v(r)||(a=!0),c&&(a?(e.call(t,r),e=null):(c=e,e=function(t,e,n){return c.call(L(t),n)})),e))for(;s<u;s++)e(t[s],n,a?r:r.call(t[s],s,e(t[s],n)));return i?t:c?e.call(t):u?e(t[0],n):o},V=/^-ms-/,G=/-([a-z])/g;function Y(t,e){return e.toUpperCase()}function X(t){return t.replace(V,"ms-").replace(G,Y)}var J=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function $(){this.expando=L.expando+$.uid++}$.uid=1,$.prototype={cache:function(t){var e=t[this.expando];return e||(e={},J(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var r,i=this.cache(t);if("string"==typeof e)i[X(e)]=n;else for(r in e)i[X(r)]=e[r];return i},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][X(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,r=t[this.expando];if(void 0!==r){if(void 0!==e){n=(e=Array.isArray(e)?e.map(X):(e=X(e))in r?[e]:e.match(M)||[]).length;for(;n--;)delete r[e[n]]}(void 0===e||L.isEmptyObject(r))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!L.isEmptyObject(e)}};var K=new $,Q=new $,Z=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,tt=/[A-Z]/g;function et(t,e,n){var r;if(void 0===n&&1===t.nodeType)if(r="data-"+e.replace(tt,"-$&").toLowerCase(),"string"==typeof(n=t.getAttribute(r))){try{n=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:Z.test(t)?JSON.parse(t):t)}(n)}catch(t){}Q.set(t,e,n)}else n=void 0;return n}L.extend({hasData:function(t){return Q.hasData(t)||K.hasData(t)},data:function(t,e,n){return Q.access(t,e,n)},removeData:function(t,e){Q.remove(t,e)},_data:function(t,e,n){return K.access(t,e,n)},_removeData:function(t,e){K.remove(t,e)}}),L.fn.extend({data:function(t,e){var n,r,i,o=this[0],a=o&&o.attributes;if(void 0===t){if(this.length&&(i=Q.get(o),1===o.nodeType&&!K.get(o,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&0===(r=a[n].name).indexOf("data-")&&(r=X(r.slice(5)),et(o,r,i[r]));K.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof t?this.each((function(){Q.set(this,t)})):W(this,(function(e){var n;if(o&&void 0===e)return void 0!==(n=Q.get(o,t))||void 0!==(n=et(o,t))?n:void 0;this.each((function(){Q.set(this,t,e)}))}),null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each((function(){Q.remove(this,t)}))}}),L.extend({queue:function(t,e,n){var r;if(t)return e=(e||"fx")+"queue",r=K.get(t,e),n&&(!r||Array.isArray(n)?r=K.access(t,e,L.makeArray(n)):r.push(n)),r||[]},dequeue:function(t,e){e=e||"fx";var n=L.queue(t,e),r=n.length,i=n.shift(),o=L._queueHooks(t,e);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===e&&n.unshift("inprogress"),delete o.stop,i.call(t,(function(){L.dequeue(t,e)}),o)),!r&&o&&o.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return K.get(t,n)||K.access(t,n,{empty:L.Callbacks("once memory").add((function(){K.remove(t,[e+"queue",n])}))})}}),L.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?L.queue(this[0],t):void 0===e?this:this.each((function(){var n=L.queue(this,t,e);L._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&L.dequeue(this,t)}))},dequeue:function(t){return this.each((function(){L.dequeue(this,t)}))},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,r=1,i=L.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)(n=K.get(o[a],t+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(e)}});var nt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,rt=new RegExp("^(?:([+-])=|)("+nt+")([a-z%]*)$","i"),it=["Top","Right","Bottom","Left"],ot=b.documentElement,at=function(t){return L.contains(t.ownerDocument,t)},st={composed:!0};ot.getRootNode&&(at=function(t){return L.contains(t.ownerDocument,t)||t.getRootNode(st)===t.ownerDocument});var ut=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&at(t)&&"none"===L.css(t,"display")};function ct(t,e,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return L.css(t,e,"")},u=s(),c=n&&n[3]||(L.cssNumber[e]?"":"px"),l=t.nodeType&&(L.cssNumber[e]||"px"!==c&&+u)&&rt.exec(L.css(t,e));if(l&&l[3]!==c){for(u/=2,c=c||l[3],l=+u||1;a--;)L.style(t,e,l+c),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),l/=o;l*=2,L.style(t,e,l+c),n=n||[]}return n&&(l=+l||+u||0,i=n[1]?l+(n[1]+1)*n[2]:+n[2],r&&(r.unit=c,r.start=l,r.end=i)),i}var lt={};function ft(t){var e,n=t.ownerDocument,r=t.nodeName,i=lt[r];return i||(e=n.body.appendChild(n.createElement(r)),i=L.css(e,"display"),e.parentNode.removeChild(e),"none"===i&&(i="block"),lt[r]=i,i)}function ht(t,e){for(var n,r,i=[],o=0,a=t.length;o<a;o++)(r=t[o]).style&&(n=r.style.display,e?("none"===n&&(i[o]=K.get(r,"display")||null,i[o]||(r.style.display="")),""===r.style.display&&ut(r)&&(i[o]=ft(r))):"none"!==n&&(i[o]="none",K.set(r,"display",n)));for(o=0;o<a;o++)null!=i[o]&&(t[o].style.display=i[o]);return t}L.fn.extend({show:function(){return ht(this,!0)},hide:function(){return ht(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each((function(){ut(this)?L(this).show():L(this).hide()}))}});var pt,dt,gt=/^(?:checkbox|radio)$/i,mt=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,vt=/^$|^module$|\/(?:java|ecma)script/i;pt=b.createDocumentFragment().appendChild(b.createElement("div")),(dt=b.createElement("input")).setAttribute("type","radio"),dt.setAttribute("checked","checked"),dt.setAttribute("name","t"),pt.appendChild(dt),m.checkClone=pt.cloneNode(!0).cloneNode(!0).lastChild.checked,pt.innerHTML="<textarea>x</textarea>",m.noCloneChecked=!!pt.cloneNode(!0).lastChild.defaultValue,pt.innerHTML="<option></option>",m.option=!!pt.lastChild;var yt={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function bt(t,e){var n;return n=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&P(t,e)?L.merge([t],n):n}function wt(t,e){for(var n=0,r=t.length;n<r;n++)K.set(t[n],"globalEval",!e||K.get(e[n],"globalEval"))}yt.tbody=yt.tfoot=yt.colgroup=yt.caption=yt.thead,yt.th=yt.td,m.option||(yt.optgroup=yt.option=[1,"<select multiple='multiple'>","</select>"]);var xt=/<|&#?\w+;/;function Nt(t,e,n,r,i){for(var o,a,s,u,c,l,f=e.createDocumentFragment(),h=[],p=0,d=t.length;p<d;p++)if((o=t[p])||0===o)if("object"===N(o))L.merge(h,o.nodeType?[o]:o);else if(xt.test(o)){for(a=a||f.appendChild(e.createElement("div")),s=(mt.exec(o)||["",""])[1].toLowerCase(),u=yt[s]||yt._default,a.innerHTML=u[1]+L.htmlPrefilter(o)+u[2],l=u[0];l--;)a=a.lastChild;L.merge(h,a.childNodes),(a=f.firstChild).textContent=""}else h.push(e.createTextNode(o));for(f.textContent="",p=0;o=h[p++];)if(r&&L.inArray(o,r)>-1)i&&i.push(o);else if(c=at(o),a=bt(f.appendChild(o),"script"),c&&wt(a),n)for(l=0;o=a[l++];)vt.test(o.type||"")&&n.push(o);return f}var Lt=/^key/,At=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,St=/^([^.]*)(?:\.(.+)|)/;function _t(){return!0}function Ct(){return!1}function kt(t,e){return t===function(){try{return b.activeElement}catch(t){}}()==("focus"===e)}function Pt(t,e,n,r,i,o){var a,s;if("object"==typeof e){for(s in"string"!=typeof n&&(r=r||n,n=void 0),e)Pt(t,s,n,r,e[s],o);return t}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Ct;else if(!i)return t;return 1===o&&(a=i,(i=function(t){return L().off(t),a.apply(this,arguments)}).guid=a.guid||(a.guid=L.guid++)),t.each((function(){L.event.add(this,e,i,r,n)}))}function Ft(t,e,n){n?(K.set(t,e,!1),L.event.add(t,e,{namespace:!1,handler:function(t){var r,i,o=K.get(this,e);if(1&t.isTrigger&&this[e]){if(o.length)(L.event.special[e]||{}).delegateType&&t.stopPropagation();else if(o=s.call(arguments),K.set(this,e,o),r=n(this,e),this[e](),o!==(i=K.get(this,e))||r?K.set(this,e,!1):i={},o!==i)return t.stopImmediatePropagation(),t.preventDefault(),i.value}else o.length&&(K.set(this,e,{value:L.event.trigger(L.extend(o[0],L.Event.prototype),o.slice(1),this)}),t.stopImmediatePropagation())}})):void 0===K.get(t,e)&&L.event.add(t,e,_t)}L.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,c,l,f,h,p,d,g,m=K.get(t);if(J(t))for(n.handler&&(n=(o=n).handler,i=o.selector),i&&L.find.matchesSelector(ot,i),n.guid||(n.guid=L.guid++),(u=m.events)||(u=m.events=Object.create(null)),(a=m.handle)||(a=m.handle=function(e){return void 0!==L&&L.event.triggered!==e.type?L.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(M)||[""]).length;c--;)p=g=(s=St.exec(e[c])||[])[1],d=(s[2]||"").split(".").sort(),p&&(f=L.event.special[p]||{},p=(i?f.delegateType:f.bindType)||p,f=L.event.special[p]||{},l=L.extend({type:p,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&L.expr.match.needsContext.test(i),namespace:d.join(".")},o),(h=u[p])||((h=u[p]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,d,a)||t.addEventListener&&t.addEventListener(p,a)),f.add&&(f.add.call(t,l),l.handler.guid||(l.handler.guid=n.guid)),i?h.splice(h.delegateCount++,0,l):h.push(l),L.event.global[p]=!0)},remove:function(t,e,n,r,i){var o,a,s,u,c,l,f,h,p,d,g,m=K.hasData(t)&&K.get(t);if(m&&(u=m.events)){for(c=(e=(e||"").match(M)||[""]).length;c--;)if(p=g=(s=St.exec(e[c])||[])[1],d=(s[2]||"").split(".").sort(),p){for(f=L.event.special[p]||{},h=u[p=(r?f.delegateType:f.bindType)||p]||[],s=s[2]&&new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=h.length;o--;)l=h[o],!i&&g!==l.origType||n&&n.guid!==l.guid||s&&!s.test(l.namespace)||r&&r!==l.selector&&("**"!==r||!l.selector)||(h.splice(o,1),l.selector&&h.delegateCount--,f.remove&&f.remove.call(t,l));a&&!h.length&&(f.teardown&&!1!==f.teardown.call(t,d,m.handle)||L.removeEvent(t,p,m.handle),delete u[p])}else for(p in u)L.event.remove(t,p+e[c],n,r,!0);L.isEmptyObject(u)&&K.remove(t,"handle events")}},dispatch:function(t){var e,n,r,i,o,a,s=new Array(arguments.length),u=L.event.fix(t),c=(K.get(this,"events")||Object.create(null))[u.type]||[],l=L.event.special[u.type]||{};for(s[0]=u,e=1;e<arguments.length;e++)s[e]=arguments[e];if(u.delegateTarget=this,!l.preDispatch||!1!==l.preDispatch.call(this,u)){for(a=L.event.handlers.call(this,u,c),e=0;(i=a[e++])&&!u.isPropagationStopped();)for(u.currentTarget=i.elem,n=0;(o=i.handlers[n++])&&!u.isImmediatePropagationStopped();)u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((L.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,u),u.result}},handlers:function(t,e){var n,r,i,o,a,s=[],u=e.delegateCount,c=t.target;if(u&&c.nodeType&&!("click"===t.type&&t.button>=1))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=e[n]).selector+" "]&&(a[i]=r.needsContext?L(i,this).index(c)>-1:L.find(i,this,null,[c]).length),a[i]&&o.push(r);o.length&&s.push({elem:c,handlers:o})}return c=this,u<e.length&&s.push({elem:c,handlers:e.slice(u)}),s},addProp:function(t,e){Object.defineProperty(L.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[L.expando]?t:new L.Event(t)},special:{load:{noBubble:!0},click:{setup:function(t){var e=this||t;return gt.test(e.type)&&e.click&&P(e,"input")&&Ft(e,"click",_t),!1},trigger:function(t){var e=this||t;return gt.test(e.type)&&e.click&&P(e,"input")&&Ft(e,"click"),!0},_default:function(t){var e=t.target;return gt.test(e.type)&&e.click&&P(e,"input")&&K.get(e,"click")||P(e,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},L.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},L.Event=function(t,e){if(!(this instanceof L.Event))return new L.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?_t:Ct,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&L.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[L.expando]=!0},L.Event.prototype={constructor:L.Event,isDefaultPrevented:Ct,isPropagationStopped:Ct,isImmediatePropagationStopped:Ct,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=_t,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=_t,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=_t,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},L.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Lt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&At.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},L.event.addProp),L.each({focus:"focusin",blur:"focusout"},(function(t,e){L.event.special[t]={setup:function(){return Ft(this,t,kt),!1},trigger:function(){return Ft(this,t),!0},delegateType:e}})),L.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(t,e){L.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,r=this,i=t.relatedTarget,o=t.handleObj;return i&&(i===r||L.contains(r,i))||(t.type=o.origType,n=o.handler.apply(this,arguments),t.type=e),n}}})),L.fn.extend({on:function(t,e,n,r){return Pt(this,t,e,n,r)},one:function(t,e,n,r){return Pt(this,t,e,n,r,1)},off:function(t,e,n){var r,i;if(t&&t.preventDefault&&t.handleObj)return r=t.handleObj,L(t.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof t){for(i in t)this.off(i,e,t[i]);return this}return!1!==e&&"function"!=typeof e||(n=e,e=void 0),!1===n&&(n=Ct),this.each((function(){L.event.remove(this,t,n,e)}))}});var Tt=/<script|<style|<link/i,jt=/checked\s*(?:[^=]|=\s*.checked.)/i,It=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Et(t,e){return P(t,"table")&&P(11!==e.nodeType?e:e.firstChild,"tr")&&L(t).children("tbody")[0]||t}function Bt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Ot(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function Mt(t,e){var n,r,i,o,a,s;if(1===e.nodeType){if(K.hasData(t)&&(s=K.get(t).events))for(i in K.remove(e,"handle events"),s)for(n=0,r=s[i].length;n<r;n++)L.event.add(e,i,s[i][n]);Q.hasData(t)&&(o=Q.access(t),a=L.extend({},o),Q.set(e,a))}}function qt(t,e){var n=e.nodeName.toLowerCase();"input"===n&&gt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}function Dt(t,e,n,r){e=u(e);var i,o,a,s,c,l,f=0,h=t.length,p=h-1,d=e[0],g=v(d);if(g||h>1&&"string"==typeof d&&!m.checkClone&&jt.test(d))return t.each((function(i){var o=t.eq(i);g&&(e[0]=d.call(this,i,o.html())),Dt(o,e,n,r)}));if(h&&(o=(i=Nt(e,t[0].ownerDocument,!1,t,r)).firstChild,1===i.childNodes.length&&(i=o),o||r)){for(s=(a=L.map(bt(i,"script"),Bt)).length;f<h;f++)c=i,f!==p&&(c=L.clone(c,!0,!0),s&&L.merge(a,bt(c,"script"))),n.call(t[f],c,f);if(s)for(l=a[a.length-1].ownerDocument,L.map(a,Ot),f=0;f<s;f++)c=a[f],vt.test(c.type||"")&&!K.access(c,"globalEval")&&L.contains(l,c)&&(c.src&&"module"!==(c.type||"").toLowerCase()?L._evalUrl&&!c.noModule&&L._evalUrl(c.src,{nonce:c.nonce||c.getAttribute("nonce")},l):x(c.textContent.replace(It,""),c,l))}return t}function Rt(t,e,n){for(var r,i=e?L.filter(e,t):t,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||L.cleanData(bt(r)),r.parentNode&&(n&&at(r)&&wt(bt(r,"script")),r.parentNode.removeChild(r));return t}L.extend({htmlPrefilter:function(t){return t},clone:function(t,e,n){var r,i,o,a,s=t.cloneNode(!0),u=at(t);if(!(m.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||L.isXMLDoc(t)))for(a=bt(s),r=0,i=(o=bt(t)).length;r<i;r++)qt(o[r],a[r]);if(e)if(n)for(o=o||bt(t),a=a||bt(s),r=0,i=o.length;r<i;r++)Mt(o[r],a[r]);else Mt(t,s);return(a=bt(s,"script")).length>0&&wt(a,!u&&bt(t,"script")),s},cleanData:function(t){for(var e,n,r,i=L.event.special,o=0;void 0!==(n=t[o]);o++)if(J(n)){if(e=n[K.expando]){if(e.events)for(r in e.events)i[r]?L.event.remove(n,r):L.removeEvent(n,r,e.handle);n[K.expando]=void 0}n[Q.expando]&&(n[Q.expando]=void 0)}}}),L.fn.extend({detach:function(t){return Rt(this,t,!0)},remove:function(t){return Rt(this,t)},text:function(t){return W(this,(function(t){return void 0===t?L.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)}))}),null,t,arguments.length)},append:function(){return Dt(this,arguments,(function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Et(this,t).appendChild(t)}))},prepend:function(){return Dt(this,arguments,(function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=Et(this,t);e.insertBefore(t,e.firstChild)}}))},before:function(){return Dt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this)}))},after:function(){return Dt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)}))},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(L.cleanData(bt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map((function(){return L.clone(this,t,e)}))},html:function(t){return W(this,(function(t){var e=this[0]||{},n=0,r=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Tt.test(t)&&!yt[(mt.exec(t)||["",""])[1].toLowerCase()]){t=L.htmlPrefilter(t);try{for(;n<r;n++)1===(e=this[n]||{}).nodeType&&(L.cleanData(bt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)}),null,t,arguments.length)},replaceWith:function(){var t=[];return Dt(this,arguments,(function(e){var n=this.parentNode;L.inArray(this,t)<0&&(L.cleanData(bt(this)),n&&n.replaceChild(e,this))}),t)}}),L.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(t,e){L.fn[t]=function(t){for(var n,r=[],i=L(t),o=i.length-1,a=0;a<=o;a++)n=a===o?this:this.clone(!0),L(i[a])[e](n),c.apply(r,n.get());return this.pushStack(r)}}));var Ut=new RegExp("^("+nt+")(?!px)[a-z%]+$","i"),zt=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=n),e.getComputedStyle(t)},Ht=function(t,e,n){var r,i,o={};for(i in e)o[i]=t.style[i],t.style[i]=e[i];for(i in r=n.call(t),e)t.style[i]=o[i];return r},Wt=new RegExp(it.join("|"),"i");function Vt(t,e,n){var r,i,o,a,s=t.style;return(n=n||zt(t))&&(""!==(a=n.getPropertyValue(e)||n[e])||at(t)||(a=L.style(t,e)),!m.pixelBoxStyles()&&Ut.test(a)&&Wt.test(e)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+"":a}function Gt(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(l){c.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ot.appendChild(c).appendChild(l);var t=n.getComputedStyle(l);r="1%"!==t.top,u=12===e(t.marginLeft),l.style.right="60%",a=36===e(t.right),i=36===e(t.width),l.style.position="absolute",o=12===e(l.offsetWidth/3),ot.removeChild(c),l=null}}function e(t){return Math.round(parseFloat(t))}var r,i,o,a,s,u,c=b.createElement("div"),l=b.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",m.clearCloneStyle="content-box"===l.style.backgroundClip,L.extend(m,{boxSizingReliable:function(){return t(),i},pixelBoxStyles:function(){return t(),a},pixelPosition:function(){return t(),r},reliableMarginLeft:function(){return t(),u},scrollboxSize:function(){return t(),o},reliableTrDimensions:function(){var t,e,r,i;return null==s&&(t=b.createElement("table"),e=b.createElement("tr"),r=b.createElement("div"),t.style.cssText="position:absolute;left:-11111px",e.style.height="1px",r.style.height="9px",ot.appendChild(t).appendChild(e).appendChild(r),i=n.getComputedStyle(e),s=parseInt(i.height)>3,ot.removeChild(t)),s}}))}();var Yt=["Webkit","Moz","ms"],Xt=b.createElement("div").style,Jt={};function $t(t){var e=L.cssProps[t]||Jt[t];return e||(t in Xt?t:Jt[t]=function(t){for(var e=t[0].toUpperCase()+t.slice(1),n=Yt.length;n--;)if((t=Yt[n]+e)in Xt)return t}(t)||t)}var Kt=/^(none|table(?!-c[ea]).+)/,Qt=/^--/,Zt={position:"absolute",visibility:"hidden",display:"block"},te={letterSpacing:"0",fontWeight:"400"};function ee(t,e,n){var r=rt.exec(e);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):e}function ne(t,e,n,r,i,o){var a="width"===e?1:0,s=0,u=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(u+=L.css(t,n+it[a],!0,i)),r?("content"===n&&(u-=L.css(t,"padding"+it[a],!0,i)),"margin"!==n&&(u-=L.css(t,"border"+it[a]+"Width",!0,i))):(u+=L.css(t,"padding"+it[a],!0,i),"padding"!==n?u+=L.css(t,"border"+it[a]+"Width",!0,i):s+=L.css(t,"border"+it[a]+"Width",!0,i));return!r&&o>=0&&(u+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-o-u-s-.5))||0),u}function re(t,e,n){var r=zt(t),i=(!m.boxSizingReliable()||n)&&"border-box"===L.css(t,"boxSizing",!1,r),o=i,a=Vt(t,e,r),s="offset"+e[0].toUpperCase()+e.slice(1);if(Ut.test(a)){if(!n)return a;a="auto"}return(!m.boxSizingReliable()&&i||!m.reliableTrDimensions()&&P(t,"tr")||"auto"===a||!parseFloat(a)&&"inline"===L.css(t,"display",!1,r))&&t.getClientRects().length&&(i="border-box"===L.css(t,"boxSizing",!1,r),(o=s in t)&&(a=t[s])),(a=parseFloat(a)||0)+ne(t,e,n||(i?"border":"content"),o,r,a)+"px"}function ie(t,e,n,r,i){return new ie.prototype.init(t,e,n,r,i)}L.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=Vt(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,n,r){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var i,o,a,s=X(e),u=Qt.test(e),c=t.style;if(u||(e=$t(s)),a=L.cssHooks[e]||L.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(t,!1,r))?i:c[e];"string"===(o=typeof n)&&(i=rt.exec(n))&&i[1]&&(n=ct(t,e,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(L.cssNumber[s]?"":"px")),m.clearCloneStyle||""!==n||0!==e.indexOf("background")||(c[e]="inherit"),a&&"set"in a&&void 0===(n=a.set(t,n,r))||(u?c.setProperty(e,n):c[e]=n))}},css:function(t,e,n,r){var i,o,a,s=X(e);return Qt.test(e)||(e=$t(s)),(a=L.cssHooks[e]||L.cssHooks[s])&&"get"in a&&(i=a.get(t,!0,n)),void 0===i&&(i=Vt(t,e,r)),"normal"===i&&e in te&&(i=te[e]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),L.each(["height","width"],(function(t,e){L.cssHooks[e]={get:function(t,n,r){if(n)return!Kt.test(L.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?re(t,e,r):Ht(t,Zt,(function(){return re(t,e,r)}))},set:function(t,n,r){var i,o=zt(t),a=!m.scrollboxSize()&&"absolute"===o.position,s=(a||r)&&"border-box"===L.css(t,"boxSizing",!1,o),u=r?ne(t,e,r,s,o):0;return s&&a&&(u-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(o[e])-ne(t,e,"border",!1,o)-.5)),u&&(i=rt.exec(n))&&"px"!==(i[3]||"px")&&(t.style[e]=n,n=L.css(t,e)),ee(0,n,u)}}})),L.cssHooks.marginLeft=Gt(m.reliableMarginLeft,(function(t,e){if(e)return(parseFloat(Vt(t,"marginLeft"))||t.getBoundingClientRect().left-Ht(t,{marginLeft:0},(function(){return t.getBoundingClientRect().left})))+"px"})),L.each({margin:"",padding:"",border:"Width"},(function(t,e){L.cssHooks[t+e]={expand:function(n){for(var r=0,i={},o="string"==typeof n?n.split(" "):[n];r<4;r++)i[t+it[r]+e]=o[r]||o[r-2]||o[0];return i}},"margin"!==t&&(L.cssHooks[t+e].set=ee)})),L.fn.extend({css:function(t,e){return W(this,(function(t,e,n){var r,i,o={},a=0;if(Array.isArray(e)){for(r=zt(t),i=e.length;a<i;a++)o[e[a]]=L.css(t,e[a],!1,r);return o}return void 0!==n?L.style(t,e,n):L.css(t,e)}),t,e,arguments.length>1)}}),L.Tween=ie,ie.prototype={constructor:ie,init:function(t,e,n,r,i,o){this.elem=t,this.prop=n,this.easing=i||L.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=r,this.unit=o||(L.cssNumber[n]?"":"px")},cur:function(){var t=ie.propHooks[this.prop];return t&&t.get?t.get(this):ie.propHooks._default.get(this)},run:function(t){var e,n=ie.propHooks[this.prop];return this.options.duration?this.pos=e=L.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):ie.propHooks._default.set(this),this}},ie.prototype.init.prototype=ie.prototype,ie.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=L.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){L.fx.step[t.prop]?L.fx.step[t.prop](t):1!==t.elem.nodeType||!L.cssHooks[t.prop]&&null==t.elem.style[$t(t.prop)]?t.elem[t.prop]=t.now:L.style(t.elem,t.prop,t.now+t.unit)}}},ie.propHooks.scrollTop=ie.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},L.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},L.fx=ie.prototype.init,L.fx.step={};var oe,ae,se=/^(?:toggle|show|hide)$/,ue=/queueHooks$/;function ce(){ae&&(!1===b.hidden&&n.requestAnimationFrame?n.requestAnimationFrame(ce):n.setTimeout(ce,L.fx.interval),L.fx.tick())}function le(){return n.setTimeout((function(){oe=void 0})),oe=Date.now()}function fe(t,e){var n,r=0,i={height:t};for(e=e?1:0;r<4;r+=2-e)i["margin"+(n=it[r])]=i["padding"+n]=t;return e&&(i.opacity=i.width=t),i}function he(t,e,n){for(var r,i=(pe.tweeners[e]||[]).concat(pe.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,e,t))return r}function pe(t,e,n){var r,i,o=0,a=pe.prefilters.length,s=L.Deferred().always((function(){delete u.elem})),u=function(){if(i)return!1;for(var e=oe||le(),n=Math.max(0,c.startTime+c.duration-e),r=1-(n/c.duration||0),o=0,a=c.tweens.length;o<a;o++)c.tweens[o].run(r);return s.notifyWith(t,[c,r,n]),r<1&&a?n:(a||s.notifyWith(t,[c,1,0]),s.resolveWith(t,[c]),!1)},c=s.promise({elem:t,props:L.extend({},e),opts:L.extend(!0,{specialEasing:{},easing:L.easing._default},n),originalProperties:e,originalOptions:n,startTime:oe||le(),duration:n.duration,tweens:[],createTween:function(e,n){var r=L.Tween(t,c.opts,e,n,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(r),r},stop:function(e){var n=0,r=e?c.tweens.length:0;if(i)return this;for(i=!0;n<r;n++)c.tweens[n].run(1);return e?(s.notifyWith(t,[c,1,0]),s.resolveWith(t,[c,e])):s.rejectWith(t,[c,e]),this}}),l=c.props;for(!function(t,e){var n,r,i,o,a;for(n in t)if(i=e[r=X(n)],o=t[n],Array.isArray(o)&&(i=o[1],o=t[n]=o[0]),n!==r&&(t[r]=o,delete t[n]),(a=L.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete t[r],o)n in t||(t[n]=o[n],e[n]=i);else e[r]=i}(l,c.opts.specialEasing);o<a;o++)if(r=pe.prefilters[o].call(c,t,l,c.opts))return v(r.stop)&&(L._queueHooks(c.elem,c.opts.queue).stop=r.stop.bind(r)),r;return L.map(l,he,c),v(c.opts.start)&&c.opts.start.call(t,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),L.fx.timer(L.extend(u,{elem:t,anim:c,queue:c.opts.queue})),c}L.Animation=L.extend(pe,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return ct(n.elem,t,rt.exec(e),n),n}]},tweener:function(t,e){v(t)?(e=t,t=["*"]):t=t.match(M);for(var n,r=0,i=t.length;r<i;r++)n=t[r],pe.tweeners[n]=pe.tweeners[n]||[],pe.tweeners[n].unshift(e)},prefilters:[function(t,e,n){var r,i,o,a,s,u,c,l,f="width"in e||"height"in e,h=this,p={},d=t.style,g=t.nodeType&&ut(t),m=K.get(t,"fxshow");for(r in n.queue||(null==(a=L._queueHooks(t,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,h.always((function(){h.always((function(){a.unqueued--,L.queue(t,"fx").length||a.empty.fire()}))}))),e)if(i=e[r],se.test(i)){if(delete e[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!m||void 0===m[r])continue;g=!0}p[r]=m&&m[r]||L.style(t,r)}if((u=!L.isEmptyObject(e))||!L.isEmptyObject(p))for(r in f&&1===t.nodeType&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],null==(c=m&&m.display)&&(c=K.get(t,"display")),"none"===(l=L.css(t,"display"))&&(c?l=c:(ht([t],!0),c=t.style.display||c,l=L.css(t,"display"),ht([t]))),("inline"===l||"inline-block"===l&&null!=c)&&"none"===L.css(t,"float")&&(u||(h.done((function(){d.display=c})),null==c&&(l=d.display,c="none"===l?"":l)),d.display="inline-block")),n.overflow&&(d.overflow="hidden",h.always((function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}))),u=!1,p)u||(m?"hidden"in m&&(g=m.hidden):m=K.access(t,"fxshow",{display:c}),o&&(m.hidden=!g),g&&ht([t],!0),h.done((function(){for(r in g||ht([t]),K.remove(t,"fxshow"),p)L.style(t,r,p[r])}))),u=he(g?m[r]:0,r,h),r in m||(m[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(t,e){e?pe.prefilters.unshift(t):pe.prefilters.push(t)}}),L.speed=function(t,e,n){var r=t&&"object"==typeof t?L.extend({},t):{complete:n||!n&&e||v(t)&&t,duration:t,easing:n&&e||e&&!v(e)&&e};return L.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in L.fx.speeds?r.duration=L.fx.speeds[r.duration]:r.duration=L.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){v(r.old)&&r.old.call(this),r.queue&&L.dequeue(this,r.queue)},r},L.fn.extend({fadeTo:function(t,e,n,r){return this.filter(ut).css("opacity",0).show().end().animate({opacity:e},t,n,r)},animate:function(t,e,n,r){var i=L.isEmptyObject(t),o=L.speed(e,n,r),a=function(){var e=pe(this,L.extend({},t),o);(i||K.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(t,e,n){var r=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&this.queue(t||"fx",[]),this.each((function(){var e=!0,i=null!=t&&t+"queueHooks",o=L.timers,a=K.get(this);if(i)a[i]&&a[i].stop&&r(a[i]);else for(i in a)a[i]&&a[i].stop&&ue.test(i)&&r(a[i]);for(i=o.length;i--;)o[i].elem!==this||null!=t&&o[i].queue!==t||(o[i].anim.stop(n),e=!1,o.splice(i,1));!e&&n||L.dequeue(this,t)}))},finish:function(t){return!1!==t&&(t=t||"fx"),this.each((function(){var e,n=K.get(this),r=n[t+"queue"],i=n[t+"queueHooks"],o=L.timers,a=r?r.length:0;for(n.finish=!0,L.queue(this,t,[]),i&&i.stop&&i.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<a;e++)r[e]&&r[e].finish&&r[e].finish.call(this);delete n.finish}))}}),L.each(["toggle","show","hide"],(function(t,e){var n=L.fn[e];L.fn[e]=function(t,r,i){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(fe(e,!0),t,r,i)}})),L.each({slideDown:fe("show"),slideUp:fe("hide"),slideToggle:fe("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(t,e){L.fn[t]=function(t,n,r){return this.animate(e,t,n,r)}})),L.timers=[],L.fx.tick=function(){var t,e=0,n=L.timers;for(oe=Date.now();e<n.length;e++)(t=n[e])()||n[e]!==t||n.splice(e--,1);n.length||L.fx.stop(),oe=void 0},L.fx.timer=function(t){L.timers.push(t),L.fx.start()},L.fx.interval=13,L.fx.start=function(){ae||(ae=!0,ce())},L.fx.stop=function(){ae=null},L.fx.speeds={slow:600,fast:200,_default:400},L.fn.delay=function(t,e){return t=L.fx&&L.fx.speeds[t]||t,e=e||"fx",this.queue(e,(function(e,r){var i=n.setTimeout(e,t);r.stop=function(){n.clearTimeout(i)}}))},function(){var t=b.createElement("input"),e=b.createElement("select").appendChild(b.createElement("option"));t.type="checkbox",m.checkOn=""!==t.value,m.optSelected=e.selected,(t=b.createElement("input")).value="t",t.type="radio",m.radioValue="t"===t.value}();var de,ge=L.expr.attrHandle;L.fn.extend({attr:function(t,e){return W(this,L.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each((function(){L.removeAttr(this,t)}))}}),L.extend({attr:function(t,e,n){var r,i,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===t.getAttribute?L.prop(t,e,n):(1===o&&L.isXMLDoc(t)||(i=L.attrHooks[e.toLowerCase()]||(L.expr.match.bool.test(e)?de:void 0)),void 0!==n?null===n?void L.removeAttr(t,e):i&&"set"in i&&void 0!==(r=i.set(t,n,e))?r:(t.setAttribute(e,n+""),n):i&&"get"in i&&null!==(r=i.get(t,e))?r:null==(r=L.find.attr(t,e))?void 0:r)},attrHooks:{type:{set:function(t,e){if(!m.radioValue&&"radio"===e&&P(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,r=0,i=e&&e.match(M);if(i&&1===t.nodeType)for(;n=i[r++];)t.removeAttribute(n)}}),de={set:function(t,e,n){return!1===e?L.removeAttr(t,n):t.setAttribute(n,n),n}},L.each(L.expr.match.bool.source.match(/\w+/g),(function(t,e){var n=ge[e]||L.find.attr;ge[e]=function(t,e,r){var i,o,a=e.toLowerCase();return r||(o=ge[a],ge[a]=i,i=null!=n(t,e,r)?a:null,ge[a]=o),i}}));var me=/^(?:input|select|textarea|button)$/i,ve=/^(?:a|area)$/i;function ye(t){return(t.match(M)||[]).join(" ")}function be(t){return t.getAttribute&&t.getAttribute("class")||""}function we(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(M)||[]}L.fn.extend({prop:function(t,e){return W(this,L.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each((function(){delete this[L.propFix[t]||t]}))}}),L.extend({prop:function(t,e,n){var r,i,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&L.isXMLDoc(t)||(e=L.propFix[e]||e,i=L.propHooks[e]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(t,n,e))?r:t[e]=n:i&&"get"in i&&null!==(r=i.get(t,e))?r:t[e]},propHooks:{tabIndex:{get:function(t){var e=L.find.attr(t,"tabindex");return e?parseInt(e,10):me.test(t.nodeName)||ve.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),m.optSelected||(L.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),L.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){L.propFix[this.toLowerCase()]=this})),L.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(v(t))return this.each((function(e){L(this).addClass(t.call(this,e,be(this)))}));if((e=we(t)).length)for(;n=this[u++];)if(i=be(n),r=1===n.nodeType&&" "+ye(i)+" "){for(a=0;o=e[a++];)r.indexOf(" "+o+" ")<0&&(r+=o+" ");i!==(s=ye(r))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(v(t))return this.each((function(e){L(this).removeClass(t.call(this,e,be(this)))}));if(!arguments.length)return this.attr("class","");if((e=we(t)).length)for(;n=this[u++];)if(i=be(n),r=1===n.nodeType&&" "+ye(i)+" "){for(a=0;o=e[a++];)for(;r.indexOf(" "+o+" ")>-1;)r=r.replace(" "+o+" "," ");i!==(s=ye(r))&&n.setAttribute("class",s)}return this},toggleClass:function(t,e){var n=typeof t,r="string"===n||Array.isArray(t);return"boolean"==typeof e&&r?e?this.addClass(t):this.removeClass(t):v(t)?this.each((function(n){L(this).toggleClass(t.call(this,n,be(this),e),e)})):this.each((function(){var e,i,o,a;if(r)for(i=0,o=L(this),a=we(t);e=a[i++];)o.hasClass(e)?o.removeClass(e):o.addClass(e);else void 0!==t&&"boolean"!==n||((e=be(this))&&K.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":K.get(this,"__className__")||""))}))},hasClass:function(t){var e,n,r=0;for(e=" "+t+" ";n=this[r++];)if(1===n.nodeType&&(" "+ye(be(n))+" ").indexOf(e)>-1)return!0;return!1}});var xe=/\r/g;L.fn.extend({val:function(t){var e,n,r,i=this[0];return arguments.length?(r=v(t),this.each((function(n){var i;1===this.nodeType&&(null==(i=r?t.call(this,n,L(this).val()):t)?i="":"number"==typeof i?i+="":Array.isArray(i)&&(i=L.map(i,(function(t){return null==t?"":t+""}))),(e=L.valHooks[this.type]||L.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,i,"value")||(this.value=i))}))):i?(e=L.valHooks[i.type]||L.valHooks[i.nodeName.toLowerCase()])&&"get"in e&&void 0!==(n=e.get(i,"value"))?n:"string"==typeof(n=i.value)?n.replace(xe,""):null==n?"":n:void 0}}),L.extend({valHooks:{option:{get:function(t){var e=L.find.attr(t,"value");return null!=e?e:ye(L.text(t))}},select:{get:function(t){var e,n,r,i=t.options,o=t.selectedIndex,a="select-one"===t.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!P(n.parentNode,"optgroup"))){if(e=L(n).val(),a)return e;s.push(e)}return s},set:function(t,e){for(var n,r,i=t.options,o=L.makeArray(e),a=i.length;a--;)((r=i[a]).selected=L.inArray(L.valHooks.option.get(r),o)>-1)&&(n=!0);return n||(t.selectedIndex=-1),o}}}}),L.each(["radio","checkbox"],(function(){L.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=L.inArray(L(t).val(),e)>-1}},m.checkOn||(L.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})})),m.focusin="onfocusin"in n;var Ne=/^(?:focusinfocus|focusoutblur)$/,Le=function(t){t.stopPropagation()};L.extend(L.event,{trigger:function(t,e,r,i){var o,a,s,u,c,l,f,h,d=[r||b],g=p.call(t,"type")?t.type:t,m=p.call(t,"namespace")?t.namespace.split("."):[];if(a=h=s=r=r||b,3!==r.nodeType&&8!==r.nodeType&&!Ne.test(g+L.event.triggered)&&(g.indexOf(".")>-1&&(m=g.split("."),g=m.shift(),m.sort()),c=g.indexOf(":")<0&&"on"+g,(t=t[L.expando]?t:new L.Event(g,"object"==typeof t&&t)).isTrigger=i?2:3,t.namespace=m.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=r),e=null==e?[t]:L.makeArray(e,[t]),f=L.event.special[g]||{},i||!f.trigger||!1!==f.trigger.apply(r,e))){if(!i&&!f.noBubble&&!y(r)){for(u=f.delegateType||g,Ne.test(u+g)||(a=a.parentNode);a;a=a.parentNode)d.push(a),s=a;s===(r.ownerDocument||b)&&d.push(s.defaultView||s.parentWindow||n)}for(o=0;(a=d[o++])&&!t.isPropagationStopped();)h=a,t.type=o>1?u:f.bindType||g,(l=(K.get(a,"events")||Object.create(null))[t.type]&&K.get(a,"handle"))&&l.apply(a,e),(l=c&&a[c])&&l.apply&&J(a)&&(t.result=l.apply(a,e),!1===t.result&&t.preventDefault());return t.type=g,i||t.isDefaultPrevented()||f._default&&!1!==f._default.apply(d.pop(),e)||!J(r)||c&&v(r[g])&&!y(r)&&((s=r[c])&&(r[c]=null),L.event.triggered=g,t.isPropagationStopped()&&h.addEventListener(g,Le),r[g](),t.isPropagationStopped()&&h.removeEventListener(g,Le),L.event.triggered=void 0,s&&(r[c]=s)),t.result}},simulate:function(t,e,n){var r=L.extend(new L.Event,n,{type:t,isSimulated:!0});L.event.trigger(r,null,e)}}),L.fn.extend({trigger:function(t,e){return this.each((function(){L.event.trigger(t,e,this)}))},triggerHandler:function(t,e){var n=this[0];if(n)return L.event.trigger(t,e,n,!0)}}),m.focusin||L.each({focus:"focusin",blur:"focusout"},(function(t,e){var n=function(t){L.event.simulate(e,t.target,L.event.fix(t))};L.event.special[e]={setup:function(){var r=this.ownerDocument||this.document||this,i=K.access(r,e);i||r.addEventListener(t,n,!0),K.access(r,e,(i||0)+1)},teardown:function(){var r=this.ownerDocument||this.document||this,i=K.access(r,e)-1;i?K.access(r,e,i):(r.removeEventListener(t,n,!0),K.remove(r,e))}}}));var Ae=n.location,Se={guid:Date.now()},_e=/\?/;L.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new n.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||L.error("Invalid XML: "+t),e};var Ce=/\[\]$/,ke=/\r?\n/g,Pe=/^(?:submit|button|image|reset|file)$/i,Fe=/^(?:input|select|textarea|keygen)/i;function Te(t,e,n,r){var i;if(Array.isArray(e))L.each(e,(function(e,i){n||Ce.test(t)?r(t,i):Te(t+"["+("object"==typeof i&&null!=i?e:"")+"]",i,n,r)}));else if(n||"object"!==N(e))r(t,e);else for(i in e)Te(t+"["+i+"]",e[i],n,r)}L.param=function(t,e){var n,r=[],i=function(t,e){var n=v(e)?e():e;r[r.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(null==t)return"";if(Array.isArray(t)||t.jquery&&!L.isPlainObject(t))L.each(t,(function(){i(this.name,this.value)}));else for(n in t)Te(n,t[n],e,i);return r.join("&")},L.fn.extend({serialize:function(){return L.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var t=L.prop(this,"elements");return t?L.makeArray(t):this})).filter((function(){var t=this.type;return this.name&&!L(this).is(":disabled")&&Fe.test(this.nodeName)&&!Pe.test(t)&&(this.checked||!gt.test(t))})).map((function(t,e){var n=L(this).val();return null==n?null:Array.isArray(n)?L.map(n,(function(t){return{name:e.name,value:t.replace(ke,"\r\n")}})):{name:e.name,value:n.replace(ke,"\r\n")}})).get()}});var je=/%20/g,Ie=/#.*$/,Ee=/([?&])_=[^&]*/,Be=/^(.*?):[ \t]*([^\r\n]*)$/gm,Oe=/^(?:GET|HEAD)$/,Me=/^\/\//,qe={},De={},Re="*/".concat("*"),Ue=b.createElement("a");function ze(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var r,i=0,o=e.toLowerCase().match(M)||[];if(v(n))for(;r=o[i++];)"+"===r[0]?(r=r.slice(1)||"*",(t[r]=t[r]||[]).unshift(n)):(t[r]=t[r]||[]).push(n)}}function He(t,e,n,r){var i={},o=t===De;function a(s){var u;return i[s]=!0,L.each(t[s]||[],(function(t,s){var c=s(e,n,r);return"string"!=typeof c||o||i[c]?o?!(u=c):void 0:(e.dataTypes.unshift(c),a(c),!1)})),u}return a(e.dataTypes[0])||!i["*"]&&a("*")}function We(t,e){var n,r,i=L.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((i[n]?t:r||(r={}))[n]=e[n]);return r&&L.extend(!0,t,r),t}Ue.href=Ae.href,L.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ae.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Ae.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Re,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":L.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?We(We(t,L.ajaxSettings),e):We(L.ajaxSettings,t)},ajaxPrefilter:ze(qe),ajaxTransport:ze(De),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var r,i,o,a,s,u,c,l,f,h,p=L.ajaxSetup({},e),d=p.context||p,g=p.context&&(d.nodeType||d.jquery)?L(d):L.event,m=L.Deferred(),v=L.Callbacks("once memory"),y=p.statusCode||{},w={},x={},N="canceled",A={readyState:0,getResponseHeader:function(t){var e;if(c){if(!a)for(a={};e=Be.exec(o);)a[e[1].toLowerCase()+" "]=(a[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=a[t.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return c?o:null},setRequestHeader:function(t,e){return null==c&&(t=x[t.toLowerCase()]=x[t.toLowerCase()]||t,w[t]=e),this},overrideMimeType:function(t){return null==c&&(p.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)A.always(t[A.status]);else for(e in t)y[e]=[y[e],t[e]];return this},abort:function(t){var e=t||N;return r&&r.abort(e),S(0,e),this}};if(m.promise(A),p.url=((t||p.url||Ae.href)+"").replace(Me,Ae.protocol+"//"),p.type=e.method||e.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(M)||[""],null==p.crossDomain){u=b.createElement("a");try{u.href=p.url,u.href=u.href,p.crossDomain=Ue.protocol+"//"+Ue.host!=u.protocol+"//"+u.host}catch(t){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=L.param(p.data,p.traditional)),He(qe,p,e,A),c)return A;for(f in(l=L.event&&p.global)&&0==L.active++&&L.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Oe.test(p.type),i=p.url.replace(Ie,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(je,"+")):(h=p.url.slice(i.length),p.data&&(p.processData||"string"==typeof p.data)&&(i+=(_e.test(i)?"&":"?")+p.data,delete p.data),!1===p.cache&&(i=i.replace(Ee,"$1"),h=(_e.test(i)?"&":"?")+"_="+Se.guid+++h),p.url=i+h),p.ifModified&&(L.lastModified[i]&&A.setRequestHeader("If-Modified-Since",L.lastModified[i]),L.etag[i]&&A.setRequestHeader("If-None-Match",L.etag[i])),(p.data&&p.hasContent&&!1!==p.contentType||e.contentType)&&A.setRequestHeader("Content-Type",p.contentType),A.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Re+"; q=0.01":""):p.accepts["*"]),p.headers)A.setRequestHeader(f,p.headers[f]);if(p.beforeSend&&(!1===p.beforeSend.call(d,A,p)||c))return A.abort();if(N="abort",v.add(p.complete),A.done(p.success),A.fail(p.error),r=He(De,p,e,A)){if(A.readyState=1,l&&g.trigger("ajaxSend",[A,p]),c)return A;p.async&&p.timeout>0&&(s=n.setTimeout((function(){A.abort("timeout")}),p.timeout));try{c=!1,r.send(w,S)}catch(t){if(c)throw t;S(-1,t)}}else S(-1,"No Transport");function S(t,e,a,u){var f,h,b,w,x,N=e;c||(c=!0,s&&n.clearTimeout(s),r=void 0,o=u||"",A.readyState=t>0?4:0,f=t>=200&&t<300||304===t,a&&(w=function(t,e,n){for(var r,i,o,a,s=t.contents,u=t.dataTypes;"*"===u[0];)u.shift(),void 0===r&&(r=t.mimeType||e.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||t.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(p,A,a)),!f&&L.inArray("script",p.dataTypes)>-1&&(p.converters["text script"]=function(){}),w=function(t,e,n,r){var i,o,a,s,u,c={},l=t.dataTypes.slice();if(l[1])for(a in t.converters)c[a.toLowerCase()]=t.converters[a];for(o=l.shift();o;)if(t.responseFields[o]&&(n[t.responseFields[o]]=e),!u&&r&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),u=o,o=l.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=c[u+" "+o]||c["* "+o]))for(i in c)if((s=i.split(" "))[1]===o&&(a=c[u+" "+s[0]]||c["* "+s[0]])){!0===a?a=c[i]:!0!==c[i]&&(o=s[0],l.unshift(s[1]));break}if(!0!==a)if(a&&t.throws)e=a(e);else try{e=a(e)}catch(t){return{state:"parsererror",error:a?t:"No conversion from "+u+" to "+o}}}return{state:"success",data:e}}(p,w,A,f),f?(p.ifModified&&((x=A.getResponseHeader("Last-Modified"))&&(L.lastModified[i]=x),(x=A.getResponseHeader("etag"))&&(L.etag[i]=x)),204===t||"HEAD"===p.type?N="nocontent":304===t?N="notmodified":(N=w.state,h=w.data,f=!(b=w.error))):(b=N,!t&&N||(N="error",t<0&&(t=0))),A.status=t,A.statusText=(e||N)+"",f?m.resolveWith(d,[h,N,A]):m.rejectWith(d,[A,N,b]),A.statusCode(y),y=void 0,l&&g.trigger(f?"ajaxSuccess":"ajaxError",[A,p,f?h:b]),v.fireWith(d,[A,N]),l&&(g.trigger("ajaxComplete",[A,p]),--L.active||L.event.trigger("ajaxStop")))}return A},getJSON:function(t,e,n){return L.get(t,e,n,"json")},getScript:function(t,e){return L.get(t,void 0,e,"script")}}),L.each(["get","post"],(function(t,e){L[e]=function(t,n,r,i){return v(n)&&(i=i||r,r=n,n=void 0),L.ajax(L.extend({url:t,type:e,dataType:i,data:n,success:r},L.isPlainObject(t)&&t))}})),L.ajaxPrefilter((function(t){var e;for(e in t.headers)"content-type"===e.toLowerCase()&&(t.contentType=t.headers[e]||"")})),L._evalUrl=function(t,e,n){return L.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(t){L.globalEval(t,e,n)}})},L.fn.extend({wrapAll:function(t){var e;return this[0]&&(v(t)&&(t=t.call(this[0])),e=L(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t})).append(this)),this},wrapInner:function(t){return v(t)?this.each((function(e){L(this).wrapInner(t.call(this,e))})):this.each((function(){var e=L(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)}))},wrap:function(t){var e=v(t);return this.each((function(n){L(this).wrapAll(e?t.call(this,n):t)}))},unwrap:function(t){return this.parent(t).not("body").each((function(){L(this).replaceWith(this.childNodes)})),this}}),L.expr.pseudos.hidden=function(t){return!L.expr.pseudos.visible(t)},L.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},L.ajaxSettings.xhr=function(){try{return new n.XMLHttpRequest}catch(t){}};var Ve={0:200,1223:204},Ge=L.ajaxSettings.xhr();m.cors=!!Ge&&"withCredentials"in Ge,m.ajax=Ge=!!Ge,L.ajaxTransport((function(t){var e,r;if(m.cors||Ge&&!t.crossDomain)return{send:function(i,o){var a,s=t.xhr();if(s.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(a in t.xhrFields)s[a]=t.xhrFields[a];for(a in t.mimeType&&s.overrideMimeType&&s.overrideMimeType(t.mimeType),t.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest"),i)s.setRequestHeader(a,i[a]);e=function(t){return function(){e&&(e=r=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===t?s.abort():"error"===t?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(Ve[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=e(),r=s.onerror=s.ontimeout=e("error"),void 0!==s.onabort?s.onabort=r:s.onreadystatechange=function(){4===s.readyState&&n.setTimeout((function(){e&&r()}))},e=e("abort");try{s.send(t.hasContent&&t.data||null)}catch(t){if(e)throw t}},abort:function(){e&&e()}}})),L.ajaxPrefilter((function(t){t.crossDomain&&(t.contents.script=!1)})),L.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return L.globalEval(t),t}}}),L.ajaxPrefilter("script",(function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")})),L.ajaxTransport("script",(function(t){var e,n;if(t.crossDomain||t.scriptAttrs)return{send:function(r,i){e=L("<script>").attr(t.scriptAttrs||{}).prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&i("error"===t.type?404:200,t.type)}),b.head.appendChild(e[0])},abort:function(){n&&n()}}}));var Ye,Xe=[],Je=/(=)\?(?=&|$)|\?\?/;L.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Xe.pop()||L.expando+"_"+Se.guid++;return this[t]=!0,t}}),L.ajaxPrefilter("json jsonp",(function(t,e,r){var i,o,a,s=!1!==t.jsonp&&(Je.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Je.test(t.data)&&"data");if(s||"jsonp"===t.dataTypes[0])return i=t.jsonpCallback=v(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(Je,"$1"+i):!1!==t.jsonp&&(t.url+=(_e.test(t.url)?"&":"?")+t.jsonp+"="+i),t.converters["script json"]=function(){return a||L.error(i+" was not called"),a[0]},t.dataTypes[0]="json",o=n[i],n[i]=function(){a=arguments},r.always((function(){void 0===o?L(n).removeProp(i):n[i]=o,t[i]&&(t.jsonpCallback=e.jsonpCallback,Xe.push(i)),a&&v(o)&&o(a[0]),a=o=void 0})),"script"})),m.createHTMLDocument=((Ye=b.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Ye.childNodes.length),L.parseHTML=function(t,e,n){return"string"!=typeof t?[]:("boolean"==typeof e&&(n=e,e=!1),e||(m.createHTMLDocument?((r=(e=b.implementation.createHTMLDocument("")).createElement("base")).href=b.location.href,e.head.appendChild(r)):e=b),o=!n&&[],(i=F.exec(t))?[e.createElement(i[1])]:(i=Nt([t],e,o),o&&o.length&&L(o).remove(),L.merge([],i.childNodes)));var r,i,o},L.fn.load=function(t,e,n){var r,i,o,a=this,s=t.indexOf(" ");return s>-1&&(r=ye(t.slice(s)),t=t.slice(0,s)),v(e)?(n=e,e=void 0):e&&"object"==typeof e&&(i="POST"),a.length>0&&L.ajax({url:t,type:i||"GET",dataType:"html",data:e}).done((function(t){o=arguments,a.html(r?L("<div>").append(L.parseHTML(t)).find(r):t)})).always(n&&function(t,e){a.each((function(){n.apply(this,o||[t.responseText,e,t])}))}),this},L.expr.pseudos.animated=function(t){return L.grep(L.timers,(function(e){return t===e.elem})).length},L.offset={setOffset:function(t,e,n){var r,i,o,a,s,u,c=L.css(t,"position"),l=L(t),f={};"static"===c&&(t.style.position="relative"),s=l.offset(),o=L.css(t,"top"),u=L.css(t,"left"),("absolute"===c||"fixed"===c)&&(o+u).indexOf("auto")>-1?(a=(r=l.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),v(e)&&(e=e.call(t,n,L.extend({},s))),null!=e.top&&(f.top=e.top-s.top+a),null!=e.left&&(f.left=e.left-s.left+i),"using"in e?e.using.call(t,f):("number"==typeof f.top&&(f.top+="px"),"number"==typeof f.left&&(f.left+="px"),l.css(f))}},L.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each((function(e){L.offset.setOffset(this,t,e)}));var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,n,r=this[0],i={top:0,left:0};if("fixed"===L.css(r,"position"))e=r.getBoundingClientRect();else{for(e=this.offset(),n=r.ownerDocument,t=r.offsetParent||n.documentElement;t&&(t===n.body||t===n.documentElement)&&"static"===L.css(t,"position");)t=t.parentNode;t&&t!==r&&1===t.nodeType&&((i=L(t).offset()).top+=L.css(t,"borderTopWidth",!0),i.left+=L.css(t,"borderLeftWidth",!0))}return{top:e.top-i.top-L.css(r,"marginTop",!0),left:e.left-i.left-L.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var t=this.offsetParent;t&&"static"===L.css(t,"position");)t=t.offsetParent;return t||ot}))}}),L.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(t,e){var n="pageYOffset"===e;L.fn[t]=function(r){return W(this,(function(t,r,i){var o;if(y(t)?o=t:9===t.nodeType&&(o=t.defaultView),void 0===i)return o?o[e]:t[r];o?o.scrollTo(n?o.pageXOffset:i,n?i:o.pageYOffset):t[r]=i}),t,r,arguments.length)}})),L.each(["top","left"],(function(t,e){L.cssHooks[e]=Gt(m.pixelPosition,(function(t,n){if(n)return n=Vt(t,e),Ut.test(n)?L(t).position()[e]+"px":n}))})),L.each({Height:"height",Width:"width"},(function(t,e){L.each({padding:"inner"+t,content:e,"":"outer"+t},(function(n,r){L.fn[r]=function(i,o){var a=arguments.length&&(n||"boolean"!=typeof i),s=n||(!0===i||!0===o?"margin":"border");return W(this,(function(e,n,i){var o;return y(e)?0===r.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===i?L.css(e,n,s):L.style(e,n,i,s)}),e,a?i:void 0,a)}}))})),L.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(t,e){L.fn[e]=function(t){return this.on(e,t)}})),L.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,r){return this.on(e,t,n,r)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)},hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),L.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(t,e){L.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}));var $e=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;L.proxy=function(t,e){var n,r,i;if("string"==typeof e&&(n=t[e],e=t,t=n),v(t))return r=s.call(arguments,2),(i=function(){return t.apply(e||this,r.concat(s.call(arguments)))}).guid=t.guid=t.guid||L.guid++,i},L.holdReady=function(t){t?L.readyWait++:L.ready(!0)},L.isArray=Array.isArray,L.parseJSON=JSON.parse,L.nodeName=P,L.isFunction=v,L.isWindow=y,L.camelCase=X,L.type=N,L.now=Date.now,L.isNumeric=function(t){var e=L.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},L.trim=function(t){return null==t?"":(t+"").replace($e,"")},void 0===(r=function(){return L}.apply(e,[]))||(t.exports=r);var Ke=n.jQuery,Qe=n.$;return L.noConflict=function(t){return n.$===L&&(n.$=Qe),t&&n.jQuery===L&&(n.jQuery=Ke),L},void 0===i&&(n.jQuery=n.$=L),L}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=n(5);e.default=class{constructor(){this.onDocumentClick=this.onDocumentClick.bind(this)}getDefaultPosition(){return"top-right"}onAdd(t){return this.map=t,this.controlContainer=document.createElement("div"),this.controlContainer.classList.add("mapboxgl-ctrl"),this.controlContainer.classList.add("mapboxgl-ctrl-group"),this.printButton=document.createElement("button"),this.printButton.classList.add("mapboxgl-ctrl-icon"),this.printButton.classList.add("mapboxgl-print-control"),this.printButton.addEventListener("click",()=>{new r.default(t).generate()}),document.addEventListener("click",this.onDocumentClick),this.controlContainer.appendChild(this.printButton),this.controlContainer}onRemove(){this.controlContainer&&this.controlContainer.parentNode&&this.map&&this.printButton&&(this.printButton.removeEventListener("click",this.onDocumentClick),this.controlContainer.parentNode.removeChild(this.controlContainer),document.removeEventListener("click",this.onDocumentClick),this.map=void 0)}onDocumentClick(t){this.controlContainer&&!this.controlContainer.contains(t.target)&&this.printButton&&(this.printButton.style.display="block")}}},function(t,e,n){"use strict";n.r(e);var r=n(2),i=n.n(r),o=n(0),a=n.n(o),s=n(3),u=n.n(s);n(10);i()((function(){const t=new a.a.Map({container:"map",style:"https://narwassco.github.io/mapbox-stylefiles/unvt/style.json",center:[35.87063,-1.08551],zoom:12,hash:!0});t.addControl(new a.a.NavigationControl,"top-right"),t.addControl(new u.a,"top-right")}))},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Unit=e.Format=void 0;const r=n(6),i=n(9),o=n(0);e.Format={PNG:"png",PDF:"pdf"},e.Unit={in:"in",mm:"mm"};e.default=class{constructor(t,n,r,i,o,a){this.map=t,this.width=n||t.getCanvas().width/96,this.height=r||t.getCanvas().height/96,this.dpi=i||300,this.format=o||e.Format.PNG,this.unit=a||e.Unit.in}generate(){const t=this;var n=window.devicePixelRatio;Object.defineProperty(window,"devicePixelRatio",{get:function(){return t.dpi/96}});var a=document.createElement("div");a.className="hidden-map",document.body.appendChild(a);var s=document.createElement("div");s.style.width=this.toPixels(this.width),s.style.height=this.toPixels(this.height),a.appendChild(s);var u=new o.Map({container:s,center:this.map.getCenter(),zoom:this.map.getZoom(),style:this.map.getStyle(),bearing:this.map.getBearing(),pitch:this.map.getPitch(),interactive:!1,preserveDrawingBuffer:!0,fadeDuration:0,attributionControl:!1});u.once("idle",(function(){var o;if(t.format==e.Format.PNG)u.getCanvas().toBlob((function(t){i.saveAs(t,"map.png")}));else{var s=new r({orientation:t.width>t.height?"l":"p",unit:t.unit,format:[t.width,t.height],compress:!0});s.addImage(u.getCanvas(),"png",0,0,t.width,t.height,null,"FAST");var{lng:c,lat:l}=u.getCenter();s.setProperties({title:u.getStyle().name,subject:`center: [${c}, ${l}], zoom: ${u.getZoom()}`,creator:"Print Maps",author:"(c)Mapbox, (c)OpenStreetMap"}),s.save("map.pdf")}u.remove(),null===(o=a.parentNode)||void 0===o||o.removeChild(a),Object.defineProperty(window,"devicePixelRatio",{get:function(){return n}})}))}toPixels(t){var n=96;return(this.unit?e.Unit.in:e.Unit.mm)==e.Unit.mm&&(n/=25.4),n*t+"px"}}},function(t,e,n){(function(r,i){var o,a;o=function(){"use strict";
/** @license
   * jsPDF - PDF Document creation from JavaScript
   * Version 1.5.3 Built on 2018-12-27T14:11:42.696Z
   *                      CommitID d93d28db14
   *
   * Copyright (c) 2010-2016 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF
   *               2010 Aaron Spike, https://github.com/acspike
   *               2012 Willow Systems Corporation, willow-systems.com
   *               2012 Pablo Hess, https://github.com/pablohess
   *               2012 Florian Jenett, https://github.com/fjenett
   *               2013 Warren Weckesser, https://github.com/warrenweckesser
   *               2013 Youssef Beddad, https://github.com/lifof
   *               2013 Lee Driscoll, https://github.com/lsdriscoll
   *               2013 Stefan Slonevskiy, https://github.com/stefslon
   *               2013 Jeremy Morel, https://github.com/jmorel
   *               2013 Christoph Hartmann, https://github.com/chris-rock
   *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
   *               2014 James Makes, https://github.com/dollaruw
   *               2014 Diego Casorran, https://github.com/diegocr
   *               2014 Steven Spungin, https://github.com/Flamenco
   *               2014 Kenneth Glassey, https://github.com/Gavvers
   *
   * Licensed under the MIT License
   *
   * Contributor(s):
   *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,
   *    kim3er, mfo, alnorth, Flamenco
   */function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(t){if("object"!==o(t.console)){t.console={};for(var e,n,r=t.console,i=function(){},a=["memory"],s="assert,clear,count,debug,dir,dirxml,error,exception,group,groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn".split(",");e=a.pop();)r[e]||(r[e]={});for(;n=s.pop();)r[n]||(r[n]=i)}var u,c,l,f,h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";void 0===t.btoa&&(t.btoa=function(t){var e,n,r,i,o,a=0,s=0,u="",c=[];if(!t)return t;for(;e=(o=t.charCodeAt(a++)<<16|t.charCodeAt(a++)<<8|t.charCodeAt(a++))>>18&63,n=o>>12&63,r=o>>6&63,i=63&o,c[s++]=h.charAt(e)+h.charAt(n)+h.charAt(r)+h.charAt(i),a<t.length;);u=c.join("");var l=t.length%3;return(l?u.slice(0,l-3):u)+"===".slice(l||3)}),void 0===t.atob&&(t.atob=function(t){var e,n,r,i,o,a,s=0,u=0,c=[];if(!t)return t;for(t+="";e=(a=h.indexOf(t.charAt(s++))<<18|h.indexOf(t.charAt(s++))<<12|(i=h.indexOf(t.charAt(s++)))<<6|(o=h.indexOf(t.charAt(s++))))>>16&255,n=a>>8&255,r=255&a,c[u++]=64==i?String.fromCharCode(e):64==o?String.fromCharCode(e,n):String.fromCharCode(e,n,r),s<t.length;);return c.join("")}),Array.prototype.map||(Array.prototype.map=function(t){if(null==this||"function"!=typeof t)throw new TypeError;for(var e=Object(this),n=e.length>>>0,r=new Array(n),i=1<arguments.length?arguments[1]:void 0,o=0;o<n;o++)o in e&&(r[o]=t.call(i,e[o],o,e));return r}),Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),Array.prototype.forEach||(Array.prototype.forEach=function(t,e){if(null==this||"function"!=typeof t)throw new TypeError;for(var n=Object(this),r=n.length>>>0,i=0;i<r;i++)i in n&&t.call(e,n[i],i,n)}),Array.prototype.find||Object.defineProperty(Array.prototype,"find",{value:function(t){if(null==this)throw new TypeError('"this" is null or not defined');var e=Object(this),n=e.length>>>0;if("function"!=typeof t)throw new TypeError("predicate must be a function");for(var r=arguments[1],i=0;i<n;){var o=e[i];if(t.call(r,o,i,e))return o;i++}},configurable:!0,writable:!0}),Object.keys||(Object.keys=(u=Object.prototype.hasOwnProperty,c=!{toString:null}.propertyIsEnumerable("toString"),f=(l=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"]).length,function(t){if("object"!==o(t)&&("function"!=typeof t||null===t))throw new TypeError;var e,n,r=[];for(e in t)u.call(t,e)&&r.push(e);if(c)for(n=0;n<f;n++)u.call(t,l[n])&&r.push(l[n]);return r})),"function"!=typeof Object.assign&&(Object.assign=function(t){if(null==t)throw new TypeError("Cannot convert undefined or null to object");t=Object(t);for(var e=1;e<arguments.length;e++){var n=arguments[e];if(null!=n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t}),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),String.prototype.trimLeft||(String.prototype.trimLeft=function(){return this.replace(/^\s+/g,"")}),String.prototype.trimRight||(String.prototype.trimRight=function(){return this.replace(/\s+$/g,"")}),Number.isInteger=Number.isInteger||function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")());var s,u,c,l,f,h,p,d,g,m,v,y,b,w,x,N,L,A,S,_,C,k,P,F,T,j,I,E,B,O,M,q,D,R,U,z,H,W,V,G,Y,X,J,$,K,Q,Z,tt,et,nt,rt,it,ot,at,st,ut,ct,lt,ft,ht,pt,dt,gt=function(r){function s(t){if("object"!==o(t))throw new Error("Invalid Context passed to initialize PubSub (jsPDF-module)");var e={};this.subscribe=function(t,n,r){if(r=r||!1,"string"!=typeof t||"function"!=typeof n||"boolean"!=typeof r)throw new Error("Invalid arguments passed to PubSub.subscribe (jsPDF-module)");e.hasOwnProperty(t)||(e[t]={});var i=Math.random().toString(35);return e[t][i]=[n,!!r],i},this.unsubscribe=function(t){for(var n in e)if(e[n][t])return delete e[n][t],0===Object.keys(e[n]).length&&delete e[n],!0;return!1},this.publish=function(n){if(e.hasOwnProperty(n)){var i=Array.prototype.slice.call(arguments,1),o=[];for(var a in e[n]){var s=e[n][a];try{s[0].apply(t,i)}catch(n){r.console&&console.error("jsPDF PubSub Error",n.message,n)}s[1]&&o.push(a)}o.length&&o.forEach(this.unsubscribe)}},this.getTopics=function(){return e}}function u(t,e,n,a){var c={},l=[],f=1;"object"===o(t)&&(t=(c=t).orientation,e=c.unit||e,n=c.format||n,a=c.compress||c.compressPdf||a,l=c.filters||(!0===a?["FlateEncode"]:l),f="number"==typeof c.userUnit?Math.abs(c.userUnit):1),e=e||"mm",t=(""+(t||"P")).toLowerCase();var h=c.putOnlyUsedFonts||!0,p={},d={internal:{},__private__:{}};d.__private__.PubSub=s;var g="1.3",m=d.__private__.getPdfVersion=function(){return g},v=(d.__private__.setPdfVersion=function(t){g=t},{a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]}),y=(d.__private__.getPageFormats=function(){return v},d.__private__.getPageFormat=function(t){return v[t]});"string"==typeof n&&(n=y(n)),n=n||y("a4");var b,w=d.f2=d.__private__.f2=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f2");return t.toFixed(2)},x=d.__private__.f3=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f3");return t.toFixed(3)},N="00000000000000000000000000000000",L=d.__private__.getFileId=function(){return N},A=d.__private__.setFileId=function(t){return t=t||"12345678901234567890123456789012".split("").map((function(){return"ABCDEF0123456789".charAt(Math.floor(16*Math.random()))})).join(""),N=t};d.setFileId=function(t){return A(t),this},d.getFileId=function(){return L()};var S=d.__private__.convertDateToPDFDate=function(t){var e=t.getTimezoneOffset(),n=e<0?"+":"-",r=Math.floor(Math.abs(e/60)),i=Math.abs(e%60),o=[n,M(r),"'",M(i),"'"].join("");return["D:",t.getFullYear(),M(t.getMonth()+1),M(t.getDate()),M(t.getHours()),M(t.getMinutes()),M(t.getSeconds()),o].join("")},_=d.__private__.convertPDFDateToDate=function(t){var e=parseInt(t.substr(2,4),10),n=parseInt(t.substr(6,2),10)-1,r=parseInt(t.substr(8,2),10),i=parseInt(t.substr(10,2),10),o=parseInt(t.substr(12,2),10),a=parseInt(t.substr(14,2),10);return parseInt(t.substr(16,2),10),parseInt(t.substr(20,2),10),new Date(e,n,r,i,o,a,0)},C=d.__private__.setCreationDate=function(t){var e;if(void 0===t&&(t=new Date),"object"===o(t)&&"[object Date]"===Object.prototype.toString.call(t))e=S(t);else{if(!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\+0[0-9]|\+1[0-4]|\-0[0-9]|\-1[0-1])\'(0[0-9]|[1-5][0-9])\'?$/.test(t))throw new Error("Invalid argument passed to jsPDF.setCreationDate");e=t}return b=e},k=d.__private__.getCreationDate=function(t){var e=b;return"jsDate"===t&&(e=_(b)),e};d.setCreationDate=function(t){return C(t),this},d.getCreationDate=function(t){return k(t)};var P,F,T,j,I,E,B,O,M=d.__private__.padd2=function(t){return("0"+parseInt(t)).slice(-2)},q=!1,D=[],R=[],U=0,z=(d.__private__.setCustomOutputDestination=function(t){F=t},d.__private__.resetCustomOutputDestination=function(t){F=void 0},d.__private__.out=function(t){var e;return t="string"==typeof t?t:t.toString(),(e=void 0===F?q?D[P]:R:F).push(t),q||(U+=t.length+1),e}),H=d.__private__.write=function(t){return z(1===arguments.length?t.toString():Array.prototype.join.call(arguments," "))},W=d.__private__.getArrayBuffer=function(t){for(var e=t.length,n=new ArrayBuffer(e),r=new Uint8Array(n);e--;)r[e]=t.charCodeAt(e);return n},V=[["Helvetica","helvetica","normal","WinAnsiEncoding"],["Helvetica-Bold","helvetica","bold","WinAnsiEncoding"],["Helvetica-Oblique","helvetica","italic","WinAnsiEncoding"],["Helvetica-BoldOblique","helvetica","bolditalic","WinAnsiEncoding"],["Courier","courier","normal","WinAnsiEncoding"],["Courier-Bold","courier","bold","WinAnsiEncoding"],["Courier-Oblique","courier","italic","WinAnsiEncoding"],["Courier-BoldOblique","courier","bolditalic","WinAnsiEncoding"],["Times-Roman","times","normal","WinAnsiEncoding"],["Times-Bold","times","bold","WinAnsiEncoding"],["Times-Italic","times","italic","WinAnsiEncoding"],["Times-BoldItalic","times","bolditalic","WinAnsiEncoding"],["ZapfDingbats","zapfdingbats","normal",null],["Symbol","symbol","normal",null]],G=(d.__private__.getStandardFonts=function(t){return V},c.fontSize||16),Y=(d.__private__.setFontSize=d.setFontSize=function(t){return G=t,this},d.__private__.getFontSize=d.getFontSize=function(){return G}),X=c.R2L||!1,J=(d.__private__.setR2L=d.setR2L=function(t){return X=t,this},d.__private__.getR2L=d.getR2L=function(t){return X},d.__private__.setZoomMode=function(t){if(/^\d*\.?\d*\%$/.test(t))T=t;else if(isNaN(t)){if(-1===[void 0,null,"fullwidth","fullheight","fullpage","original"].indexOf(t))throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. "'+t+'" is not recognized.');T=t}else T=parseInt(t,10)}),$=(d.__private__.getZoomMode=function(){return T},d.__private__.setPageMode=function(t){if(-1==[void 0,null,"UseNone","UseOutlines","UseThumbs","FullScreen"].indexOf(t))throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. "'+t+'" is not recognized.');j=t}),K=(d.__private__.getPageMode=function(){return j},d.__private__.setLayoutMode=function(t){if(-1==[void 0,null,"continuous","single","twoleft","tworight","two"].indexOf(t))throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. "'+t+'" is not recognized.');I=t}),Q=(d.__private__.getLayoutMode=function(){return I},d.__private__.setDisplayMode=d.setDisplayMode=function(t,e,n){return J(t),K(e),$(n),this},{title:"",subject:"",author:"",keywords:"",creator:""}),Z=(d.__private__.getDocumentProperty=function(t){if(-1===Object.keys(Q).indexOf(t))throw new Error("Invalid argument passed to jsPDF.getDocumentProperty");return Q[t]},d.__private__.getDocumentProperties=function(t){return Q},d.__private__.setDocumentProperties=d.setProperties=d.setDocumentProperties=function(t){for(var e in Q)Q.hasOwnProperty(e)&&t[e]&&(Q[e]=t[e]);return this},d.__private__.setDocumentProperty=function(t,e){if(-1===Object.keys(Q).indexOf(t))throw new Error("Invalid arguments passed to jsPDF.setDocumentProperty");return Q[t]=e},0),tt=[],et={},nt={},rt=0,it=[],ot=[],at=new s(d),st=c.hotfixes||[],ut=d.__private__.newObject=function(){var t=ct();return lt(t,!0),t},ct=d.__private__.newObjectDeferred=function(){return tt[++Z]=function(){return U},Z},lt=function(t,e){return e="boolean"==typeof e&&e,tt[t]=U,e&&z(t+" 0 obj"),t},ft=d.__private__.newAdditionalObject=function(){var t={objId:ct(),content:""};return ot.push(t),t},ht=ct(),pt=ct(),dt=d.__private__.decodeColorString=function(t){var e=t.split(" ");if(2===e.length&&("g"===e[1]||"G"===e[1])){var n=parseFloat(e[0]);e=[n,n,n,"r"]}for(var r="#",i=0;i<3;i++)r+=("0"+Math.floor(255*parseFloat(e[i])).toString(16)).slice(-2);return r},gt=d.__private__.encodeColorString=function(t){var e;"string"==typeof t&&(t={ch1:t});var n=t.ch1,r=t.ch2,i=t.ch3,a=t.ch4,s=(t.precision,"draw"===t.pdfColorType?["G","RG","K"]:["g","rg","k"]);if("string"==typeof n&&"#"!==n.charAt(0)){var u=new RGBColor(n);if(u.ok)n=u.toHex();else if(!/^\d*\.?\d*$/.test(n))throw new Error('Invalid color "'+n+'" passed to jsPDF.encodeColorString.')}if("string"==typeof n&&/^#[0-9A-Fa-f]{3}$/.test(n)&&(n="#"+n[1]+n[1]+n[2]+n[2]+n[3]+n[3]),"string"==typeof n&&/^#[0-9A-Fa-f]{6}$/.test(n)){var c=parseInt(n.substr(1),16);n=c>>16&255,r=c>>8&255,i=255&c}if(void 0===r||void 0===a&&n===r&&r===i)if("string"==typeof n)e=n+" "+s[0];else switch(t.precision){case 2:e=w(n/255)+" "+s[0];break;case 3:default:e=x(n/255)+" "+s[0]}else if(void 0===a||"object"===o(a)){if(a&&!isNaN(a.a)&&0===a.a)return["1.000","1.000","1.000",s[1]].join(" ");if("string"==typeof n)e=[n,r,i,s[1]].join(" ");else switch(t.precision){case 2:e=[w(n/255),w(r/255),w(i/255),s[1]].join(" ");break;default:case 3:e=[x(n/255),x(r/255),x(i/255),s[1]].join(" ")}}else if("string"==typeof n)e=[n,r,i,a,s[2]].join(" ");else switch(t.precision){case 2:e=[w(n/255),w(r/255),w(i/255),w(a/255),s[2]].join(" ");break;case 3:default:e=[x(n/255),x(r/255),x(i/255),x(a/255),s[2]].join(" ")}return e},mt=d.__private__.getFilters=function(){return l},vt=d.__private__.putStream=function(t){var e,n=(t=t||{}).data||"",r=t.filters||mt(),i=t.alreadyAppliedFilters||[],o=t.addLength1||!1,a=n.length;!0===r&&(r=["FlateEncode"]);var s=t.additionalKeyValues||[],c=(e=void 0!==u.API.processDataByFilters?u.API.processDataByFilters(n,r):{data:n,reverseChain:[]}).reverseChain+(Array.isArray(i)?i.join(" "):i.toString());0!==e.data.length&&(s.push({key:"Length",value:e.data.length}),!0===o&&s.push({key:"Length1",value:a})),0!=c.length&&(c.split("/").length-1==1?s.push({key:"Filter",value:c}):s.push({key:"Filter",value:"["+c+"]"})),z("<<");for(var l=0;l<s.length;l++)z("/"+s[l].key+" "+s[l].value);z(">>"),0!==e.data.length&&(z("stream"),z(e.data),z("endstream"))},yt=d.__private__.putPage=function(t){t.mediaBox;var e=t.number,n=t.data,r=t.objId,i=t.contentsObjId;lt(r,!0),it[P].mediaBox.topRightX,it[P].mediaBox.bottomLeftX,it[P].mediaBox.topRightY,it[P].mediaBox.bottomLeftY,z("<</Type /Page"),z("/Parent "+t.rootDictionaryObjId+" 0 R"),z("/Resources "+t.resourceDictionaryObjId+" 0 R"),z("/MediaBox ["+parseFloat(w(t.mediaBox.bottomLeftX))+" "+parseFloat(w(t.mediaBox.bottomLeftY))+" "+w(t.mediaBox.topRightX)+" "+w(t.mediaBox.topRightY)+"]"),null!==t.cropBox&&z("/CropBox ["+w(t.cropBox.bottomLeftX)+" "+w(t.cropBox.bottomLeftY)+" "+w(t.cropBox.topRightX)+" "+w(t.cropBox.topRightY)+"]"),null!==t.bleedBox&&z("/BleedBox ["+w(t.bleedBox.bottomLeftX)+" "+w(t.bleedBox.bottomLeftY)+" "+w(t.bleedBox.topRightX)+" "+w(t.bleedBox.topRightY)+"]"),null!==t.trimBox&&z("/TrimBox ["+w(t.trimBox.bottomLeftX)+" "+w(t.trimBox.bottomLeftY)+" "+w(t.trimBox.topRightX)+" "+w(t.trimBox.topRightY)+"]"),null!==t.artBox&&z("/ArtBox ["+w(t.artBox.bottomLeftX)+" "+w(t.artBox.bottomLeftY)+" "+w(t.artBox.topRightX)+" "+w(t.artBox.topRightY)+"]"),"number"==typeof t.userUnit&&1!==t.userUnit&&z("/UserUnit "+t.userUnit),at.publish("putPage",{objId:r,pageContext:it[e],pageNumber:e,page:n}),z("/Contents "+i+" 0 R"),z(">>"),z("endobj");var o=n.join("\n");return lt(i,!0),vt({data:o,filters:mt()}),z("endobj"),r},bt=d.__private__.putPages=function(){var t,e,n=[];for(t=1;t<=rt;t++)it[t].objId=ct(),it[t].contentsObjId=ct();for(t=1;t<=rt;t++)n.push(yt({number:t,data:D[t],objId:it[t].objId,contentsObjId:it[t].contentsObjId,mediaBox:it[t].mediaBox,cropBox:it[t].cropBox,bleedBox:it[t].bleedBox,trimBox:it[t].trimBox,artBox:it[t].artBox,userUnit:it[t].userUnit,rootDictionaryObjId:ht,resourceDictionaryObjId:pt}));lt(ht,!0),z("<</Type /Pages");var r="/Kids [";for(e=0;e<rt;e++)r+=n[e]+" 0 R ";z(r+"]"),z("/Count "+rt),z(">>"),z("endobj"),at.publish("postPutPages")},wt=function(t,e,n){nt.hasOwnProperty(e)||(nt[e]={}),nt[e][n]=t},xt=function(t,e,n,r,i){i=i||!1;var o="F"+(Object.keys(et).length+1).toString(10),a={id:o,postScriptName:t,fontName:e,fontStyle:n,encoding:r,isStandardFont:i,metadata:{}};return at.publish("addFont",{font:a,instance:this}),void 0!==o&&(et[o]=a,wt(o,e,n)),o},Nt=d.__private__.pdfEscape=d.pdfEscape=function(t,e){return function(t,e){var n,r,i,o,a,s,u,c,l;if(i=(e=e||{}).sourceEncoding||"Unicode",a=e.outputEncoding,(e.autoencode||a)&&et[E].metadata&&et[E].metadata[i]&&et[E].metadata[i].encoding&&(o=et[E].metadata[i].encoding,!a&&et[E].encoding&&(a=et[E].encoding),!a&&o.codePages&&(a=o.codePages[0]),"string"==typeof a&&(a=o[a]),a)){for(u=!1,s=[],n=0,r=t.length;n<r;n++)(c=a[t.charCodeAt(n)])?s.push(String.fromCharCode(c)):s.push(t[n]),s[n].charCodeAt(0)>>8&&(u=!0);t=s.join("")}for(n=t.length;void 0===u&&0!==n;)t.charCodeAt(n-1)>>8&&(u=!0),n--;if(!u)return t;for(s=e.noBOM?[]:[254,255],n=0,r=t.length;n<r;n++){if((l=(c=t.charCodeAt(n))>>8)>>8)throw new Error("Character at position "+n+" of string '"+t+"' exceeds 16bits. Cannot be encoded into UCS-2 BE");s.push(l),s.push(c-(l<<8))}return String.fromCharCode.apply(void 0,s)}(t,e).replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},Lt=d.__private__.beginPage=function(t,e){var r,i="string"==typeof e&&e.toLowerCase();if("string"==typeof t&&(r=y(t.toLowerCase()))&&(t=r[0],e=r[1]),Array.isArray(t)&&(e=t[1],t=t[0]),(isNaN(t)||isNaN(e))&&(t=n[0],e=n[1]),i){switch(i.substr(0,1)){case"l":t<e&&(i="s");break;case"p":e<t&&(i="s")}"s"===i&&(r=t,t=e,e=r)}(14400<t||14400<e)&&(console.warn("A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400"),t=Math.min(14400,t),e=Math.min(14400,e)),n=[t,e],q=!0,D[++rt]=[],it[rt]={objId:0,contentsObjId:0,userUnit:Number(f),artBox:null,bleedBox:null,cropBox:null,trimBox:null,mediaBox:{bottomLeftX:0,bottomLeftY:0,topRightX:Number(t),topRightY:Number(e)}},St(rt)},At=function(){Lt.apply(this,arguments),Vt(Wt),z(Zt),0!==oe&&z(oe+" J"),0!==se&&z(se+" j"),at.publish("addPage",{pageNumber:rt})},St=function(t){0<t&&t<=rt&&(P=t)},_t=d.__private__.getNumberOfPages=d.getNumberOfPages=function(){return D.length-1},Ct=function(t,e,n){var r,i=void 0;return n=n||{},t=void 0!==t?t:et[E].fontName,e=void 0!==e?e:et[E].fontStyle,r=t.toLowerCase(),void 0!==nt[r]&&void 0!==nt[r][e]?i=nt[r][e]:void 0!==nt[t]&&void 0!==nt[t][e]?i=nt[t][e]:!1===n.disableWarning&&console.warn("Unable to look up font label for font '"+t+"', '"+e+"'. Refer to getFontList() for available fonts."),i||n.noFallback||null==(i=nt.times[e])&&(i=nt.times.normal),i},kt=d.__private__.putInfo=function(){for(var t in ut(),z("<<"),z("/Producer (jsPDF "+u.version+")"),Q)Q.hasOwnProperty(t)&&Q[t]&&z("/"+t.substr(0,1).toUpperCase()+t.substr(1)+" ("+Nt(Q[t])+")");z("/CreationDate ("+b+")"),z(">>"),z("endobj")},Pt=d.__private__.putCatalog=function(t){var e=(t=t||{}).rootDictionaryObjId||ht;switch(ut(),z("<<"),z("/Type /Catalog"),z("/Pages "+e+" 0 R"),T||(T="fullwidth"),T){case"fullwidth":z("/OpenAction [3 0 R /FitH null]");break;case"fullheight":z("/OpenAction [3 0 R /FitV null]");break;case"fullpage":z("/OpenAction [3 0 R /Fit]");break;case"original":z("/OpenAction [3 0 R /XYZ null null 1]");break;default:var n=""+T;"%"===n.substr(n.length-1)&&(T=parseInt(T)/100),"number"==typeof T&&z("/OpenAction [3 0 R /XYZ null null "+w(T)+"]")}switch(I||(I="continuous"),I){case"continuous":z("/PageLayout /OneColumn");break;case"single":z("/PageLayout /SinglePage");break;case"two":case"twoleft":z("/PageLayout /TwoColumnLeft");break;case"tworight":z("/PageLayout /TwoColumnRight")}j&&z("/PageMode /"+j),at.publish("putCatalog"),z(">>"),z("endobj")},Ft=d.__private__.putTrailer=function(){z("trailer"),z("<<"),z("/Size "+(Z+1)),z("/Root "+Z+" 0 R"),z("/Info "+(Z-1)+" 0 R"),z("/ID [ <"+N+"> <"+N+"> ]"),z(">>")},jt=d.__private__.putHeader=function(){z("%PDF-"+g),z("%ÂºÃÂ¬Ã ")},It=d.__private__.putXRef=function(){var t=1,e="0000000000";for(z("xref"),z("0 "+(Z+1)),z("0000000000 65535 f "),t=1;t<=Z;t++)"function"==typeof tt[t]?z((e+tt[t]()).slice(-10)+" 00000 n "):void 0!==tt[t]?z((e+tt[t]).slice(-10)+" 00000 n "):z("0000000000 00000 n ")},Et=d.__private__.buildDocument=function(){q=!1,U=Z=0,R=[],tt=[],ot=[],ht=ct(),pt=ct(),at.publish("buildDocument"),jt(),bt(),function(){at.publish("putAdditionalObjects");for(var t=0;t<ot.length;t++){var e=ot[t];lt(e.objId,!0),z(e.content),z("endobj")}at.publish("postPutAdditionalObjects")}(),function(){for(var t in et)et.hasOwnProperty(t)&&(!1===h||!0===h&&p.hasOwnProperty(t))&&(e=et[t],at.publish("putFont",{font:e,out:z,newObject:ut,putStream:vt}),!0!==e.isAlreadyPutted&&(e.objectNumber=ut(),z("<<"),z("/Type /Font"),z("/BaseFont /"+e.postScriptName),z("/Subtype /Type1"),"string"==typeof e.encoding&&z("/Encoding /"+e.encoding),z("/FirstChar 32"),z("/LastChar 255"),z(">>"),z("endobj")));var e}(),at.publish("putResources"),lt(pt,!0),z("<<"),function(){for(var t in z("/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]"),z("/Font <<"),et)et.hasOwnProperty(t)&&(!1===h||!0===h&&p.hasOwnProperty(t))&&z("/"+t+" "+et[t].objectNumber+" 0 R");z(">>"),z("/XObject <<"),at.publish("putXobjectDict"),z(">>")}(),z(">>"),z("endobj"),at.publish("postPutResources"),kt(),Pt();var t=U;return It(),Ft(),z("startxref"),z(""+t),z("%%EOF"),q=!0,R.join("\n")},Bt=d.__private__.getBlob=function(t){return new Blob([W(t)],{type:"application/pdf"})},Ot=d.output=d.__private__.output=((O=function(t,e){e=e||{};var n=Et();switch("string"==typeof e?e={filename:e}:e.filename=e.filename||"generated.pdf",t){case void 0:return n;case"save":d.save(e.filename);break;case"arraybuffer":return W(n);case"blob":return Bt(n);case"bloburi":case"bloburl":if(void 0!==r.URL&&"function"==typeof r.URL.createObjectURL)return r.URL&&r.URL.createObjectURL(Bt(n))||void 0;console.warn("bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.");break;case"datauristring":case"dataurlstring":return"data:application/pdf;filename="+e.filename+";base64,"+btoa(n);case"dataurlnewwindow":var i='<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src="'+this.output("datauristring")+'"></iframe></body></html>',o=r.open();if(null!==o&&o.document.write(i),o||"undefined"==typeof safari)return o;case"datauri":case"dataurl":return r.document.location.href="data:application/pdf;filename="+e.filename+";base64,"+btoa(n);default:return null}}).foo=function(){try{return O.apply(this,arguments)}catch(n){var t=n.stack||"";~t.indexOf(" at ")&&(t=t.split(" at ")[1]);var e="Error in function "+t.split("\n")[0].split("<")[0]+": "+n.message;if(!r.console)throw new Error(e);r.console.error(e,n),r.alert&&alert(e)}},(O.foo.bar=O).foo),Mt=function(t){return!0===Array.isArray(st)&&-1<st.indexOf(t)};switch(e){case"pt":B=1;break;case"mm":B=72/25.4;break;case"cm":B=72/2.54;break;case"in":B=72;break;case"px":B=1==Mt("px_scaling")?.75:96/72;break;case"pc":case"em":B=12;break;case"ex":B=6;break;default:throw new Error("Invalid unit: "+e)}C(),A();var qt=d.__private__.getPageInfo=function(t){if(isNaN(t)||t%1!=0)throw new Error("Invalid argument passed to jsPDF.getPageInfo");return{objId:it[t].objId,pageNumber:t,pageContext:it[t]}},Dt=d.__private__.getPageInfoByObjId=function(t){for(var e in it)if(it[e].objId===t)break;if(isNaN(t)||t%1!=0)throw new Error("Invalid argument passed to jsPDF.getPageInfoByObjId");return qt(e)},Rt=d.__private__.getCurrentPageInfo=function(){return{objId:it[P].objId,pageNumber:P,pageContext:it[P]}};d.addPage=function(){return At.apply(this,arguments),this},d.setPage=function(){return St.apply(this,arguments),this},d.insertPage=function(t){return this.addPage(),this.movePage(P,t),this},d.movePage=function(t,e){if(e<t){for(var n=D[t],r=it[t],i=t;e<i;i--)D[i]=D[i-1],it[i]=it[i-1];D[e]=n,it[e]=r,this.setPage(e)}else if(t<e){for(n=D[t],r=it[t],i=t;i<e;i++)D[i]=D[i+1],it[i]=it[i+1];D[e]=n,it[e]=r,this.setPage(e)}return this},d.deletePage=function(){return function(t){0<t&&t<=rt&&(D.splice(t,1),--rt<P&&(P=rt),this.setPage(P))}.apply(this,arguments),this},d.__private__.text=d.text=function(t,e,n,r){var i;"number"!=typeof t||"number"!=typeof e||"string"!=typeof n&&!Array.isArray(n)||(i=n,n=e,e=t,t=i);var a=arguments[3],s=arguments[4],u=arguments[5];if("object"===o(a)&&null!==a||("string"==typeof s&&(u=s,s=null),"string"==typeof a&&(u=a,a=null),"number"==typeof a&&(s=a,a=null),r={flags:a,angle:s,align:u}),(a=a||{}).noBOM=a.noBOM||!0,a.autoencode=a.autoencode||!0,isNaN(e)||isNaN(n)||null==t)throw new Error("Invalid arguments passed to jsPDF.text");if(0===t.length)return h;var c,l="",f="number"==typeof r.lineHeightFactor?r.lineHeightFactor:Ht,h=r.scope||this;function d(t){for(var e,n=t.concat(),r=[],i=n.length;i--;)"string"==typeof(e=n.shift())?r.push(e):Array.isArray(t)&&1===e.length?r.push(e[0]):r.push([e[0],e[1],e[2]]);return r}function g(t,e){var n;if("string"==typeof t)n=e(t)[0];else if(Array.isArray(t)){for(var r,i,o=t.concat(),a=[],s=o.length;s--;)"string"==typeof(r=o.shift())?a.push(e(r)[0]):Array.isArray(r)&&"string"===r[0]&&(i=e(r[0],r[1],r[2]),a.push([i[0],i[1],i[2]]));n=a}return n}var m=!1,v=!0;if("string"==typeof t)m=!0;else if(Array.isArray(t)){for(var y,b=t.concat(),N=[],L=b.length;L--;)("string"!=typeof(y=b.shift())||Array.isArray(y)&&"string"!=typeof y[0])&&(v=!1);m=v}if(!1===m)throw new Error('Type of text must be string or Array. "'+t+'" is not recognized.');var A=et[E].encoding;"WinAnsiEncoding"!==A&&"StandardEncoding"!==A||(t=g(t,(function(t,e,n){return[(i=t,i=i.split("\t").join(Array(r.TabLen||9).join(" ")),Nt(i,a)),e,n];var i}))),"string"==typeof t&&(t=t.match(/[\r?\n]/)?t.split(/\r\n|\r|\n/g):[t]);var S=G/h.internal.scaleFactor,_=S*(Ht-1);switch(r.baseline){case"bottom":n-=_;break;case"top":n+=S-_;break;case"hanging":n+=S-2*_;break;case"middle":n+=S/2-_}0<(U=r.maxWidth||0)&&("string"==typeof t?t=h.splitTextToSize(t,U):"[object Array]"===Object.prototype.toString.call(t)&&(t=h.splitTextToSize(t.join(" "),U)));var C={text:t,x:e,y:n,options:r,mutex:{pdfEscape:Nt,activeFontKey:E,fonts:et,activeFontSize:G}};at.publish("preProcessText",C),t=C.text,s=(r=C.options).angle;var k=h.internal.scaleFactor,P=[];if(s){s*=Math.PI/180;var F=Math.cos(s),T=Math.sin(s);P=[w(F),w(T),w(-1*T),w(F)]}void 0!==(R=r.charSpace)&&(l+=x(R*k)+" Tc\n"),r.lang;var j=-1,I=void 0!==r.renderingMode?r.renderingMode:r.stroke,B=h.internal.getCurrentPageInfo().pageContext;switch(I){case 0:case!1:case"fill":j=0;break;case 1:case!0:case"stroke":j=1;break;case 2:case"fillThenStroke":j=2;break;case 3:case"invisible":j=3;break;case 4:case"fillAndAddForClipping":j=4;break;case 5:case"strokeAndAddPathForClipping":j=5;break;case 6:case"fillThenStrokeAndAddToPathForClipping":j=6;break;case 7:case"addToPathForClipping":j=7}var O=void 0!==B.usedRenderingMode?B.usedRenderingMode:-1;-1!==j?l+=j+" Tr\n":-1!==O&&(l+="0 Tr\n"),-1!==j&&(B.usedRenderingMode=j),u=r.align||"left";var M=G*f,q=h.internal.pageSize.getWidth(),D=(k=h.internal.scaleFactor,et[E]),R=r.charSpace||re,U=r.maxWidth||0,H=(a={},[]);if("[object Array]"===Object.prototype.toString.call(t)){var W,V;N=d(t),"left"!==u&&(V=N.map((function(t){return h.getStringUnitWidth(t,{font:D,charSpace:R,fontSize:G})*G/k}))),Math.max.apply(Math,V);var Y,J=0;if("right"===u){e-=V[0],t=[];var $=0;for(L=N.length;$<L;$++)V[$],W=0===$?(Y=Jt(e),$t(n)):(Y=(J-V[$])*k,-M),t.push([N[$],Y,W]),J=V[$]}else if("center"===u)for(e-=V[0]/2,t=[],$=0,L=N.length;$<L;$++)V[$],W=0===$?(Y=Jt(e),$t(n)):(Y=(J-V[$])/2*k,-M),t.push([N[$],Y,W]),J=V[$];else if("left"===u)for(t=[],$=0,L=N.length;$<L;$++)W=0===$?$t(n):-M,Y=0===$?Jt(e):0,t.push(N[$]);else{if("justify"!==u)throw new Error('Unrecognized alignment option, use "left", "center", "right" or "justify".');for(t=[],U=0!==U?U:q,$=0,L=N.length;$<L;$++)W=0===$?$t(n):-M,Y=0===$?Jt(e):0,$<L-1&&H.push(((U-V[$])/(N[$].split(" ").length-1)*k).toFixed(2)),t.push([N[$],Y,W])}}!0===("boolean"==typeof r.R2L?r.R2L:X)&&(t=g(t,(function(t,e,n){return[t.split("").reverse().join(""),e,n]}))),C={text:t,x:e,y:n,options:r,mutex:{pdfEscape:Nt,activeFontKey:E,fonts:et,activeFontSize:G}},at.publish("postProcessText",C),t=C.text,c=C.mutex.isHex,N=d(t),t=[];var K,Q,Z,tt=0,nt=(L=N.length,"");for($=0;$<L;$++)nt="",Array.isArray(N[$])?(K=parseFloat(N[$][1]),Q=parseFloat(N[$][2]),Z=(c?"<":"(")+N[$][0]+(c?">":")"),tt=1):(K=Jt(e),Q=$t(n),Z=(c?"<":"(")+N[$]+(c?">":")")),void 0!==H&&void 0!==H[$]&&(nt=H[$]+" Tw\n"),0!==P.length&&0===$?t.push(nt+P.join(" ")+" "+K.toFixed(2)+" "+Q.toFixed(2)+" Tm\n"+Z):1===tt||0===tt&&0===$?t.push(nt+K.toFixed(2)+" "+Q.toFixed(2)+" Td\n"+Z):t.push(nt+Z);t=0===tt?t.join(" Tj\nT* "):t.join(" Tj\n"),t+=" Tj\n";var rt="BT\n/"+E+" "+G+" Tf\n"+(G*f).toFixed(2)+" TL\n"+ee+"\n";return rt+=l,rt+=t,z(rt+="ET"),p[E]=!0,h},d.__private__.lstext=d.lstext=function(t,e,n,r){return console.warn("jsPDF.lstext is deprecated"),this.text(t,e,n,{charSpace:r})},d.__private__.clip=d.clip=function(t){z("evenodd"===t?"W*":"W"),z("n")},d.__private__.clip_fixed=d.clip_fixed=function(t){console.log("clip_fixed is deprecated"),d.clip(t)};var Ut=d.__private__.isValidStyle=function(t){var e=!1;return-1!==[void 0,null,"S","F","DF","FD","f","f*","B","B*"].indexOf(t)&&(e=!0),e},zt=d.__private__.getStyle=function(t){var e="S";return"F"===t?e="f":"FD"===t||"DF"===t?e="B":"f"!==t&&"f*"!==t&&"B"!==t&&"B*"!==t||(e=t),e};d.__private__.line=d.line=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw new Error("Invalid arguments passed to jsPDF.line");return this.lines([[n-t,r-e]],t,e)},d.__private__.lines=d.lines=function(t,e,n,r,i,o){var a,s,u,c,l,f,h,p,d,g,m,v;if("number"==typeof t&&(v=n,n=e,e=t,t=v),r=r||[1,1],o=o||!1,isNaN(e)||isNaN(n)||!Array.isArray(t)||!Array.isArray(r)||!Ut(i)||"boolean"!=typeof o)throw new Error("Invalid arguments passed to jsPDF.lines");for(z(x(Jt(e))+" "+x($t(n))+" m "),a=r[0],s=r[1],c=t.length,g=e,m=n,u=0;u<c;u++)2===(l=t[u]).length?(g=l[0]*a+g,m=l[1]*s+m,z(x(Jt(g))+" "+x($t(m))+" l")):(f=l[0]*a+g,h=l[1]*s+m,p=l[2]*a+g,d=l[3]*s+m,g=l[4]*a+g,m=l[5]*s+m,z(x(Jt(f))+" "+x($t(h))+" "+x(Jt(p))+" "+x($t(d))+" "+x(Jt(g))+" "+x($t(m))+" c"));return o&&z(" h"),null!==i&&z(zt(i)),this},d.__private__.rect=d.rect=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!Ut(i))throw new Error("Invalid arguments passed to jsPDF.rect");return z([w(Jt(t)),w($t(e)),w(n*B),w(-r*B),"re"].join(" ")),null!==i&&z(zt(i)),this},d.__private__.triangle=d.triangle=function(t,e,n,r,i,o,a){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o)||!Ut(a))throw new Error("Invalid arguments passed to jsPDF.triangle");return this.lines([[n-t,r-e],[i-n,o-r],[t-i,e-o]],t,e,[1,1],a,!0),this},d.__private__.roundedRect=d.roundedRect=function(t,e,n,r,i,o,a){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o)||!Ut(a))throw new Error("Invalid arguments passed to jsPDF.roundedRect");var s=4/3*(Math.SQRT2-1);return this.lines([[n-2*i,0],[i*s,0,i,o-o*s,i,o],[0,r-2*o],[0,o*s,-i*s,o,-i,o],[2*i-n,0],[-i*s,0,-i,-o*s,-i,-o],[0,2*o-r],[0,-o*s,i*s,-o,i,-o]],t+i,e,[1,1],a),this},d.__private__.ellipse=d.ellipse=function(t,e,n,r,i){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||!Ut(i))throw new Error("Invalid arguments passed to jsPDF.ellipse");var o=4/3*(Math.SQRT2-1)*n,a=4/3*(Math.SQRT2-1)*r;return z([w(Jt(t+n)),w($t(e)),"m",w(Jt(t+n)),w($t(e-a)),w(Jt(t+o)),w($t(e-r)),w(Jt(t)),w($t(e-r)),"c"].join(" ")),z([w(Jt(t-o)),w($t(e-r)),w(Jt(t-n)),w($t(e-a)),w(Jt(t-n)),w($t(e)),"c"].join(" ")),z([w(Jt(t-n)),w($t(e+a)),w(Jt(t-o)),w($t(e+r)),w(Jt(t)),w($t(e+r)),"c"].join(" ")),z([w(Jt(t+o)),w($t(e+r)),w(Jt(t+n)),w($t(e+a)),w(Jt(t+n)),w($t(e)),"c"].join(" ")),null!==i&&z(zt(i)),this},d.__private__.circle=d.circle=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||!Ut(r))throw new Error("Invalid arguments passed to jsPDF.circle");return this.ellipse(t,e,n,n,r)},d.setFont=function(t,e){return E=Ct(t,e,{disableWarning:!1}),this},d.setFontStyle=d.setFontType=function(t){return E=Ct(void 0,t),this},d.__private__.getFontList=d.getFontList=function(){var t,e,n,r={};for(t in nt)if(nt.hasOwnProperty(t))for(e in r[t]=n=[],nt[t])nt[t].hasOwnProperty(e)&&n.push(e);return r},d.addFont=function(t,e,n,r){xt.call(this,t,e,n,r=r||"Identity-H")};var Ht,Wt=c.lineWidth||.200025,Vt=d.__private__.setLineWidth=d.setLineWidth=function(t){return z((t*B).toFixed(2)+" w"),this},Gt=(d.__private__.setLineDash=u.API.setLineDash=function(t,e){if(t=t||[],e=e||0,isNaN(e)||!Array.isArray(t))throw new Error("Invalid arguments passed to jsPDF.setLineDash");return t=t.map((function(t){return(t*B).toFixed(3)})).join(" "),e=parseFloat((e*B).toFixed(3)),z("["+t+"] "+e+" d"),this},d.__private__.getLineHeight=d.getLineHeight=function(){return G*Ht}),Yt=(Gt=d.__private__.getLineHeight=d.getLineHeight=function(){return G*Ht},d.__private__.setLineHeightFactor=d.setLineHeightFactor=function(t){return"number"==typeof(t=t||1.15)&&(Ht=t),this}),Xt=d.__private__.getLineHeightFactor=d.getLineHeightFactor=function(){return Ht};Yt(c.lineHeight);var Jt=d.__private__.getHorizontalCoordinate=function(t){return t*B},$t=d.__private__.getVerticalCoordinate=function(t){return it[P].mediaBox.topRightY-it[P].mediaBox.bottomLeftY-t*B},Kt=d.__private__.getHorizontalCoordinateString=function(t){return w(t*B)},Qt=d.__private__.getVerticalCoordinateString=function(t){return w(it[P].mediaBox.topRightY-it[P].mediaBox.bottomLeftY-t*B)},Zt=c.strokeColor||"0 G",te=(d.__private__.getStrokeColor=d.getDrawColor=function(){return dt(Zt)},d.__private__.setStrokeColor=d.setDrawColor=function(t,e,n,r){return Zt=gt({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"draw",precision:2}),z(Zt),this},c.fillColor||"0 g"),ee=(d.__private__.getFillColor=d.getFillColor=function(){return dt(te)},d.__private__.setFillColor=d.setFillColor=function(t,e,n,r){return te=gt({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"fill",precision:2}),z(te),this},c.textColor||"0 g"),ne=d.__private__.getTextColor=d.getTextColor=function(){return dt(ee)},re=(d.__private__.setTextColor=d.setTextColor=function(t,e,n,r){return ee=gt({ch1:t,ch2:e,ch3:n,ch4:r,pdfColorType:"text",precision:3}),this},c.charSpace||0),ie=d.__private__.getCharSpace=d.getCharSpace=function(){return re},oe=(d.__private__.setCharSpace=d.setCharSpace=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.setCharSpace");return re=t,this},0);d.CapJoinStyles={0:0,butt:0,but:0,miter:0,1:1,round:1,rounded:1,circle:1,2:2,projecting:2,project:2,square:2,bevel:2},d.__private__.setLineCap=d.setLineCap=function(t){var e=d.CapJoinStyles[t];if(void 0===e)throw new Error("Line cap style of '"+t+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return z((oe=e)+" J"),this};var ae,se=0;for(var ue in d.__private__.setLineJoin=d.setLineJoin=function(t){var e=d.CapJoinStyles[t];if(void 0===e)throw new Error("Line join style of '"+t+"' is not recognized. See or extend .CapJoinStyles property for valid styles");return z((se=e)+" j"),this},d.__private__.setMiterLimit=d.setMiterLimit=function(t){if(t=t||0,isNaN(t))throw new Error("Invalid argument passed to jsPDF.setMiterLimit");return ae=parseFloat(w(t*B)),z(ae+" M"),this},d.save=function(t,e){if(t=t||"generated.pdf",(e=e||{}).returnPromise=e.returnPromise||!1,!1!==e.returnPromise)return new i((function(e,n){try{var i=Tt(Bt(Et()),t);"function"==typeof Tt.unload&&r.setTimeout&&setTimeout(Tt.unload,911),e(i)}catch(e){n(e.message)}}));Tt(Bt(Et()),t),"function"==typeof Tt.unload&&r.setTimeout&&setTimeout(Tt.unload,911)},u.API)u.API.hasOwnProperty(ue)&&("events"===ue&&u.API.events.length?function(t,e){var n,r,i;for(i=e.length-1;-1!==i;i--)n=e[i][0],r=e[i][1],t.subscribe.apply(t,[n].concat("function"==typeof r?[r]:r))}(at,u.API.events):d[ue]=u.API[ue]);return d.internal={pdfEscape:Nt,getStyle:zt,getFont:function(){return et[Ct.apply(d,arguments)]},getFontSize:Y,getCharSpace:ie,getTextColor:ne,getLineHeight:Gt,getLineHeightFactor:Xt,write:H,getHorizontalCoordinate:Jt,getVerticalCoordinate:$t,getCoordinateString:Kt,getVerticalCoordinateString:Qt,collections:{},newObject:ut,newAdditionalObject:ft,newObjectDeferred:ct,newObjectDeferredBegin:lt,getFilters:mt,putStream:vt,events:at,scaleFactor:B,pageSize:{getWidth:function(){return(it[P].mediaBox.topRightX-it[P].mediaBox.bottomLeftX)/B},setWidth:function(t){it[P].mediaBox.topRightX=t*B+it[P].mediaBox.bottomLeftX},getHeight:function(){return(it[P].mediaBox.topRightY-it[P].mediaBox.bottomLeftY)/B},setHeight:function(t){it[P].mediaBox.topRightY=t*B+it[P].mediaBox.bottomLeftY}},output:Ot,getNumberOfPages:_t,pages:D,out:z,f2:w,f3:x,getPageInfo:qt,getPageInfoByObjId:Dt,getCurrentPageInfo:Rt,getPDFVersion:m,hasHotfix:Mt},Object.defineProperty(d.internal.pageSize,"width",{get:function(){return(it[P].mediaBox.topRightX-it[P].mediaBox.bottomLeftX)/B},set:function(t){it[P].mediaBox.topRightX=t*B+it[P].mediaBox.bottomLeftX},enumerable:!0,configurable:!0}),Object.defineProperty(d.internal.pageSize,"height",{get:function(){return(it[P].mediaBox.topRightY-it[P].mediaBox.bottomLeftY)/B},set:function(t){it[P].mediaBox.topRightY=t*B+it[P].mediaBox.bottomLeftY},enumerable:!0,configurable:!0}),function(t){for(var e=0,n=V.length;e<n;e++){var r=xt(t[e][0],t[e][1],t[e][2],V[e][3],!0);p[r]=!0;var i=t[e][0].split("-");wt(r,i[0],i[1]||"")}at.publish("addFonts",{fonts:et,dictionary:nt})}(V),E="F1",At(n,t),at.publish("initialized"),d}return u.API={events:[]},u.version="1.5.3",void 0!==(a=function(){return u}.call(e,n,e,t))&&(t.exports=a),u}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")());
/**
   * @license
   * Copyright (c) 2016 Alexander Weidt,
   * https://github.com/BiggA94
   * 
   * Licensed under the MIT License. http://opensource.org/licenses/mit-license
   */(function(t,e){var n,r=1,i=function(t){return t.replace(/\\/g,"\\\\").replace(/\(/g,"\\(").replace(/\)/g,"\\)")},a=function(t){return t.replace(/\\\\/g,"\\").replace(/\\\(/g,"(").replace(/\\\)/g,")")},s=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f2");return t.toFixed(2)},u=function(t){if(isNaN(t))throw new Error("Invalid argument passed to jsPDF.f2");return t.toFixed(5)};t.__acroform__={};var c=function(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t},l=function(t){return t*r},f=function(t){return t/r},h=function(t){var e=new E,n=X.internal.getHeight(t)||0,r=X.internal.getWidth(t)||0;return e.BBox=[0,0,Number(s(r)),Number(s(n))],e},p=t.__acroform__.setBit=function(t,e){if(t=t||0,e=e||0,isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBit");return t|1<<e},d=t.__acroform__.clearBit=function(t,e){if(t=t||0,e=e||0,isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBit");return t&~(1<<e)},g=t.__acroform__.getBit=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBit");return 0==(t&1<<e)?0:1},m=t.__acroform__.getBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf");return g(t,e-1)},v=t.__acroform__.setBitForPdf=function(t,e){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf");return p(t,e-1)},y=t.__acroform__.clearBitForPdf=function(t,e,n){if(isNaN(t)||isNaN(e))throw new Error("Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf");return d(t,e-1)},b=t.__acroform__.calculateCoordinates=function(t){var e=this.internal.getHorizontalCoordinate,n=this.internal.getVerticalCoordinate,r=t[0],i=t[1],o=t[2],a=t[3],u={};return u.lowerLeft_X=e(r)||0,u.lowerLeft_Y=n(i+a)||0,u.upperRight_X=e(r+o)||0,u.upperRight_Y=n(i)||0,[Number(s(u.lowerLeft_X)),Number(s(u.lowerLeft_Y)),Number(s(u.upperRight_X)),Number(s(u.upperRight_Y))]},w=function(t){if(t.appearanceStreamContent)return t.appearanceStreamContent;if(t.V||t.DV){var e=[],r=t.V||t.DV,i=x(t,r),o=n.internal.getFont(t.fontName,t.fontStyle).id;e.push("/Tx BMC"),e.push("q"),e.push("BT"),e.push(n.__private__.encodeColorString(t.color)),e.push("/"+o+" "+s(i.fontSize)+" Tf"),e.push("1 0 0 1 0 0 Tm"),e.push(i.text),e.push("ET"),e.push("Q"),e.push("EMC");var a=new h(t);return a.stream=e.join("\n"),a}},x=function(t,e){var r=t.maxFontSize||12,o=(t.fontName,{text:"",fontSize:""}),a=(e=")"==(e="("==e.substr(0,1)?e.substr(1):e).substr(e.length-1)?e.substr(0,e.length-1):e).split(" "),u=(n.__private__.encodeColorString(t.color),r),c=X.internal.getHeight(t)||0;c=c<0?-c:c;var l=X.internal.getWidth(t)||0;l=l<0?-l:l;var f=function(e,n,r){if(e+1<a.length){var i=n+" "+a[e+1];return N(i,t,r).width<=l-4}return!1};u++;t:for(;;){e="";var h=N("3",t,--u).height,p=t.multiline?c-u:(c-h)/2,d=-2,g=p+=2,m=0,v=0,y=0;if(u<=0){e="(...) Tj\n",e+="% Width of Text: "+N(e,t,u=12).width+", FieldWidth:"+l+"\n";break}y=N(a[0]+" ",t,u).width;var b="",w=0;for(var x in a)if(a.hasOwnProperty(x)){b=" "==(b+=a[x]+" ").substr(b.length-1)?b.substr(0,b.length-1):b;var L=parseInt(x);y=N(b+" ",t,u).width;var A=f(L,b,u),S=x>=a.length-1;if(A&&!S){b+=" ";continue}if(A||S){if(S)v=L;else if(t.multiline&&c<(h+2)*(w+2)+2)continue t}else{if(!t.multiline)continue t;if(c<(h+2)*(w+2)+2)continue t;v=L}for(var _="",C=m;C<=v;C++)_+=a[C]+" ";switch(_=" "==_.substr(_.length-1)?_.substr(0,_.length-1):_,y=N(_,t,u).width,t.textAlign){case"right":d=l-y-2;break;case"center":d=(l-y)/2;break;case"left":default:d=2}e+=s(d)+" "+s(g)+" Td\n",e+="("+i(_)+") Tj\n",e+=-s(d)+" 0 Td\n",g=-(u+2),y=0,m=v+1,w++,b=""}break}return o.text=e,o.fontSize=u,o},N=function(t,e,r){var i=n.internal.getFont(e.fontName,e.fontStyle),o=n.getStringUnitWidth(t,{font:i,fontSize:parseFloat(r),charSpace:0})*parseFloat(r);return{height:n.getStringUnitWidth("3",{font:i,fontSize:parseFloat(r),charSpace:0})*parseFloat(r)*1.5,width:o}},L={fields:[],xForms:[],acroFormDictionaryRoot:null,printedOut:!1,internal:null,isInitialized:!1},A=function(){n.internal.acroformPlugin.acroFormDictionaryRoot.objId=void 0;var t=n.internal.acroformPlugin.acroFormDictionaryRoot.Fields;for(var e in t)if(t.hasOwnProperty(e)){var r=t[e];r.objId=void 0,r.hasAnnotation&&S.call(n,r)}},S=function(t){var e={type:"reference",object:t};void 0===n.internal.getPageInfo(t.page).pageContext.annotations.find((function(t){return t.type===e.type&&t.object===e.object}))&&n.internal.getPageInfo(t.page).pageContext.annotations.push(e)},_=function(){if(void 0===n.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error("putCatalogCallback: Root missing.");n.internal.write("/AcroForm "+n.internal.acroformPlugin.acroFormDictionaryRoot.objId+" 0 R")},C=function(){n.internal.events.unsubscribe(n.internal.acroformPlugin.acroFormDictionaryRoot._eventID),delete n.internal.acroformPlugin.acroFormDictionaryRoot._eventID,n.internal.acroformPlugin.printedOut=!0},k=function(t){var e=!t;for(var r in t||(n.internal.newObjectDeferredBegin(n.internal.acroformPlugin.acroFormDictionaryRoot.objId,!0),n.internal.acroformPlugin.acroFormDictionaryRoot.putStream()),t=t||n.internal.acroformPlugin.acroFormDictionaryRoot.Kids)if(t.hasOwnProperty(r)){var i=t[r],a=[],s=i.Rect;if(i.Rect&&(i.Rect=b.call(this,i.Rect)),n.internal.newObjectDeferredBegin(i.objId,!0),i.DA=X.createDefaultAppearanceStream(i),"object"===o(i)&&"function"==typeof i.getKeyValueListForStream&&(a=i.getKeyValueListForStream()),i.Rect=s,i.hasAppearanceStream&&!i.appearanceStreamContent){var u=w.call(this,i);a.push({key:"AP",value:"<</N "+u+">>"}),n.internal.acroformPlugin.xForms.push(u)}if(i.appearanceStreamContent){var c="";for(var l in i.appearanceStreamContent)if(i.appearanceStreamContent.hasOwnProperty(l)){var f=i.appearanceStreamContent[l];if(c+="/"+l+" ",c+="<<",1<=Object.keys(f).length||Array.isArray(f))for(var r in f){var h;f.hasOwnProperty(r)&&("function"==typeof(h=f[r])&&(h=h.call(this,i)),c+="/"+r+" "+h+" ",0<=n.internal.acroformPlugin.xForms.indexOf(h)||n.internal.acroformPlugin.xForms.push(h))}else"function"==typeof(h=f)&&(h=h.call(this,i)),c+="/"+r+" "+h,0<=n.internal.acroformPlugin.xForms.indexOf(h)||n.internal.acroformPlugin.xForms.push(h);c+=">>"}a.push({key:"AP",value:"<<\n"+c+">>"})}n.internal.putStream({additionalKeyValues:a}),n.internal.out("endobj")}e&&P.call(this,n.internal.acroformPlugin.xForms)},P=function(t){for(var e in t)if(t.hasOwnProperty(e)){var r=e,i=t[e];n.internal.newObjectDeferredBegin(i&&i.objId,!0),"object"===o(i)&&"function"==typeof i.putStream&&i.putStream(),delete t[r]}},F=function(){if(void 0!==this.internal&&(void 0===this.internal.acroformPlugin||!1===this.internal.acroformPlugin.isInitialized)){if(n=this,O.FieldNum=0,this.internal.acroformPlugin=JSON.parse(JSON.stringify(L)),this.internal.acroformPlugin.acroFormDictionaryRoot)throw new Error("Exception while creating AcroformDictionary");r=n.internal.scaleFactor,n.internal.acroformPlugin.acroFormDictionaryRoot=new B,n.internal.acroformPlugin.acroFormDictionaryRoot._eventID=n.internal.events.subscribe("postPutResources",C),n.internal.events.subscribe("buildDocument",A),n.internal.events.subscribe("putCatalog",_),n.internal.events.subscribe("postPutPages",k),n.internal.acroformPlugin.isInitialized=!0}},T=t.__acroform__.arrayToPdfArray=function(t){if(Array.isArray(t)){for(var e="[",n=0;n<t.length;n++)switch(0!==n&&(e+=" "),o(t[n])){case"boolean":case"number":case"object":e+=t[n].toString();break;case"string":"/"!==t[n].substr(0,1)?e+="("+i(t[n].toString())+")":e+=t[n].toString()}return e+"]"}throw new Error("Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray")},j=function(t){return(t=t||"").toString(),"("+i(t)+")"},I=function(){var t;Object.defineProperty(this,"objId",{configurable:!0,get:function(){if(t||(t=n.internal.newObjectDeferred()),!t)throw new Error("AcroFormPDFObject: Couldn't create Object ID");return t},set:function(e){t=e}})};I.prototype.toString=function(){return this.objId+" 0 R"},I.prototype.putStream=function(){var t=this.getKeyValueListForStream();n.internal.putStream({data:this.stream,additionalKeyValues:t}),n.internal.out("endobj")},I.prototype.getKeyValueListForStream=function(){return function(t){var e=[],n=Object.getOwnPropertyNames(t).filter((function(t){return"content"!=t&&"appearanceStreamContent"!=t&&"_"!=t.substring(0,1)}));for(var r in n)if(!1===Object.getOwnPropertyDescriptor(t,n[r]).configurable){var i=n[r],o=t[i];o&&(Array.isArray(o)?e.push({key:i,value:T(o)}):o instanceof I?e.push({key:i,value:o.objId+" 0 R"}):"function"!=typeof o&&e.push({key:i,value:o}))}return e}(this)};var E=function(){I.call(this),Object.defineProperty(this,"Type",{value:"/XObject",configurable:!1,writeable:!0}),Object.defineProperty(this,"Subtype",{value:"/Form",configurable:!1,writeable:!0}),Object.defineProperty(this,"FormType",{value:1,configurable:!1,writeable:!0});var t,e=[];Object.defineProperty(this,"BBox",{configurable:!1,writeable:!0,get:function(){return e},set:function(t){e=t}}),Object.defineProperty(this,"Resources",{value:"2 0 R",configurable:!1,writeable:!0}),Object.defineProperty(this,"stream",{enumerable:!1,configurable:!0,set:function(e){t=e.trim()},get:function(){return t||null}})};c(E,I);var B=function(){I.call(this);var t,e=[];Object.defineProperty(this,"Kids",{enumerable:!1,configurable:!0,get:function(){return 0<e.length?e:void 0}}),Object.defineProperty(this,"Fields",{enumerable:!1,configurable:!1,get:function(){return e}}),Object.defineProperty(this,"DA",{enumerable:!1,configurable:!1,get:function(){if(t)return"("+t+")"},set:function(e){t=e}})};c(B,I);var O=function t(){I.call(this);var e=4;Object.defineProperty(this,"F",{enumerable:!1,configurable:!1,get:function(){return e},set:function(t){if(isNaN(t))throw new Error('Invalid value "'+t+'" for attribute F supplied.');e=t}}),Object.defineProperty(this,"showWhenPrinted",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(e,3))},set:function(t){!0===Boolean(t)?this.F=v(e,3):this.F=y(e,3)}});var n=0;Object.defineProperty(this,"Ff",{enumerable:!1,configurable:!1,get:function(){return n},set:function(t){if(isNaN(t))throw new Error('Invalid value "'+t+'" for attribute Ff supplied.');n=t}});var r=[];Object.defineProperty(this,"Rect",{enumerable:!1,configurable:!1,get:function(){if(0!==r.length)return r},set:function(t){r=void 0!==t?t:[]}}),Object.defineProperty(this,"x",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[0])?0:f(r[0])},set:function(t){r[0]=l(t)}}),Object.defineProperty(this,"y",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[1])?0:f(r[1])},set:function(t){r[1]=l(t)}}),Object.defineProperty(this,"width",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[2])?0:f(r[2])},set:function(t){r[2]=l(t)}}),Object.defineProperty(this,"height",{enumerable:!0,configurable:!0,get:function(){return!r||isNaN(r[3])?0:f(r[3])},set:function(t){r[3]=l(t)}});var o="";Object.defineProperty(this,"FT",{enumerable:!0,configurable:!1,get:function(){return o},set:function(t){switch(t){case"/Btn":case"/Tx":case"/Ch":case"/Sig":o=t;break;default:throw new Error('Invalid value "'+t+'" for attribute FT supplied.')}}});var s=null;Object.defineProperty(this,"T",{enumerable:!0,configurable:!1,get:function(){if(!s||s.length<1){if(this instanceof W)return;s="FieldObject"+t.FieldNum++}return"("+i(s)+")"},set:function(t){s=t.toString()}}),Object.defineProperty(this,"fieldName",{configurable:!0,enumerable:!0,get:function(){return s},set:function(t){s=t}});var u="helvetica";Object.defineProperty(this,"fontName",{enumerable:!0,configurable:!0,get:function(){return u},set:function(t){u=t}});var c="normal";Object.defineProperty(this,"fontStyle",{enumerable:!0,configurable:!0,get:function(){return c},set:function(t){c=t}});var h=0;Object.defineProperty(this,"fontSize",{enumerable:!0,configurable:!0,get:function(){return f(h)},set:function(t){h=l(t)}});var p=50;Object.defineProperty(this,"maxFontSize",{enumerable:!0,configurable:!0,get:function(){return f(p)},set:function(t){p=l(t)}});var d="black";Object.defineProperty(this,"color",{enumerable:!0,configurable:!0,get:function(){return d},set:function(t){d=t}});var g="/F1 0 Tf 0 g";Object.defineProperty(this,"DA",{enumerable:!0,configurable:!1,get:function(){if(!(!g||this instanceof W||this instanceof G))return j(g)},set:function(t){t=t.toString(),g=t}});var b=null;Object.defineProperty(this,"DV",{enumerable:!1,configurable:!1,get:function(){if(b)return this instanceof U==0?j(b):b},set:function(t){t=t.toString(),b=this instanceof U==0?"("===t.substr(0,1)?a(t.substr(1,t.length-2)):a(t):t}}),Object.defineProperty(this,"defaultValue",{enumerable:!0,configurable:!0,get:function(){return this instanceof U==1?a(b.substr(1,b.length-1)):b},set:function(t){t=t.toString(),b=this instanceof U==1?"/"+t:t}});var w=null;Object.defineProperty(this,"V",{enumerable:!1,configurable:!1,get:function(){if(w)return this instanceof U==0?j(w):w},set:function(t){t=t.toString(),w=this instanceof U==0?"("===t.substr(0,1)?a(t.substr(1,t.length-2)):a(t):t}}),Object.defineProperty(this,"value",{enumerable:!0,configurable:!0,get:function(){return this instanceof U==1?a(w.substr(1,w.length-1)):w},set:function(t){t=t.toString(),w=this instanceof U==1?"/"+t:t}}),Object.defineProperty(this,"hasAnnotation",{enumerable:!0,configurable:!0,get:function(){return this.Rect}}),Object.defineProperty(this,"Type",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?"/Annot":null}}),Object.defineProperty(this,"Subtype",{enumerable:!0,configurable:!1,get:function(){return this.hasAnnotation?"/Widget":null}});var x,N=!1;Object.defineProperty(this,"hasAppearanceStream",{enumerable:!0,configurable:!0,writeable:!0,get:function(){return N},set:function(t){t=Boolean(t),N=t}}),Object.defineProperty(this,"page",{enumerable:!0,configurable:!0,writeable:!0,get:function(){if(x)return x},set:function(t){x=t}}),Object.defineProperty(this,"readOnly",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,1))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,1):this.Ff=y(this.Ff,1)}}),Object.defineProperty(this,"required",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,2))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,2):this.Ff=y(this.Ff,2)}}),Object.defineProperty(this,"noExport",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,3))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,3):this.Ff=y(this.Ff,3)}});var L=null;Object.defineProperty(this,"Q",{enumerable:!0,configurable:!1,get:function(){if(null!==L)return L},set:function(t){if(-1===[0,1,2].indexOf(t))throw new Error('Invalid value "'+t+'" for attribute Q supplied.');L=t}}),Object.defineProperty(this,"textAlign",{get:function(){var t="left";switch(L){case 0:default:t="left";break;case 1:t="center";break;case 2:t="right"}return t},configurable:!0,enumerable:!0,set:function(t){switch(t){case"right":case 2:L=2;break;case"center":case 1:L=1;break;case"left":case 0:default:L=0}}})};c(O,I);var M=function(){O.call(this),this.FT="/Ch",this.V="()",this.fontName="zapfdingbats";var t=0;Object.defineProperty(this,"TI",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"topIndex",{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){t=e}});var e=[];Object.defineProperty(this,"Opt",{enumerable:!0,configurable:!1,get:function(){return T(e)},set:function(t){var n,r;r=[],"string"==typeof(n=t)&&(r=function(t,e,n){n||(n=1);for(var r,i=[];r=e.exec(t);)i.push(r[n]);return i}(n,/\((.*?)\)/g)),e=r}}),this.getOptions=function(){return e},this.setOptions=function(t){e=t,this.sort&&e.sort()},this.addOption=function(t){t=(t=t||"").toString(),e.push(t),this.sort&&e.sort()},this.removeOption=function(t,n){for(n=n||!1,t=(t=t||"").toString();-1!==e.indexOf(t)&&(e.splice(e.indexOf(t),1),!1!==n););},Object.defineProperty(this,"combo",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,18))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,18):this.Ff=y(this.Ff,18)}}),Object.defineProperty(this,"edit",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,19))},set:function(t){!0===this.combo&&(!0===Boolean(t)?this.Ff=v(this.Ff,19):this.Ff=y(this.Ff,19))}}),Object.defineProperty(this,"sort",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,20))},set:function(t){!0===Boolean(t)?(this.Ff=v(this.Ff,20),e.sort()):this.Ff=y(this.Ff,20)}}),Object.defineProperty(this,"multiSelect",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,22))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,22):this.Ff=y(this.Ff,22)}}),Object.defineProperty(this,"doNotSpellCheck",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,23))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,23):this.Ff=y(this.Ff,23)}}),Object.defineProperty(this,"commitOnSelChange",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,27))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,27):this.Ff=y(this.Ff,27)}}),this.hasAppearanceStream=!1};c(M,O);var q=function(){M.call(this),this.fontName="helvetica",this.combo=!1};c(q,M);var D=function(){q.call(this),this.combo=!0};c(D,q);var R=function(){D.call(this),this.edit=!0};c(R,D);var U=function(){O.call(this),this.FT="/Btn",Object.defineProperty(this,"noToggleToOff",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,15))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,15):this.Ff=y(this.Ff,15)}}),Object.defineProperty(this,"radio",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,16))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,16):this.Ff=y(this.Ff,16)}}),Object.defineProperty(this,"pushButton",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,17))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,17):this.Ff=y(this.Ff,17)}}),Object.defineProperty(this,"radioIsUnison",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,26))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,26):this.Ff=y(this.Ff,26)}});var t,e={};Object.defineProperty(this,"MK",{enumerable:!1,configurable:!1,get:function(){if(0!==Object.keys(e).length){var t,n=[];for(t in n.push("<<"),e)n.push("/"+t+" ("+e[t]+")");return n.push(">>"),n.join("\n")}},set:function(t){"object"===o(t)&&(e=t)}}),Object.defineProperty(this,"caption",{enumerable:!0,configurable:!0,get:function(){return e.CA||""},set:function(t){"string"==typeof t&&(e.CA=t)}}),Object.defineProperty(this,"AS",{enumerable:!1,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"appearanceState",{enumerable:!0,configurable:!0,get:function(){return t.substr(1,t.length-1)},set:function(e){t="/"+e}})};c(U,O);var z=function(){U.call(this),this.pushButton=!0};c(z,U);var H=function(){U.call(this),this.radio=!0,this.pushButton=!1;var t=[];Object.defineProperty(this,"Kids",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=void 0!==e?e:[]}})};c(H,U);var W=function(){var t,e;O.call(this),Object.defineProperty(this,"Parent",{enumerable:!1,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"optionName",{enumerable:!1,configurable:!0,get:function(){return e},set:function(t){e=t}});var n,r={};Object.defineProperty(this,"MK",{enumerable:!1,configurable:!1,get:function(){var t,e=[];for(t in e.push("<<"),r)e.push("/"+t+" ("+r[t]+")");return e.push(">>"),e.join("\n")},set:function(t){"object"===o(t)&&(r=t)}}),Object.defineProperty(this,"caption",{enumerable:!0,configurable:!0,get:function(){return r.CA||""},set:function(t){"string"==typeof t&&(r.CA=t)}}),Object.defineProperty(this,"AS",{enumerable:!1,configurable:!1,get:function(){return n},set:function(t){n=t}}),Object.defineProperty(this,"appearanceState",{enumerable:!0,configurable:!0,get:function(){return n.substr(1,n.length-1)},set:function(t){n="/"+t}}),this.optionName=name,this.caption="l",this.appearanceState="Off",this._AppearanceType=X.RadioButton.Circle,this.appearanceStreamContent=this._AppearanceType.createAppearanceStream(name)};c(W,O),H.prototype.setAppearance=function(t){if(!("createAppearanceStream"in t)||!("getCA"in t))throw new Error("Couldn't assign Appearance to RadioButton. Appearance was Invalid!");for(var e in this.Kids)if(this.Kids.hasOwnProperty(e)){var n=this.Kids[e];n.appearanceStreamContent=t.createAppearanceStream(n.optionName),n.caption=t.getCA()}},H.prototype.createOption=function(t){this.Kids.length;var e=new W;return e.Parent=this,e.optionName=t,this.Kids.push(e),J.call(this,e),e};var V=function(){U.call(this),this.fontName="zapfdingbats",this.caption="3",this.appearanceState="On",this.value="On",this.textAlign="center",this.appearanceStreamContent=X.CheckBox.createAppearanceStream()};c(V,U);var G=function(){O.call(this),this.FT="/Tx",Object.defineProperty(this,"multiline",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,13))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,13):this.Ff=y(this.Ff,13)}}),Object.defineProperty(this,"fileSelect",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,21))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,21):this.Ff=y(this.Ff,21)}}),Object.defineProperty(this,"doNotSpellCheck",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,23))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,23):this.Ff=y(this.Ff,23)}}),Object.defineProperty(this,"doNotScroll",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,24))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,24):this.Ff=y(this.Ff,24)}}),Object.defineProperty(this,"comb",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,25))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,25):this.Ff=y(this.Ff,25)}}),Object.defineProperty(this,"richText",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,26))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,26):this.Ff=y(this.Ff,26)}});var t=null;Object.defineProperty(this,"MaxLen",{enumerable:!0,configurable:!1,get:function(){return t},set:function(e){t=e}}),Object.defineProperty(this,"maxLength",{enumerable:!0,configurable:!0,get:function(){return t},set:function(e){Number.isInteger(e)&&(t=e)}}),Object.defineProperty(this,"hasAppearanceStream",{enumerable:!0,configurable:!0,get:function(){return this.V||this.DV}})};c(G,O);var Y=function(){G.call(this),Object.defineProperty(this,"password",{enumerable:!0,configurable:!0,get:function(){return Boolean(m(this.Ff,14))},set:function(t){!0===Boolean(t)?this.Ff=v(this.Ff,14):this.Ff=y(this.Ff,14)}}),this.password=!0};c(Y,G);var X={CheckBox:{createAppearanceStream:function(){return{N:{On:X.CheckBox.YesNormal},D:{On:X.CheckBox.YesPushDown,Off:X.CheckBox.OffPushDown}}},YesPushDown:function(t){var e=h(t),r=[],i=n.internal.getFont(t.fontName,t.fontStyle).id,o=n.__private__.encodeColorString(t.color),a=x(t,t.caption);return r.push("0.749023 g"),r.push("0 0 "+s(X.internal.getWidth(t))+" "+s(X.internal.getHeight(t))+" re"),r.push("f"),r.push("BMC"),r.push("q"),r.push("0 0 1 rg"),r.push("/"+i+" "+s(a.fontSize)+" Tf "+o),r.push("BT"),r.push(a.text),r.push("ET"),r.push("Q"),r.push("EMC"),e.stream=r.join("\n"),e},YesNormal:function(t){var e=h(t),r=n.internal.getFont(t.fontName,t.fontStyle).id,i=n.__private__.encodeColorString(t.color),o=[],a=X.internal.getHeight(t),u=X.internal.getWidth(t),c=x(t,t.caption);return o.push("1 g"),o.push("0 0 "+s(u)+" "+s(a)+" re"),o.push("f"),o.push("q"),o.push("0 0 1 rg"),o.push("0 0 "+s(u-1)+" "+s(a-1)+" re"),o.push("W"),o.push("n"),o.push("0 g"),o.push("BT"),o.push("/"+r+" "+s(c.fontSize)+" Tf "+i),o.push(c.text),o.push("ET"),o.push("Q"),e.stream=o.join("\n"),e},OffPushDown:function(t){var e=h(t),n=[];return n.push("0.749023 g"),n.push("0 0 "+s(X.internal.getWidth(t))+" "+s(X.internal.getHeight(t))+" re"),n.push("f"),e.stream=n.join("\n"),e}},RadioButton:{Circle:{createAppearanceStream:function(t){var e={D:{Off:X.RadioButton.Circle.OffPushDown},N:{}};return e.N[t]=X.RadioButton.Circle.YesNormal,e.D[t]=X.RadioButton.Circle.YesPushDown,e},getCA:function(){return"l"},YesNormal:function(t){var e=h(t),n=[],r=X.internal.getWidth(t)<=X.internal.getHeight(t)?X.internal.getWidth(t)/4:X.internal.getHeight(t)/4;r=Number((.9*r).toFixed(5));var i=X.internal.Bezier_C,o=Number((r*i).toFixed(5));return n.push("q"),n.push("1 0 0 1 "+u(X.internal.getWidth(t)/2)+" "+u(X.internal.getHeight(t)/2)+" cm"),n.push(r+" 0 m"),n.push(r+" "+o+" "+o+" "+r+" 0 "+r+" c"),n.push("-"+o+" "+r+" -"+r+" "+o+" -"+r+" 0 c"),n.push("-"+r+" -"+o+" -"+o+" -"+r+" 0 -"+r+" c"),n.push(o+" -"+r+" "+r+" -"+o+" "+r+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e},YesPushDown:function(t){var e=h(t),n=[],r=X.internal.getWidth(t)<=X.internal.getHeight(t)?X.internal.getWidth(t)/4:X.internal.getHeight(t)/4,i=(r=Number((.9*r).toFixed(5)),Number((2*r).toFixed(5))),o=Number((i*X.internal.Bezier_C).toFixed(5)),a=Number((r*X.internal.Bezier_C).toFixed(5));return n.push("0.749023 g"),n.push("q"),n.push("1 0 0 1 "+u(X.internal.getWidth(t)/2)+" "+u(X.internal.getHeight(t)/2)+" cm"),n.push(i+" 0 m"),n.push(i+" "+o+" "+o+" "+i+" 0 "+i+" c"),n.push("-"+o+" "+i+" -"+i+" "+o+" -"+i+" 0 c"),n.push("-"+i+" -"+o+" -"+o+" -"+i+" 0 -"+i+" c"),n.push(o+" -"+i+" "+i+" -"+o+" "+i+" 0 c"),n.push("f"),n.push("Q"),n.push("0 g"),n.push("q"),n.push("1 0 0 1 "+u(X.internal.getWidth(t)/2)+" "+u(X.internal.getHeight(t)/2)+" cm"),n.push(r+" 0 m"),n.push(r+" "+a+" "+a+" "+r+" 0 "+r+" c"),n.push("-"+a+" "+r+" -"+r+" "+a+" -"+r+" 0 c"),n.push("-"+r+" -"+a+" -"+a+" -"+r+" 0 -"+r+" c"),n.push(a+" -"+r+" "+r+" -"+a+" "+r+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e},OffPushDown:function(t){var e=h(t),n=[],r=X.internal.getWidth(t)<=X.internal.getHeight(t)?X.internal.getWidth(t)/4:X.internal.getHeight(t)/4,i=(r=Number((.9*r).toFixed(5)),Number((2*r).toFixed(5))),o=Number((i*X.internal.Bezier_C).toFixed(5));return n.push("0.749023 g"),n.push("q"),n.push("1 0 0 1 "+u(X.internal.getWidth(t)/2)+" "+u(X.internal.getHeight(t)/2)+" cm"),n.push(i+" 0 m"),n.push(i+" "+o+" "+o+" "+i+" 0 "+i+" c"),n.push("-"+o+" "+i+" -"+i+" "+o+" -"+i+" 0 c"),n.push("-"+i+" -"+o+" -"+o+" -"+i+" 0 -"+i+" c"),n.push(o+" -"+i+" "+i+" -"+o+" "+i+" 0 c"),n.push("f"),n.push("Q"),e.stream=n.join("\n"),e}},Cross:{createAppearanceStream:function(t){var e={D:{Off:X.RadioButton.Cross.OffPushDown},N:{}};return e.N[t]=X.RadioButton.Cross.YesNormal,e.D[t]=X.RadioButton.Cross.YesPushDown,e},getCA:function(){return"8"},YesNormal:function(t){var e=h(t),n=[],r=X.internal.calculateCross(t);return n.push("q"),n.push("1 1 "+s(X.internal.getWidth(t)-2)+" "+s(X.internal.getHeight(t)-2)+" re"),n.push("W"),n.push("n"),n.push(s(r.x1.x)+" "+s(r.x1.y)+" m"),n.push(s(r.x2.x)+" "+s(r.x2.y)+" l"),n.push(s(r.x4.x)+" "+s(r.x4.y)+" m"),n.push(s(r.x3.x)+" "+s(r.x3.y)+" l"),n.push("s"),n.push("Q"),e.stream=n.join("\n"),e},YesPushDown:function(t){var e=h(t),n=X.internal.calculateCross(t),r=[];return r.push("0.749023 g"),r.push("0 0 "+s(X.internal.getWidth(t))+" "+s(X.internal.getHeight(t))+" re"),r.push("f"),r.push("q"),r.push("1 1 "+s(X.internal.getWidth(t)-2)+" "+s(X.internal.getHeight(t)-2)+" re"),r.push("W"),r.push("n"),r.push(s(n.x1.x)+" "+s(n.x1.y)+" m"),r.push(s(n.x2.x)+" "+s(n.x2.y)+" l"),r.push(s(n.x4.x)+" "+s(n.x4.y)+" m"),r.push(s(n.x3.x)+" "+s(n.x3.y)+" l"),r.push("s"),r.push("Q"),e.stream=r.join("\n"),e},OffPushDown:function(t){var e=h(t),n=[];return n.push("0.749023 g"),n.push("0 0 "+s(X.internal.getWidth(t))+" "+s(X.internal.getHeight(t))+" re"),n.push("f"),e.stream=n.join("\n"),e}}},createDefaultAppearanceStream:function(t){var e=n.internal.getFont(t.fontName,t.fontStyle).id,r=n.__private__.encodeColorString(t.color);return"/"+e+" "+t.fontSize+" Tf "+r}};X.internal={Bezier_C:.551915024494,calculateCross:function(t){var e=X.internal.getWidth(t),n=X.internal.getHeight(t),r=Math.min(e,n);return{x1:{x:(e-r)/2,y:(n-r)/2+r},x2:{x:(e-r)/2+r,y:(n-r)/2},x3:{x:(e-r)/2,y:(n-r)/2},x4:{x:(e-r)/2+r,y:(n-r)/2+r}}}},X.internal.getWidth=function(t){var e=0;return"object"===o(t)&&(e=l(t.Rect[2])),e},X.internal.getHeight=function(t){var e=0;return"object"===o(t)&&(e=l(t.Rect[3])),e};var J=t.addField=function(t){if(F.call(this),!(t instanceof O))throw new Error("Invalid argument passed to jsPDF.addField.");return function(t){n.internal.acroformPlugin.printedOut&&(n.internal.acroformPlugin.printedOut=!1,n.internal.acroformPlugin.acroFormDictionaryRoot=null),n.internal.acroformPlugin.acroFormDictionaryRoot||F.call(n),n.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(t)}.call(this,t),t.page=n.internal.getCurrentPageInfo().pageNumber,this};t.addButton=function(t){if(t instanceof U==0)throw new Error("Invalid argument passed to jsPDF.addButton.");return J.call(this,t)},t.addTextField=function(t){if(t instanceof G==0)throw new Error("Invalid argument passed to jsPDF.addTextField.");return J.call(this,t)},t.addChoiceField=function(t){if(t instanceof M==0)throw new Error("Invalid argument passed to jsPDF.addChoiceField.");return J.call(this,t)},"object"==o(e)&&void 0===e.ChoiceField&&void 0===e.ListBox&&void 0===e.ComboBox&&void 0===e.EditBox&&void 0===e.Button&&void 0===e.PushButton&&void 0===e.RadioButton&&void 0===e.CheckBox&&void 0===e.TextField&&void 0===e.PasswordField?(e.ChoiceField=M,e.ListBox=q,e.ComboBox=D,e.EditBox=R,e.Button=U,e.PushButton=z,e.RadioButton=H,e.CheckBox=V,e.TextField=G,e.PasswordField=Y,e.AcroForm={Appearance:X}):console.warn("AcroForm-Classes are not populated into global-namespace, because the class-Names exist already."),t.AcroFormChoiceField=M,t.AcroFormListBox=q,t.AcroFormComboBox=D,t.AcroFormEditBox=R,t.AcroFormButton=U,t.AcroFormPushButton=z,t.AcroFormRadioButton=H,t.AcroFormCheckBox=V,t.AcroFormTextField=G,t.AcroFormPasswordField=Y,t.AcroFormAppearance=X,t.AcroForm={ChoiceField:M,ListBox:q,ComboBox:D,EditBox:R,Button:U,PushButton:z,RadioButton:H,CheckBox:V,TextField:G,PasswordField:Y,Appearance:X}})((window.tmp=gt).API,"undefined"!=typeof window&&window||void 0!==r&&r),
/** @license
   * jsPDF addImage plugin
   * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/
   *               2013 Chris Dowling, https://github.com/gingerchris
   *               2013 Trinh Ho, https://github.com/ineedfat
   *               2013 Edwin Alejandro Perez, https://github.com/eaparango
   *               2013 Norah Smith, https://github.com/burnburnrocket
   *               2014 Diego Casorran, https://github.com/diegocr
   *               2014 James Robb, https://github.com/jamesbrobb
   *
   * 
   */
function(t){var e="addImage_",n={PNG:[[137,80,78,71]],TIFF:[[77,77,0,42],[73,73,42,0]],JPEG:[[255,216,255,224,void 0,void 0,74,70,73,70,0],[255,216,255,225,void 0,void 0,69,120,105,102,0,0]],JPEG2000:[[0,0,0,12,106,80,32,32]],GIF87a:[[71,73,70,56,55,97]],GIF89a:[[71,73,70,56,57,97]],BMP:[[66,77],[66,65],[67,73],[67,80],[73,67],[80,84]]},r=t.getImageFileTypeByImageData=function(e,r){var i,o;r=r||"UNKNOWN";var a,s,u,c="UNKNOWN";for(u in t.isArrayBufferView(e)&&(e=t.arrayBufferToBinaryString(e)),n)for(a=n[u],i=0;i<a.length;i+=1){for(s=!0,o=0;o<a[i].length;o+=1)if(void 0!==a[i][o]&&a[i][o]!==e.charCodeAt(o)){s=!1;break}if(!0===s){c=u;break}}return"UNKNOWN"===c&&"UNKNOWN"!==r&&(console.warn('FileType of Image not recognized. Processing image as "'+r+'".'),c=r),c},i=function t(e){for(var n=this.internal.newObject(),r=this.internal.write,i=this.internal.putStream,o=(0,this.internal.getFilters)();-1!==o.indexOf("FlateEncode");)o.splice(o.indexOf("FlateEncode"),1);e.n=n;var a=[];if(a.push({key:"Type",value:"/XObject"}),a.push({key:"Subtype",value:"/Image"}),a.push({key:"Width",value:e.w}),a.push({key:"Height",value:e.h}),e.cs===this.color_spaces.INDEXED?a.push({key:"ColorSpace",value:"[/Indexed /DeviceRGB "+(e.pal.length/3-1)+" "+("smask"in e?n+2:n+1)+" 0 R]"}):(a.push({key:"ColorSpace",value:"/"+e.cs}),e.cs===this.color_spaces.DEVICE_CMYK&&a.push({key:"Decode",value:"[1 0 1 0 1 0 1 0]"})),a.push({key:"BitsPerComponent",value:e.bpc}),"dp"in e&&a.push({key:"DecodeParms",value:"<<"+e.dp+">>"}),"trns"in e&&e.trns.constructor==Array){for(var s="",u=0,c=e.trns.length;u<c;u++)s+=e.trns[u]+" "+e.trns[u]+" ";a.push({key:"Mask",value:"["+s+"]"})}"smask"in e&&a.push({key:"SMask",value:n+1+" 0 R"});var l=void 0!==e.f?["/"+e.f]:void 0;if(i({data:e.data,additionalKeyValues:a,alreadyAppliedFilters:l}),r("endobj"),"smask"in e){var f="/Predictor "+e.p+" /Colors 1 /BitsPerComponent "+e.bpc+" /Columns "+e.w,h={w:e.w,h:e.h,cs:"DeviceGray",bpc:e.bpc,dp:f,data:e.smask};"f"in e&&(h.f=e.f),t.call(this,h)}e.cs===this.color_spaces.INDEXED&&(this.internal.newObject(),i({data:this.arrayBufferToBinaryString(new Uint8Array(e.pal))}),r("endobj"))},a=function(){var t=this.internal.collections[e+"images"];for(var n in t)i.call(this,t[n])},s=function(){var t,n=this.internal.collections[e+"images"],r=this.internal.write;for(var i in n)r("/I"+(t=n[i]).i,t.n,"0","R")},u=function(e){return"function"==typeof t["process"+e.toUpperCase()]},c=function(t){return"object"===o(t)&&1===t.nodeType},l=function(e,n){if("IMG"===e.nodeName&&e.hasAttribute("src")){var r=""+e.getAttribute("src");if(0===r.indexOf("data:image/"))return unescape(r);var i=t.loadFile(r);if(void 0!==i)return btoa(i)}if("CANVAS"===e.nodeName){var o=e;return e.toDataURL("image/jpeg",1)}(o=document.createElement("canvas")).width=e.clientWidth||e.width,o.height=e.clientHeight||e.height;var a=o.getContext("2d");if(!a)throw"addImage requires canvas to be supported by browser.";return a.drawImage(e,0,0,o.width,o.height),o.toDataURL("png"==(""+n).toLowerCase()?"image/png":"image/jpeg")},f=function(t,e){var n;if(e)for(var r in e)if(t===e[r].alias){n=e[r];break}return n};t.color_spaces={DEVICE_RGB:"DeviceRGB",DEVICE_GRAY:"DeviceGray",DEVICE_CMYK:"DeviceCMYK",CAL_GREY:"CalGray",CAL_RGB:"CalRGB",LAB:"Lab",ICC_BASED:"ICCBased",INDEXED:"Indexed",PATTERN:"Pattern",SEPARATION:"Separation",DEVICE_N:"DeviceN"},t.decode={DCT_DECODE:"DCTDecode",FLATE_DECODE:"FlateDecode",LZW_DECODE:"LZWDecode",JPX_DECODE:"JPXDecode",JBIG2_DECODE:"JBIG2Decode",ASCII85_DECODE:"ASCII85Decode",ASCII_HEX_DECODE:"ASCIIHexDecode",RUN_LENGTH_DECODE:"RunLengthDecode",CCITT_FAX_DECODE:"CCITTFaxDecode"},t.image_compression={NONE:"NONE",FAST:"FAST",MEDIUM:"MEDIUM",SLOW:"SLOW"},t.sHashCode=function(t){var e,n=0;if(0===(t=t||"").length)return n;for(e=0;e<t.length;e++)n=(n<<5)-n+t.charCodeAt(e),n|=0;return n},t.isString=function(t){return"string"==typeof t},t.validateStringAsBase64=function(t){(t=t||"").toString().trim();var e=!0;return 0===t.length&&(e=!1),t.length%4!=0&&(e=!1),!1===/^[A-Za-z0-9+\/]+$/.test(t.substr(0,t.length-2))&&(e=!1),!1===/^[A-Za-z0-9\/][A-Za-z0-9+\/]|[A-Za-z0-9+\/]=|==$/.test(t.substr(-2))&&(e=!1),e},t.extractInfoFromBase64DataURI=function(t){return/^data:([\w]+?\/([\w]+?));\S*;*base64,(.+)$/g.exec(t)},t.extractImageFromDataUrl=function(t){var e=(t=t||"").split("base64,"),n=null;if(2===e.length){var r=/^data:(\w*\/\w*);*(charset=[\w=-]*)*;*$/.exec(e[0]);Array.isArray(r)&&(n={mimeType:r[1],charset:r[2],data:e[1]})}return n},t.supportsArrayBuffer=function(){return"undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array},t.isArrayBuffer=function(t){return!!this.supportsArrayBuffer()&&t instanceof ArrayBuffer},t.isArrayBufferView=function(t){return!!this.supportsArrayBuffer()&&"undefined"!=typeof Uint32Array&&(t instanceof Int8Array||t instanceof Uint8Array||"undefined"!=typeof Uint8ClampedArray&&t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)},t.binaryStringToUint8Array=function(t){for(var e=t.length,n=new Uint8Array(e),r=0;r<e;r++)n[r]=t.charCodeAt(r);return n},t.arrayBufferToBinaryString=function(t){if("function"==typeof atob)return atob(this.arrayBufferToBase64(t))},t.arrayBufferToBase64=function(t){for(var e,n="",r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=new Uint8Array(t),o=i.byteLength,a=o%3,s=o-a,u=0;u<s;u+=3)n+=r[(16515072&(e=i[u]<<16|i[u+1]<<8|i[u+2]))>>18]+r[(258048&e)>>12]+r[(4032&e)>>6]+r[63&e];return 1==a?n+=r[(252&(e=i[s]))>>2]+r[(3&e)<<4]+"==":2==a&&(n+=r[(64512&(e=i[s]<<8|i[s+1]))>>10]+r[(1008&e)>>4]+r[(15&e)<<2]+"="),n},t.createImageInfo=function(t,e,n,r,i,o,a,s,u,c,l,f,h){var p={alias:s,w:e,h:n,cs:r,bpc:i,i:a,data:t};return o&&(p.f=o),u&&(p.dp=u),c&&(p.trns=c),l&&(p.pal=l),f&&(p.smask=f),h&&(p.p=h),p},t.addImage=function(n,r,i,h,p,d,g,m,v){var y="";if("string"!=typeof r){var b=d;d=p,p=h,h=i,i=r,r=b}if("object"===o(n)&&!c(n)&&"imageData"in n){var w=n;n=w.imageData,r=w.format||r||"UNKNOWN",i=w.x||i||0,h=w.y||h||0,p=w.w||p,d=w.h||d,g=w.alias||g,m=w.compression||m,v=w.rotation||w.angle||v}var x=this.internal.getFilters();if(void 0===m&&-1!==x.indexOf("FlateEncode")&&(m="SLOW"),"string"==typeof n&&(n=unescape(n)),isNaN(i)||isNaN(h))throw console.error("jsPDF.addImage: Invalid coordinates",arguments),new Error("Invalid coordinates passed to jsPDF.addImage");var N,L,A,S,_,C,k,P=function(){var t=this.internal.collections[e+"images"];return t||(this.internal.collections[e+"images"]=t={},this.internal.events.subscribe("putResources",a),this.internal.events.subscribe("putXobjectDict",s)),t}.call(this);if(!((N=f(n,P))||(c(n)&&(n=l(n,r)),(null==(k=g)||0===k.length)&&(g="string"==typeof(C=n)?t.sHashCode(C):t.isArrayBufferView(C)?t.sHashCode(t.arrayBufferToBinaryString(C)):null),N=f(g,P)))){if(this.isString(n)&&(""!==(y=this.convertStringToImageData(n))||void 0!==(y=t.loadFile(n)))&&(n=y),r=this.getImageFileTypeByImageData(n,r),!u(r))throw new Error("addImage does not support files of type '"+r+"', please ensure that a plugin for '"+r+"' support is added.");if(this.supportsArrayBuffer()&&(n instanceof Uint8Array||(L=n,n=this.binaryStringToUint8Array(n))),!(N=this["process"+r.toUpperCase()](n,(_=0,(S=P)&&(_=Object.keys?Object.keys(S).length:function(t){var e=0;for(var n in t)t.hasOwnProperty(n)&&e++;return e}(S)),_),g,((A=m)&&"string"==typeof A&&(A=A.toUpperCase()),A in t.image_compression?A:t.image_compression.NONE),L)))throw new Error("An unknown error occurred whilst processing the image")}return function(t,e,n,r,i,o,a,s){var u=function(t,e,n){return t||e||(e=t=-96),t<0&&(t=-1*n.w*72/t/this.internal.scaleFactor),e<0&&(e=-1*n.h*72/e/this.internal.scaleFactor),0===t&&(t=e*n.w/n.h),0===e&&(e=t*n.h/n.w),[t,e]}.call(this,n,r,i),c=this.internal.getCoordinateString,l=this.internal.getVerticalCoordinateString;if(n=u[0],r=u[1],a[o]=i,s){s*=Math.PI/180;var f=Math.cos(s),h=Math.sin(s),p=function(t){return t.toFixed(4)},d=[p(f),p(h),p(-1*h),p(f),0,0,"cm"]}this.internal.write("q"),s?(this.internal.write([1,"0","0",1,c(t),l(e+r),"cm"].join(" ")),this.internal.write(d.join(" ")),this.internal.write([c(n),"0","0",c(r),"0","0","cm"].join(" "))):this.internal.write([c(n),"0","0",c(r),c(t),l(e+r),"cm"].join(" ")),this.internal.write("/I"+i.i+" Do"),this.internal.write("Q")}.call(this,i,h,p,d,N,N.i,P,v),this},t.convertStringToImageData=function(e){var n,r="";if(this.isString(e)){var i;n=null!==(i=this.extractImageFromDataUrl(e))?i.data:e;try{r=atob(n)}catch(e){throw t.validateStringAsBase64(n)?new Error("atob-Error in jsPDF.convertStringToImageData "+e.message):new Error("Supplied Data is not a valid base64-String jsPDF.convertStringToImageData ")}}return r};var h=function(t,e){return t.subarray(e,e+5)};t.processJPEG=function(t,e,n,i,o,a){var s,u=this.decode.DCT_DECODE;if(!this.isString(t)&&!this.isArrayBuffer(t)&&!this.isArrayBufferView(t))return null;if(this.isString(t)&&(s=function(t){var e;if("JPEG"!==r(t))throw new Error("getJpegSize requires a binary string jpeg file");for(var n=256*t.charCodeAt(4)+t.charCodeAt(5),i=4,o=t.length;i<o;){if(i+=n,255!==t.charCodeAt(i))throw new Error("getJpegSize could not find the size of the image");if(192===t.charCodeAt(i+1)||193===t.charCodeAt(i+1)||194===t.charCodeAt(i+1)||195===t.charCodeAt(i+1)||196===t.charCodeAt(i+1)||197===t.charCodeAt(i+1)||198===t.charCodeAt(i+1)||199===t.charCodeAt(i+1))return e=256*t.charCodeAt(i+5)+t.charCodeAt(i+6),[256*t.charCodeAt(i+7)+t.charCodeAt(i+8),e,t.charCodeAt(i+9)];i+=2,n=256*t.charCodeAt(i)+t.charCodeAt(i+1)}}(t)),this.isArrayBuffer(t)&&(t=new Uint8Array(t)),this.isArrayBufferView(t)&&(s=function(t){if(65496!=(t[0]<<8|t[1]))throw new Error("Supplied data is not a JPEG");for(var e,n=t.length,r=(t[4]<<8)+t[5],i=4;i<n;){if(r=((e=h(t,i+=r))[2]<<8)+e[3],(192===e[1]||194===e[1])&&255===e[0]&&7<r)return{width:((e=h(t,i+5))[2]<<8)+e[3],height:(e[0]<<8)+e[1],numcomponents:e[4]};i+=2}throw new Error("getJpegSizeFromBytes could not find the size of the image")}(t),t=o||this.arrayBufferToBinaryString(t)),void 0===a)switch(s.numcomponents){case 1:a=this.color_spaces.DEVICE_GRAY;break;case 4:a=this.color_spaces.DEVICE_CMYK;break;default:case 3:a=this.color_spaces.DEVICE_RGB}return this.createImageInfo(t,s.width,s.height,a,8,u,e,n)},t.processJPG=function(){return this.processJPEG.apply(this,arguments)},t.getImageProperties=function(e){var n,r,i="";if(c(e)&&(e=l(e)),this.isString(e)&&(""!==(i=this.convertStringToImageData(e))||void 0!==(i=t.loadFile(e)))&&(e=i),r=this.getImageFileTypeByImageData(e),!u(r))throw new Error("addImage does not support files of type '"+r+"', please ensure that a plugin for '"+r+"' support is added.");if(this.supportsArrayBuffer()&&(e instanceof Uint8Array||(e=this.binaryStringToUint8Array(e))),!(n=this["process"+r.toUpperCase()](e)))throw new Error("An unknown error occurred whilst processing the image");return{fileType:r,width:n.w,height:n.h,colorSpace:n.cs,compressionMode:n.f,bitsPerComponent:n.bpc}}}(gt.API),
/**
   * @license
   * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */
s=gt.API,gt.API.events.push(["addPage",function(t){this.internal.getPageInfo(t.pageNumber).pageContext.annotations=[]}]),s.events.push(["putPage",function(t){for(var e=this.internal.getPageInfoByObjId(t.objId),n=t.pageContext.annotations,r=function(t){if(void 0!==t&&""!=t)return!0},i=!1,o=0;o<n.length&&!i;o++)switch((u=n[o]).type){case"link":if(r(u.options.url)||r(u.options.pageNumber)){i=!0;break}case"reference":case"text":case"freetext":i=!0}if(0!=i){this.internal.write("/Annots ["),this.internal.pageSize.height;var a=this.internal.getCoordinateString,s=this.internal.getVerticalCoordinateString;for(o=0;o<n.length;o++){var u;switch((u=n[o]).type){case"reference":this.internal.write(" "+u.object.objId+" 0 R ");break;case"text":var c=this.internal.newAdditionalObject(),l=this.internal.newAdditionalObject(),f=u.title||"Note";m="<</Type /Annot /Subtype /Text "+(p="/Rect ["+a(u.bounds.x)+" "+s(u.bounds.y+u.bounds.h)+" "+a(u.bounds.x+u.bounds.w)+" "+s(u.bounds.y)+"] ")+"/Contents ("+u.contents+")",m+=" /Popup "+l.objId+" 0 R",m+=" /P "+e.objId+" 0 R",m+=" /T ("+f+") >>",c.content=m;var h=c.objId+" 0 R";m="<</Type /Annot /Subtype /Popup "+(p="/Rect ["+a(u.bounds.x+30)+" "+s(u.bounds.y+u.bounds.h)+" "+a(u.bounds.x+u.bounds.w+30)+" "+s(u.bounds.y)+"] ")+" /Parent "+h,u.open&&(m+=" /Open true"),m+=" >>",l.content=m,this.internal.write(c.objId,"0 R",l.objId,"0 R");break;case"freetext":var p="/Rect ["+a(u.bounds.x)+" "+s(u.bounds.y)+" "+a(u.bounds.x+u.bounds.w)+" "+s(u.bounds.y+u.bounds.h)+"] ",d=u.color||"#000000";m="<</Type /Annot /Subtype /FreeText "+p+"/Contents ("+u.contents+")",m+=" /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#"+d+")",m+=" /Border [0 0 0]",m+=" >>",this.internal.write(m);break;case"link":if(u.options.name){var g=this.annotations._nameMap[u.options.name];u.options.pageNumber=g.page,u.options.top=g.y}else u.options.top||(u.options.top=0);p="/Rect ["+a(u.x)+" "+s(u.y)+" "+a(u.x+u.w)+" "+s(u.y+u.h)+"] ";var m="";if(u.options.url)m="<</Type /Annot /Subtype /Link "+p+"/Border [0 0 0] /A <</S /URI /URI ("+u.options.url+") >>";else if(u.options.pageNumber)switch(m="<</Type /Annot /Subtype /Link "+p+"/Border [0 0 0] /Dest ["+this.internal.getPageInfo(u.options.pageNumber).objId+" 0 R",u.options.magFactor=u.options.magFactor||"XYZ",u.options.magFactor){case"Fit":m+=" /Fit]";break;case"FitH":m+=" /FitH "+u.options.top+"]";break;case"FitV":u.options.left=u.options.left||0,m+=" /FitV "+u.options.left+"]";break;case"XYZ":default:var v=s(u.options.top);u.options.left=u.options.left||0,void 0===u.options.zoom&&(u.options.zoom=0),m+=" /XYZ "+u.options.left+" "+v+" "+u.options.zoom+"]"}""!=m&&(m+=" >>",this.internal.write(m))}}this.internal.write("]")}}]),s.createAnnotation=function(t){var e=this.internal.getCurrentPageInfo();switch(t.type){case"link":this.link(t.bounds.x,t.bounds.y,t.bounds.w,t.bounds.h,t);break;case"text":case"freetext":e.pageContext.annotations.push(t)}},s.link=function(t,e,n,r,i){this.internal.getCurrentPageInfo().pageContext.annotations.push({x:t,y:e,w:n,h:r,options:i,type:"link"})},s.textWithLink=function(t,e,n,r){var i=this.getTextWidth(t),o=this.internal.getLineHeight()/this.internal.scaleFactor;return this.text(t,e,n),n+=.2*o,this.link(e,n-o,i,o,r),i},s.getTextWidth=function(t){var e=this.internal.getFontSize();return this.getStringUnitWidth(t)*e/this.internal.scaleFactor},
/**
   * @license
   * Copyright (c) 2017 Aras Abbasi 
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */
function(t){var e={1569:[65152],1570:[65153,65154],1571:[65155,65156],1572:[65157,65158],1573:[65159,65160],1574:[65161,65162,65163,65164],1575:[65165,65166],1576:[65167,65168,65169,65170],1577:[65171,65172],1578:[65173,65174,65175,65176],1579:[65177,65178,65179,65180],1580:[65181,65182,65183,65184],1581:[65185,65186,65187,65188],1582:[65189,65190,65191,65192],1583:[65193,65194],1584:[65195,65196],1585:[65197,65198],1586:[65199,65200],1587:[65201,65202,65203,65204],1588:[65205,65206,65207,65208],1589:[65209,65210,65211,65212],1590:[65213,65214,65215,65216],1591:[65217,65218,65219,65220],1592:[65221,65222,65223,65224],1593:[65225,65226,65227,65228],1594:[65229,65230,65231,65232],1601:[65233,65234,65235,65236],1602:[65237,65238,65239,65240],1603:[65241,65242,65243,65244],1604:[65245,65246,65247,65248],1605:[65249,65250,65251,65252],1606:[65253,65254,65255,65256],1607:[65257,65258,65259,65260],1608:[65261,65262],1609:[65263,65264,64488,64489],1610:[65265,65266,65267,65268],1649:[64336,64337],1655:[64477],1657:[64358,64359,64360,64361],1658:[64350,64351,64352,64353],1659:[64338,64339,64340,64341],1662:[64342,64343,64344,64345],1663:[64354,64355,64356,64357],1664:[64346,64347,64348,64349],1667:[64374,64375,64376,64377],1668:[64370,64371,64372,64373],1670:[64378,64379,64380,64381],1671:[64382,64383,64384,64385],1672:[64392,64393],1676:[64388,64389],1677:[64386,64387],1678:[64390,64391],1681:[64396,64397],1688:[64394,64395],1700:[64362,64363,64364,64365],1702:[64366,64367,64368,64369],1705:[64398,64399,64400,64401],1709:[64467,64468,64469,64470],1711:[64402,64403,64404,64405],1713:[64410,64411,64412,64413],1715:[64406,64407,64408,64409],1722:[64414,64415],1723:[64416,64417,64418,64419],1726:[64426,64427,64428,64429],1728:[64420,64421],1729:[64422,64423,64424,64425],1733:[64480,64481],1734:[64473,64474],1735:[64471,64472],1736:[64475,64476],1737:[64482,64483],1739:[64478,64479],1740:[64508,64509,64510,64511],1744:[64484,64485,64486,64487],1746:[64430,64431],1747:[64432,64433]},n={65247:{65154:65269,65156:65271,65160:65273,65166:65275},65248:{65154:65270,65156:65272,65160:65274,65166:65276},65165:{65247:{65248:{65258:65010}}},1617:{1612:64606,1613:64607,1614:64608,1615:64609,1616:64610}},r={1612:64606,1613:64607,1614:64608,1615:64609,1616:64610},i=[1570,1571,1573,1575];t.__arabicParser__={};var o=t.__arabicParser__.isInArabicSubstitutionA=function(t){return void 0!==e[t.charCodeAt(0)]},a=t.__arabicParser__.isArabicLetter=function(t){return"string"==typeof t&&/^[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]+$/.test(t)},s=t.__arabicParser__.isArabicEndLetter=function(t){return a(t)&&o(t)&&e[t.charCodeAt(0)].length<=2},u=t.__arabicParser__.isArabicAlfLetter=function(t){return a(t)&&0<=i.indexOf(t.charCodeAt(0))},c=(t.__arabicParser__.arabicLetterHasIsolatedForm=function(t){return a(t)&&o(t)&&1<=e[t.charCodeAt(0)].length},t.__arabicParser__.arabicLetterHasFinalForm=function(t){return a(t)&&o(t)&&2<=e[t.charCodeAt(0)].length}),l=(t.__arabicParser__.arabicLetterHasInitialForm=function(t){return a(t)&&o(t)&&3<=e[t.charCodeAt(0)].length},t.__arabicParser__.arabicLetterHasMedialForm=function(t){return a(t)&&o(t)&&4==e[t.charCodeAt(0)].length}),f=t.__arabicParser__.resolveLigatures=function(t){var e=0,r=n,i=0,o="",a=0;for(e=0;e<t.length;e+=1)void 0!==r[t.charCodeAt(e)]?(a++,"number"==typeof(r=r[t.charCodeAt(e)])&&(i=-1!==(i=h(t.charAt(e),t.charAt(e-a),t.charAt(e+1)))?i:0,o+=String.fromCharCode(r),r=n,a=0),e===t.length-1&&(r=n,o+=t.charAt(e-(a-1)),e-=a-1,a=0)):(r=n,o+=t.charAt(e-a),e-=a,a=0);return o},h=(t.__arabicParser__.isArabicDiacritic=function(t){return void 0!==t&&void 0!==r[t.charCodeAt(0)]},t.__arabicParser__.getCorrectForm=function(t,e,n){return a(t)?!1===o(t)?-1:!c(t)||!a(e)&&!a(n)||!a(n)&&s(e)||s(t)&&!a(e)||s(t)&&u(e)||s(t)&&s(e)?0:l(t)&&a(e)&&!s(e)&&a(n)&&c(n)?3:s(t)||!a(n)?1:2:-1}),p=t.__arabicParser__.processArabic=t.processArabic=function(t){var n=0,r=0,i=0,o="",s="",u="",c=(t=t||"").split("\\s+"),l=[];for(n=0;n<c.length;n+=1){for(l.push(""),r=0;r<c[n].length;r+=1)o=c[n][r],s=c[n][r-1],u=c[n][r+1],a(o)?(i=h(o,s,u),l[n]+=-1!==i?String.fromCharCode(e[o.charCodeAt(0)][i]):o):l[n]+=o;l[n]=f(l[n])}return l.join(" ")};t.events.push(["preProcessText",function(t){var e=t.text,n=(t.x,t.y,t.options||{}),r=(t.mutex,n.lang,[]);if("[object Array]"===Object.prototype.toString.call(e)){var i=0;for(r=[],i=0;i<e.length;i+=1)"[object Array]"===Object.prototype.toString.call(e[i])?r.push([p(e[i][0]),e[i][1],e[i][2]]):r.push([p(e[i])]);t.text=r}else t.text=p(e)}])}(gt.API),gt.API.autoPrint=function(t){var e;switch((t=t||{}).variant=t.variant||"non-conform",t.variant){case"javascript":this.addJS("print({});");break;case"non-conform":default:this.internal.events.subscribe("postPutResources",(function(){e=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/S /Named"),this.internal.out("/Type /Action"),this.internal.out("/N /Print"),this.internal.out(">>"),this.internal.out("endobj")})),this.internal.events.subscribe("putCatalog",(function(){this.internal.out("/OpenAction "+e+" 0 R")}))}return this},
/**
   * @license
   * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */
u=gt.API,(c=function(){var t=void 0;Object.defineProperty(this,"pdf",{get:function(){return t},set:function(e){t=e}});var e=150;Object.defineProperty(this,"width",{get:function(){return e},set:function(t){e=isNaN(t)||!1===Number.isInteger(t)||t<0?150:t,this.getContext("2d").pageWrapXEnabled&&(this.getContext("2d").pageWrapX=e+1)}});var n=300;Object.defineProperty(this,"height",{get:function(){return n},set:function(t){n=isNaN(t)||!1===Number.isInteger(t)||t<0?300:t,this.getContext("2d").pageWrapYEnabled&&(this.getContext("2d").pageWrapY=n+1)}});var r=[];Object.defineProperty(this,"childNodes",{get:function(){return r},set:function(t){r=t}});var i={};Object.defineProperty(this,"style",{get:function(){return i},set:function(t){i=t}}),Object.defineProperty(this,"parentNode",{get:function(){return!1}})}).prototype.getContext=function(t,e){var n;if("2d"!==(t=t||"2d"))return null;for(n in e)this.pdf.context2d.hasOwnProperty(n)&&(this.pdf.context2d[n]=e[n]);return(this.pdf.context2d._canvas=this).pdf.context2d},c.prototype.toDataURL=function(){throw new Error("toDataURL is not implemented.")},u.events.push(["initialized",function(){this.canvas=new c,this.canvas.pdf=this}]),
/** 
   * @license
   * ====================================================================
   * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com
   *               2013 Eduardo Menezes de Morais, eduardo.morais@usp.br
   *               2013 Lee Driscoll, https://github.com/lsdriscoll
   *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
   *               2014 James Hall, james@parall.ax
   *               2014 Diego Casorran, https://github.com/diegocr
   *
   * 
   * ====================================================================
   */
l=gt.API,h={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},p=1,d=function(t,e,n,r,i){h={x:t,y:e,w:n,h:r,ln:i}},g=function(){return h},m={left:0,top:0,bottom:0},l.setHeaderFunction=function(t){f=t},l.getTextDimensions=function(t,e){var n=this.table_font_size||this.internal.getFontSize(),r=(this.internal.getFont().fontStyle,(e=e||{}).scaleFactor||this.internal.scaleFactor),i=0,o=0,a=0;if("string"==typeof t)0!=(i=this.getStringUnitWidth(t)*n)&&(o=1);else{if("[object Array]"!==Object.prototype.toString.call(t))throw new Error("getTextDimensions expects text-parameter to be of type String or an Array of Strings.");for(var s=0;s<t.length;s++)i<(a=this.getStringUnitWidth(t[s])*n)&&(i=a);0!==i&&(o=t.length)}return{w:i/=r,h:Math.max((o*n*this.getLineHeightFactor()-n*(this.getLineHeightFactor()-1))/r,0)}},l.cellAddPage=function(){var t=this.margins||m;this.addPage(),d(t.left,t.top,void 0,void 0),p+=1},l.cellInitialize=function(){h={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},p=1},l.cell=function(t,e,n,r,i,o,a){var s=g(),u=!1;if(void 0!==s.ln)if(s.ln===o)t=s.x+s.w,e=s.y;else{var c=this.margins||m;s.y+s.h+r+13>=this.internal.pageSize.getHeight()-c.bottom&&(this.cellAddPage(),u=!0,this.printHeaders&&this.tableHeaderRow&&this.printHeaderRow(o,!0)),e=g().y+g().h,u&&(e=23)}if(void 0!==i[0])if(this.printingHeaderRow?this.rect(t,e,n,r,"FD"):this.rect(t,e,n,r),"right"===a){i instanceof Array||(i=[i]);for(var l=0;l<i.length;l++){var f=i[l],h=this.getStringUnitWidth(f)*this.internal.getFontSize()/this.internal.scaleFactor;this.text(f,t+n-h-3,e+this.internal.getLineHeight()*(l+1))}}else this.text(i,t+3,e+this.internal.getLineHeight());return d(t,e,n,r,o),this},l.arrayMax=function(t,e){var n,r,i,o=t[0];for(n=0,r=t.length;n<r;n+=1)i=t[n],e?-1===e(o,i)&&(o=i):o<i&&(o=i);return o},l.table=function(t,e,n,r,i){if(!n)throw"No data for PDF table";var o,a,s,u,c,f,d,g,v,y,b=[],w=[],x={},N={},L=[],A=[],S=!1,_=!0,C=12,k=m;if(k.width=this.internal.pageSize.getWidth(),i&&(!0===i.autoSize&&(S=!0),!1===i.printHeaders&&(_=!1),i.fontSize&&(C=i.fontSize),i.css&&void 0!==i.css["font-size"]&&(C=16*i.css["font-size"]),i.margins&&(k=i.margins)),this.lnMod=0,h={x:void 0,y:void 0,w:void 0,h:void 0,ln:void 0},p=1,this.printHeaders=_,this.margins=k,this.setFontSize(C),this.table_font_size=C,null==r)b=Object.keys(n[0]);else if(r[0]&&"string"!=typeof r[0])for(a=0,s=r.length;a<s;a+=1)o=r[a],b.push(o.name),w.push(o.prompt),N[o.name]=o.width*(19.049976/25.4);else b=r;if(S)for(y=function(t){return t[o]},a=0,s=b.length;a<s;a+=1){for(x[o=b[a]]=n.map(y),L.push(this.getTextDimensions(w[a]||o,{scaleFactor:1}).w),d=0,u=(f=x[o]).length;d<u;d+=1)c=f[d],L.push(this.getTextDimensions(c,{scaleFactor:1}).w);N[o]=l.arrayMax(L),L=[]}if(_){var P=this.calculateLineHeight(b,N,w.length?w:b);for(a=0,s=b.length;a<s;a+=1)o=b[a],A.push([t,e,N[o],P,String(w.length?w[a]:o)]);this.setTableHeaderRow(A),this.printHeaderRow(1,!1)}for(a=0,s=n.length;a<s;a+=1)for(g=n[a],P=this.calculateLineHeight(b,N,g),d=0,v=b.length;d<v;d+=1)o=b[d],this.cell(t,e,N[o],P,g[o],a+2,o.align);return this.lastCellPos=h,this.table_x=t,this.table_y=e,this},l.calculateLineHeight=function(t,e,n){for(var r,i=0,o=0;o<t.length;o++){n[r=t[o]]=this.splitTextToSize(String(n[r]),e[r]-3);var a=this.internal.getLineHeight()*n[r].length+3;i<a&&(i=a)}return i},l.setTableHeaderRow=function(t){this.tableHeaderRow=t},l.printHeaderRow=function(t,e){if(!this.tableHeaderRow)throw"Property tableHeaderRow does not exist.";var n,r,i,o;if(this.printingHeaderRow=!0,void 0!==f){var a=f(this,p);d(a[0],a[1],a[2],a[3],-1)}this.setFontStyle("bold");var s=[];for(i=0,o=this.tableHeaderRow.length;i<o;i+=1)this.setFillColor(200,200,200),n=this.tableHeaderRow[i],e&&(this.margins.top=13,n[1]=this.margins&&this.margins.top||0,s.push(n)),r=[].concat(n),this.cell.apply(this,r.concat(t));0<s.length&&this.setTableHeaderRow(s),this.setFontStyle("normal"),this.printingHeaderRow=!1},function(t,e){var n,r,i,a,s,u=function(t){return t=t||{},this.isStrokeTransparent=t.isStrokeTransparent||!1,this.strokeOpacity=t.strokeOpacity||1,this.strokeStyle=t.strokeStyle||"#000000",this.fillStyle=t.fillStyle||"#000000",this.isFillTransparent=t.isFillTransparent||!1,this.fillOpacity=t.fillOpacity||1,this.font=t.font||"10px sans-serif",this.textBaseline=t.textBaseline||"alphabetic",this.textAlign=t.textAlign||"left",this.lineWidth=t.lineWidth||1,this.lineJoin=t.lineJoin||"miter",this.lineCap=t.lineCap||"butt",this.path=t.path||[],this.transform=void 0!==t.transform?t.transform.clone():new B,this.globalCompositeOperation=t.globalCompositeOperation||"normal",this.globalAlpha=t.globalAlpha||1,this.clip_path=t.clip_path||[],this.currentPoint=t.currentPoint||new I,this.miterLimit=t.miterLimit||10,this.lastPoint=t.lastPoint||new I,this.ignoreClearRect="boolean"!=typeof t.ignoreClearRect||t.ignoreClearRect,this};t.events.push(["initialized",function(){this.context2d=new c(this),n=this.internal.f2,this.internal.f3,r=this.internal.getCoordinateString,i=this.internal.getVerticalCoordinateString,a=this.internal.getHorizontalCoordinate,s=this.internal.getVerticalCoordinate}]);var c=function(t){Object.defineProperty(this,"canvas",{get:function(){return{parentNode:!1,style:!1}}}),Object.defineProperty(this,"pdf",{get:function(){return t}});var e=!1;Object.defineProperty(this,"pageWrapXEnabled",{get:function(){return e},set:function(t){e=Boolean(t)}});var n=!1;Object.defineProperty(this,"pageWrapYEnabled",{get:function(){return n},set:function(t){n=Boolean(t)}});var r=0;Object.defineProperty(this,"posX",{get:function(){return r},set:function(t){isNaN(t)||(r=t)}});var i=0;Object.defineProperty(this,"posY",{get:function(){return i},set:function(t){isNaN(t)||(i=t)}});var o=!1;Object.defineProperty(this,"autoPaging",{get:function(){return o},set:function(t){o=Boolean(t)}});var a=0;Object.defineProperty(this,"lastBreak",{get:function(){return a},set:function(t){a=t}});var s=[];Object.defineProperty(this,"pageBreaks",{get:function(){return s},set:function(t){s=t}});var c=new u;Object.defineProperty(this,"ctx",{get:function(){return c},set:function(t){t instanceof u&&(c=t)}}),Object.defineProperty(this,"path",{get:function(){return c.path},set:function(t){c.path=t}});var f=[];Object.defineProperty(this,"ctxStack",{get:function(){return f},set:function(t){f=t}}),Object.defineProperty(this,"fillStyle",{get:function(){return this.ctx.fillStyle},set:function(t){var e;e=l(t),this.ctx.fillStyle=e.style,this.ctx.isFillTransparent=0===e.a,this.ctx.fillOpacity=e.a,this.pdf.setFillColor(e.r,e.g,e.b,{a:e.a}),this.pdf.setTextColor(e.r,e.g,e.b,{a:e.a})}}),Object.defineProperty(this,"strokeStyle",{get:function(){return this.ctx.strokeStyle},set:function(t){var e=l(t);this.ctx.strokeStyle=e.style,this.ctx.isStrokeTransparent=0===e.a,this.ctx.strokeOpacity=e.a,0===e.a?this.pdf.setDrawColor(255,255,255):(e.a,this.pdf.setDrawColor(e.r,e.g,e.b))}}),Object.defineProperty(this,"lineCap",{get:function(){return this.ctx.lineCap},set:function(t){-1!==["butt","round","square"].indexOf(t)&&(this.ctx.lineCap=t,this.pdf.setLineCap(t))}}),Object.defineProperty(this,"lineWidth",{get:function(){return this.ctx.lineWidth},set:function(t){isNaN(t)||(this.ctx.lineWidth=t,this.pdf.setLineWidth(t))}}),Object.defineProperty(this,"lineJoin",{get:function(){return this.ctx.lineJoin},set:function(t){-1!==["bevel","round","miter"].indexOf(t)&&(this.ctx.lineJoin=t,this.pdf.setLineJoin(t))}}),Object.defineProperty(this,"miterLimit",{get:function(){return this.ctx.miterLimit},set:function(t){isNaN(t)||(this.ctx.miterLimit=t,this.pdf.setMiterLimit(t))}}),Object.defineProperty(this,"textBaseline",{get:function(){return this.ctx.textBaseline},set:function(t){this.ctx.textBaseline=t}}),Object.defineProperty(this,"textAlign",{get:function(){return this.ctx.textAlign},set:function(t){-1!==["right","end","center","left","start"].indexOf(t)&&(this.ctx.textAlign=t)}}),Object.defineProperty(this,"font",{get:function(){return this.ctx.font},set:function(t){var e;if(this.ctx.font=t,null!==(e=/^\s*(?=(?:(?:[-a-z]+\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\1|\2|\3)\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\d]+(?:\%|in|[cem]m|ex|p[ctx]))(?:\s*\/\s*(normal|[.\d]+(?:\%|in|[cem]m|ex|p[ctx])))?\s*([-_,\"\'\sa-z]+?)\s*$/i.exec(t))){var n=e[1],r=(e[2],e[3]),i=e[4],o=e[5],a=e[6];i="px"===o?Math.floor(parseFloat(i)):"em"===o?Math.floor(parseFloat(i)*this.pdf.getFontSize()):Math.floor(parseFloat(i)),this.pdf.setFontSize(i);var s="";("bold"===r||700<=parseInt(r,10)||"bold"===n)&&(s="bold"),"italic"===n&&(s+="italic"),0===s.length&&(s="normal");for(var u="",c=a.toLowerCase().replace(/"|'/g,"").split(/\s*,\s*/),l={arial:"Helvetica",verdana:"Helvetica",helvetica:"Helvetica","sans-serif":"Helvetica",fixed:"Courier",monospace:"Courier",terminal:"Courier",courier:"Courier",times:"Times",cursive:"Times",fantasy:"Times",serif:"Times"},f=0;f<c.length;f++){if(void 0!==this.pdf.internal.getFont(c[f],s,{noFallback:!0,disableWarning:!0})){u=c[f];break}if("bolditalic"===s&&void 0!==this.pdf.internal.getFont(c[f],"bold",{noFallback:!0,disableWarning:!0}))u=c[f],s="bold";else if(void 0!==this.pdf.internal.getFont(c[f],"normal",{noFallback:!0,disableWarning:!0})){u=c[f],s="normal";break}}if(""===u)for(f=0;f<c.length;f++)if(l[c[f]]){u=l[c[f]];break}u=""===u?"Times":u,this.pdf.setFont(u,s)}}}),Object.defineProperty(this,"globalCompositeOperation",{get:function(){return this.ctx.globalCompositeOperation},set:function(t){this.ctx.globalCompositeOperation=t}}),Object.defineProperty(this,"globalAlpha",{get:function(){return this.ctx.globalAlpha},set:function(t){this.ctx.globalAlpha=t}}),Object.defineProperty(this,"ignoreClearRect",{get:function(){return this.ctx.ignoreClearRect},set:function(t){this.ctx.ignoreClearRect=Boolean(t)}})};c.prototype.fill=function(){m.call(this,"fill",!1)},c.prototype.stroke=function(){m.call(this,"stroke",!1)},c.prototype.beginPath=function(){this.path=[{type:"begin"}]},c.prototype.moveTo=function(t,e){if(isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.moveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.moveTo");var n=this.ctx.transform.applyToPoint(new I(t,e));this.path.push({type:"mt",x:n.x,y:n.y}),this.ctx.lastPoint=new I(t,e)},c.prototype.closePath=function(){var t=new I(0,0),e=0;for(e=this.path.length-1;-1!==e;e--)if("begin"===this.path[e].type&&"object"===o(this.path[e+1])&&"number"==typeof this.path[e+1].x){t=new I(this.path[e+1].x,this.path[e+1].y),this.path.push({type:"lt",x:t.x,y:t.y});break}"object"===o(this.path[e+2])&&"number"==typeof this.path[e+2].x&&this.path.push(JSON.parse(JSON.stringify(this.path[e+2]))),this.path.push({type:"close"}),this.ctx.lastPoint=new I(t.x,t.y)},c.prototype.lineTo=function(t,e){if(isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.lineTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.lineTo");var n=this.ctx.transform.applyToPoint(new I(t,e));this.path.push({type:"lt",x:n.x,y:n.y}),this.ctx.lastPoint=new I(n.x,n.y)},c.prototype.clip=function(){this.ctx.clip_path=JSON.parse(JSON.stringify(this.path)),m.call(this,null,!0)},c.prototype.quadraticCurveTo=function(t,e,n,r){if(isNaN(n)||isNaN(r)||isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.quadraticCurveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.quadraticCurveTo");var i=this.ctx.transform.applyToPoint(new I(n,r)),o=this.ctx.transform.applyToPoint(new I(t,e));this.path.push({type:"qct",x1:o.x,y1:o.y,x:i.x,y:i.y}),this.ctx.lastPoint=new I(i.x,i.y)},c.prototype.bezierCurveTo=function(t,e,n,r,i,o){if(isNaN(i)||isNaN(o)||isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.bezierCurveTo: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.bezierCurveTo");var a=this.ctx.transform.applyToPoint(new I(i,o)),s=this.ctx.transform.applyToPoint(new I(t,e)),u=this.ctx.transform.applyToPoint(new I(n,r));this.path.push({type:"bct",x1:s.x,y1:s.y,x2:u.x,y2:u.y,x:a.x,y:a.y}),this.ctx.lastPoint=new I(a.x,a.y)},c.prototype.arc=function(t,e,n,r,i,o){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i))throw console.error("jsPDF.context2d.arc: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.arc");if(o=Boolean(o),!this.ctx.transform.isIdentity){var a=this.ctx.transform.applyToPoint(new I(t,e));t=a.x,e=a.y;var s=this.ctx.transform.applyToPoint(new I(0,n)),u=this.ctx.transform.applyToPoint(new I(0,0));n=Math.sqrt(Math.pow(s.x-u.x,2)+Math.pow(s.y-u.y,2))}Math.abs(i-r)>=2*Math.PI&&(r=0,i=2*Math.PI),this.path.push({type:"arc",x:t,y:e,radius:n,startAngle:r,endAngle:i,counterclockwise:o})},c.prototype.arcTo=function(t,e,n,r,i){throw new Error("arcTo not implemented.")},c.prototype.rect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.rect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.rect");this.moveTo(t,e),this.lineTo(t+n,e),this.lineTo(t+n,e+r),this.lineTo(t,e+r),this.lineTo(t,e),this.lineTo(t+n,e),this.lineTo(t,e)},c.prototype.fillRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.fillRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.fillRect");if(!f.call(this)){var i={};"butt"!==this.lineCap&&(i.lineCap=this.lineCap,this.lineCap="butt"),"miter"!==this.lineJoin&&(i.lineJoin=this.lineJoin,this.lineJoin="miter"),this.beginPath(),this.rect(t,e,n,r),this.fill(),i.hasOwnProperty("lineCap")&&(this.lineCap=i.lineCap),i.hasOwnProperty("lineJoin")&&(this.lineJoin=i.lineJoin)}},c.prototype.strokeRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.strokeRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.strokeRect");h.call(this)||(this.beginPath(),this.rect(t,e,n,r),this.stroke())},c.prototype.clearRect=function(t,e,n,r){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r))throw console.error("jsPDF.context2d.clearRect: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.clearRect");this.ignoreClearRect||(this.fillStyle="#ffffff",this.fillRect(t,e,n,r))},c.prototype.save=function(t){t="boolean"!=typeof t||t;for(var e=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out("q");if(this.pdf.setPage(e),t){this.ctx.fontSize=this.pdf.internal.getFontSize();var r=new u(this.ctx);this.ctxStack.push(this.ctx),this.ctx=r}},c.prototype.restore=function(t){t="boolean"!=typeof t||t;for(var e=this.pdf.internal.getCurrentPageInfo().pageNumber,n=0;n<this.pdf.internal.getNumberOfPages();n++)this.pdf.setPage(n+1),this.pdf.internal.out("Q");this.pdf.setPage(e),t&&0!==this.ctxStack.length&&(this.ctx=this.ctxStack.pop(),this.fillStyle=this.ctx.fillStyle,this.strokeStyle=this.ctx.strokeStyle,this.font=this.ctx.font,this.lineCap=this.ctx.lineCap,this.lineWidth=this.ctx.lineWidth,this.lineJoin=this.ctx.lineJoin)},c.prototype.toDataURL=function(){throw new Error("toDataUrl not implemented.")};var l=function(t){var e,n,r,i;if(!0===t.isCanvasGradient&&(t=t.getColor()),!t)return{r:0,g:0,b:0,a:0,style:t};if(/transparent|rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*0+\s*\)/.test(t))i=r=n=e=0;else{var o=/rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/.exec(t);if(null!==o)e=parseInt(o[1]),n=parseInt(o[2]),r=parseInt(o[3]),i=1;else if(null!==(o=/rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([\d\.]+)\s*\)/.exec(t)))e=parseInt(o[1]),n=parseInt(o[2]),r=parseInt(o[3]),i=parseFloat(o[4]);else{if(i=1,"string"==typeof t&&"#"!==t.charAt(0)){var a=new RGBColor(t);t=a.ok?a.toHex():"#000000"}4===t.length?(e=t.substring(1,2),e+=e,n=t.substring(2,3),n+=n,r=t.substring(3,4),r+=r):(e=t.substring(1,3),n=t.substring(3,5),r=t.substring(5,7)),e=parseInt(e,16),n=parseInt(n,16),r=parseInt(r,16)}}return{r:e,g:n,b:r,a:i,style:t}},f=function(){return this.ctx.isFillTransparent||0==this.globalAlpha},h=function(){return Boolean(this.ctx.isStrokeTransparent||0==this.globalAlpha)};c.prototype.fillText=function(t,e,n,r){if(isNaN(e)||isNaN(n)||"string"!=typeof t)throw console.error("jsPDF.context2d.fillText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.fillText");if(r=isNaN(r)?void 0:r,!f.call(this)){n=y.call(this,n);var i=P(this.ctx.transform.rotation),o=this.ctx.transform.scaleX;L.call(this,{text:t,x:e,y:n,scale:o,angle:i,align:this.textAlign,maxWidth:r})}},c.prototype.strokeText=function(t,e,n,r){if(isNaN(e)||isNaN(n)||"string"!=typeof t)throw console.error("jsPDF.context2d.strokeText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.strokeText");if(!h.call(this)){r=isNaN(r)?void 0:r,n=y.call(this,n);var i=P(this.ctx.transform.rotation),o=this.ctx.transform.scaleX;L.call(this,{text:t,x:e,y:n,scale:o,renderingMode:"stroke",angle:i,align:this.textAlign,maxWidth:r})}},c.prototype.measureText=function(t){if("string"!=typeof t)throw console.error("jsPDF.context2d.measureText: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.measureText");var e=this.pdf,n=this.pdf.internal.scaleFactor,r=e.internal.getFontSize(),i=e.getStringUnitWidth(t)*r/e.internal.scaleFactor;return new function(t){var e=(t=t||{}).width||0;return Object.defineProperty(this,"width",{get:function(){return e}}),this}({width:i*=Math.round(96*n/72*1e4)/1e4})},c.prototype.scale=function(t,e){if(isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.scale: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.scale");var n=new B(t,0,0,e,0,0);this.ctx.transform=this.ctx.transform.multiply(n)},c.prototype.rotate=function(t){if(isNaN(t))throw console.error("jsPDF.context2d.rotate: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.rotate");var e=new B(Math.cos(t),Math.sin(t),-Math.sin(t),Math.cos(t),0,0);this.ctx.transform=this.ctx.transform.multiply(e)},c.prototype.translate=function(t,e){if(isNaN(t)||isNaN(e))throw console.error("jsPDF.context2d.translate: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.translate");var n=new B(1,0,0,1,t,e);this.ctx.transform=this.ctx.transform.multiply(n)},c.prototype.transform=function(t,e,n,r,i,o){if(isNaN(t)||isNaN(e)||isNaN(n)||isNaN(r)||isNaN(i)||isNaN(o))throw console.error("jsPDF.context2d.transform: Invalid arguments",arguments),new Error("Invalid arguments passed to jsPDF.context2d.transform");var a=new B(t,e,n,r,i,o);this.ctx.transform=this.ctx.transform.multiply(a)},c.prototype.setTransform=function(t,e,n,r,i,o){t=isNaN(t)?1:t,e=isNaN(e)?0:e,n=isNaN(n)?0:n,r=isNaN(r)?1:r,i=isNaN(i)?0:i,o=isNaN(o)?0:o,this.ctx.transform=new B(t,e,n,r,i,o)},c.prototype.drawImage=function(t,e,n,r,i,o,a,s,u){var c=this.pdf.getImageProperties(t),l=1,f=1,h=1,d=1;void 0!==r&&void 0!==s&&(h=s/r,d=u/i,l=c.width/r*s/r,f=c.height/i*u/i),void 0===o&&(o=e,a=n,n=e=0),void 0!==r&&void 0===s&&(s=r,u=i),void 0===r&&void 0===s&&(s=c.width,u=c.height);var m=this.ctx.transform.decompose(),y=P(m.rotate.shx);m.scale.sx,m.scale.sy;for(var b,w=new B,x=((w=(w=(w=w.multiply(m.translate)).multiply(m.skew)).multiply(m.scale)).applyToPoint(new I(s,u)),w.applyToRectangle(new E(o-e*h,a-n*d,r*l,i*f))),N=p.call(this,x),L=[],A=0;A<N.length;A+=1)-1===L.indexOf(N[A])&&L.push(N[A]);if(L.sort(),this.autoPaging)for(var S=L[0],_=L[L.length-1],C=S;C<_+1;C++){if(this.pdf.setPage(C),0!==this.ctx.clip_path.length){var k=this.path;b=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(b,this.posX,-1*this.pdf.internal.pageSize.height*(C-1)+this.posY),v.call(this,"fill",!0),this.path=k}var F=JSON.parse(JSON.stringify(x));F=g([F],this.posX,-1*this.pdf.internal.pageSize.height*(C-1)+this.posY)[0],this.pdf.addImage(t,"jpg",F.x,F.y,F.w,F.h,null,null,y)}else this.pdf.addImage(t,"jpg",x.x,x.y,x.w,x.h,null,null,y)};var p=function(t,e,n){var r=[];switch(e=e||this.pdf.internal.pageSize.width,n=n||this.pdf.internal.pageSize.height,t.type){default:case"mt":case"lt":r.push(Math.floor((t.y+this.posY)/n)+1);break;case"arc":r.push(Math.floor((t.y+this.posY-t.radius)/n)+1),r.push(Math.floor((t.y+this.posY+t.radius)/n)+1);break;case"qct":var i=T(this.ctx.lastPoint.x,this.ctx.lastPoint.y,t.x1,t.y1,t.x,t.y);r.push(Math.floor(i.y/n)+1),r.push(Math.floor((i.y+i.h)/n)+1);break;case"bct":var o=j(this.ctx.lastPoint.x,this.ctx.lastPoint.y,t.x1,t.y1,t.x2,t.y2,t.x,t.y);r.push(Math.floor(o.y/n)+1),r.push(Math.floor((o.y+o.h)/n)+1);break;case"rect":r.push(Math.floor((t.y+this.posY)/n)+1),r.push(Math.floor((t.y+t.h+this.posY)/n)+1)}for(var a=0;a<r.length;a+=1)for(;this.pdf.internal.getNumberOfPages()<r[a];)d.call(this);return r},d=function(){var t=this.fillStyle,e=this.strokeStyle,n=this.font,r=this.lineCap,i=this.lineWidth,o=this.lineJoin;this.pdf.addPage(),this.fillStyle=t,this.strokeStyle=e,this.font=n,this.lineCap=r,this.lineWidth=i,this.lineJoin=o},g=function(t,e,n){for(var r=0;r<t.length;r++)switch(t[r].type){case"bct":t[r].x2+=e,t[r].y2+=n;case"qct":t[r].x1+=e,t[r].y1+=n;case"mt":case"lt":case"arc":default:t[r].x+=e,t[r].y+=n}return t},m=function(t,e){for(var n,r,i=this.fillStyle,o=this.strokeStyle,a=(this.font,this.lineCap),s=this.lineWidth,u=this.lineJoin,c=JSON.parse(JSON.stringify(this.path)),l=JSON.parse(JSON.stringify(this.path)),f=[],h=0;h<l.length;h++)if(void 0!==l[h].x)for(var m=p.call(this,l[h]),y=0;y<m.length;y+=1)-1===f.indexOf(m[y])&&f.push(m[y]);for(h=0;h<f.length;h++)for(;this.pdf.internal.getNumberOfPages()<f[h];)d.call(this);if(f.sort(),this.autoPaging){var b=f[0],w=f[f.length-1];for(h=b;h<w+1;h++){if(this.pdf.setPage(h),this.fillStyle=i,this.strokeStyle=o,this.lineCap=a,this.lineWidth=s,this.lineJoin=u,0!==this.ctx.clip_path.length){var x=this.path;n=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(n,this.posX,-1*this.pdf.internal.pageSize.height*(h-1)+this.posY),v.call(this,t,!0),this.path=x}r=JSON.parse(JSON.stringify(c)),this.path=g(r,this.posX,-1*this.pdf.internal.pageSize.height*(h-1)+this.posY),!1!==e&&0!==h||v.call(this,t,e)}}else v.call(this,t,e);this.path=c},v=function(t,e){if(("stroke"!==t||e||!h.call(this))&&("stroke"===t||e||!f.call(this))){var n=[];this.ctx.globalAlpha,this.ctx.fillOpacity<1&&this.ctx.fillOpacity;for(var r,i=this.path,o=0;o<i.length;o++){var a=i[o];switch(a.type){case"begin":n.push({begin:!0});break;case"close":n.push({close:!0});break;case"mt":n.push({start:a,deltas:[],abs:[]});break;case"lt":var s=n.length;if(!isNaN(i[o-1].x)){var u=[a.x-i[o-1].x,a.y-i[o-1].y];if(0<s)for(;0<=s;s--)if(!0!==n[s-1].close&&!0!==n[s-1].begin){n[s-1].deltas.push(u),n[s-1].abs.push(a);break}}break;case"bct":u=[a.x1-i[o-1].x,a.y1-i[o-1].y,a.x2-i[o-1].x,a.y2-i[o-1].y,a.x-i[o-1].x,a.y-i[o-1].y],n[n.length-1].deltas.push(u);break;case"qct":var c=i[o-1].x+2/3*(a.x1-i[o-1].x),l=i[o-1].y+2/3*(a.y1-i[o-1].y),p=a.x+2/3*(a.x1-a.x),d=a.y+2/3*(a.y1-a.y),g=a.x,m=a.y;u=[c-i[o-1].x,l-i[o-1].y,p-i[o-1].x,d-i[o-1].y,g-i[o-1].x,m-i[o-1].y],n[n.length-1].deltas.push(u);break;case"arc":n.push({deltas:[],abs:[],arc:!0}),Array.isArray(n[n.length-1].abs)&&n[n.length-1].abs.push(a)}}for(r=e?null:"stroke"===t?"stroke":"fill",o=0;o<n.length;o++){if(n[o].arc)for(var v=n[o].abs,y=0;y<v.length;y++){var N=v[y];if(void 0!==N.startAngle){var L=P(N.startAngle),_=P(N.endAngle),C=N.x,k=N.y;b.call(this,C,k,N.radius,L,_,N.counterclockwise,r,e)}else A.call(this,N.x,N.y)}n[o].arc||!0===n[o].close||!0===n[o].begin||(C=n[o].start.x,k=n[o].start.y,S.call(this,n[o].deltas,C,k,null,null))}r&&w.call(this,r),e&&x.call(this)}},y=function(t){var e=this.pdf.internal.getFontSize()/this.pdf.internal.scaleFactor,n=e*(this.pdf.internal.getLineHeightFactor()-1);switch(this.ctx.textBaseline){case"bottom":return t-n;case"top":return t+e-n;case"hanging":return t+e-2*n;case"middle":return t+e/2-n;case"ideographic":return t;case"alphabetic":default:return t}};c.prototype.createLinearGradient=function(){var t=function(){};return t.colorStops=[],t.addColorStop=function(t,e){this.colorStops.push([t,e])},t.getColor=function(){return 0===this.colorStops.length?"#000000":this.colorStops[0][1]},t.isCanvasGradient=!0,t},c.prototype.createPattern=function(){return this.createLinearGradient()},c.prototype.createRadialGradient=function(){return this.createLinearGradient()};var b=function(t,e,n,r,i,o,a,s){this.pdf.internal.scaleFactor;for(var u=F(r),c=F(i),l=C.call(this,n,u,c,o),f=0;f<l.length;f++){var h=l[f];0===f&&N.call(this,h.x1+t,h.y1+e),_.call(this,t,e,h.x2,h.y2,h.x3,h.y3,h.x4,h.y4)}s?x.call(this):w.call(this,a)},w=function(t){switch(t){case"stroke":this.pdf.internal.out("S");break;case"fill":this.pdf.internal.out("f")}},x=function(){this.pdf.clip()},N=function(t,e){this.pdf.internal.out(r(t)+" "+i(e)+" m")},L=function(t){var e;switch(t.align){case"right":case"end":e="right";break;case"center":e="center";break;case"left":case"start":default:e="left"}var n=this.ctx.transform.applyToPoint(new I(t.x,t.y)),r=this.ctx.transform.decompose(),i=new B;i=(i=(i=i.multiply(r.translate)).multiply(r.skew)).multiply(r.scale);for(var o,a=this.pdf.getTextDimensions(t.text),s=this.ctx.transform.applyToRectangle(new E(t.x,t.y,a.w,a.h)),u=i.applyToRectangle(new E(t.x,t.y-a.h,a.w,a.h)),c=p.call(this,u),l=[],f=0;f<c.length;f+=1)-1===l.indexOf(c[f])&&l.push(c[f]);if(l.sort(),!0===this.autoPaging)for(var h=l[0],d=l[l.length-1],m=h;m<d+1;m++){if(this.pdf.setPage(m),0!==this.ctx.clip_path.length){var y=this.path;o=JSON.parse(JSON.stringify(this.ctx.clip_path)),this.path=g(o,this.posX,-1*this.pdf.internal.pageSize.height*(m-1)+this.posY),v.call(this,"fill",!0),this.path=y}var b=JSON.parse(JSON.stringify(s));if(b=g([b],this.posX,-1*this.pdf.internal.pageSize.height*(m-1)+this.posY)[0],.01<=t.scale){var w=this.pdf.internal.getFontSize();this.pdf.setFontSize(w*t.scale)}this.pdf.text(t.text,b.x,b.y,{angle:t.angle,align:e,renderingMode:t.renderingMode,maxWidth:t.maxWidth}),.01<=t.scale&&this.pdf.setFontSize(w)}else.01<=t.scale&&(w=this.pdf.internal.getFontSize(),this.pdf.setFontSize(w*t.scale)),this.pdf.text(t.text,n.x+this.posX,n.y+this.posY,{angle:t.angle,align:e,renderingMode:t.renderingMode,maxWidth:t.maxWidth}),.01<=t.scale&&this.pdf.setFontSize(w)},A=function(t,e,n,o){n=n||0,o=o||0,this.pdf.internal.out(r(t+n)+" "+i(e+o)+" l")},S=function(t,e,n){return this.pdf.lines(t,e,n,null,null)},_=function(t,e,r,i,o,u,c,l){this.pdf.internal.out([n(a(r+t)),n(s(i+e)),n(a(o+t)),n(s(u+e)),n(a(c+t)),n(s(l+e)),"c"].join(" "))},C=function(t,e,n,r){var i=2*Math.PI,o=e;(o<i||i<o)&&(o%=i);var a=n;(a<i||i<a)&&(a%=i);for(var s=[],u=Math.PI/2,c=r?-1:1,l=e,f=Math.min(i,Math.abs(a-o));1e-5<f;){var h=l+c*Math.min(f,u);s.push(k.call(this,t,l,h)),f-=Math.abs(h-l),l=h}return s},k=function(t,e,n){var r=(n-e)/2,i=t*Math.cos(r),o=t*Math.sin(r),a=i,s=-o,u=a*a+s*s,c=u+a*i+s*o,l=4/3*(Math.sqrt(2*u*c)-c)/(a*o-s*i),f=a-l*s,h=s+l*a,p=f,d=-h,g=r+e,m=Math.cos(g),v=Math.sin(g);return{x1:t*Math.cos(e),y1:t*Math.sin(e),x2:f*m-h*v,y2:f*v+h*m,x3:p*m-d*v,y3:p*v+d*m,x4:t*Math.cos(n),y4:t*Math.sin(n)}},P=function(t){return 180*t/Math.PI},F=function(t){return t*Math.PI/180},T=function(t,e,n,r,i,o){var a=t+.5*(n-t),s=e+.5*(r-e),u=i+.5*(n-i),c=o+.5*(r-o),l=Math.min(t,i,a,u),f=Math.max(t,i,a,u),h=Math.min(e,o,s,c),p=Math.max(e,o,s,c);return new E(l,h,f-l,p-h)},j=function(t,e,n,r,i,o,a,s){for(var u,c,l,f,h,p,d,g,m,v,y,b,w,x=n-t,N=r-e,L=i-n,A=o-r,S=a-i,_=s-o,C=0;C<41;C++)g=(p=(c=t+(u=C/40)*x)+u*((f=n+u*L)-c))+u*(f+u*(i+u*S-f)-p),m=(d=(l=e+u*N)+u*((h=r+u*A)-l))+u*(h+u*(o+u*_-h)-d),w=0==C?(b=v=g,y=m):(v=Math.min(v,g),y=Math.min(y,m),b=Math.max(b,g),Math.max(w,m));return new E(Math.round(v),Math.round(y),Math.round(b-v),Math.round(w-y))},I=function(t,e){var n=t||0;Object.defineProperty(this,"x",{enumerable:!0,get:function(){return n},set:function(t){isNaN(t)||(n=parseFloat(t))}});var r=e||0;Object.defineProperty(this,"y",{enumerable:!0,get:function(){return r},set:function(t){isNaN(t)||(r=parseFloat(t))}});var i="pt";return Object.defineProperty(this,"type",{enumerable:!0,get:function(){return i},set:function(t){i=t.toString()}}),this},E=function(t,e,n,r){I.call(this,t,e),this.type="rect";var i=n||0;Object.defineProperty(this,"w",{enumerable:!0,get:function(){return i},set:function(t){isNaN(t)||(i=parseFloat(t))}});var o=r||0;return Object.defineProperty(this,"h",{enumerable:!0,get:function(){return o},set:function(t){isNaN(t)||(o=parseFloat(t))}}),this},B=function(t,e,n,r,i,o){var a=[];return Object.defineProperty(this,"sx",{get:function(){return a[0]},set:function(t){a[0]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"shy",{get:function(){return a[1]},set:function(t){a[1]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"shx",{get:function(){return a[2]},set:function(t){a[2]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"sy",{get:function(){return a[3]},set:function(t){a[3]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"tx",{get:function(){return a[4]},set:function(t){a[4]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"ty",{get:function(){return a[5]},set:function(t){a[5]=Math.round(1e5*t)/1e5}}),Object.defineProperty(this,"rotation",{get:function(){return Math.atan2(this.shx,this.sx)}}),Object.defineProperty(this,"scaleX",{get:function(){return this.decompose().scale.sx}}),Object.defineProperty(this,"scaleY",{get:function(){return this.decompose().scale.sy}}),Object.defineProperty(this,"isIdentity",{get:function(){return 1===this.sx&&0===this.shy&&0===this.shx&&1===this.sy&&0===this.tx&&0===this.ty}}),this.sx=isNaN(t)?1:t,this.shy=isNaN(e)?0:e,this.shx=isNaN(n)?0:n,this.sy=isNaN(r)?1:r,this.tx=isNaN(i)?0:i,this.ty=isNaN(o)?0:o,this};B.prototype.multiply=function(t){var e=t.sx*this.sx+t.shy*this.shx,n=t.sx*this.shy+t.shy*this.sy,r=t.shx*this.sx+t.sy*this.shx,i=t.shx*this.shy+t.sy*this.sy,o=t.tx*this.sx+t.ty*this.shx+this.tx,a=t.tx*this.shy+t.ty*this.sy+this.ty;return new B(e,n,r,i,o,a)},B.prototype.decompose=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,o=this.ty,a=Math.sqrt(t*t+e*e),s=(t/=a)*n+(e/=a)*r;n-=t*s,r-=e*s;var u=Math.sqrt(n*n+r*r);return s/=u,t*(r/=u)<e*(n/=u)&&(t=-t,e=-e,s=-s,a=-a),{scale:new B(a,0,0,u,0,0),translate:new B(1,0,0,1,i,o),rotate:new B(t,e,-e,t,0,0),skew:new B(1,0,s,1,0,0)}},B.prototype.applyToPoint=function(t){var e=t.x*this.sx+t.y*this.shx+this.tx,n=t.x*this.shy+t.y*this.sy+this.ty;return new I(e,n)},B.prototype.applyToRectangle=function(t){var e=this.applyToPoint(t),n=this.applyToPoint(new I(t.x+t.w,t.y+t.h));return new E(e.x,e.y,n.x-e.x,n.y-e.y)},B.prototype.clone=function(){var t=this.sx,e=this.shy,n=this.shx,r=this.sy,i=this.tx,o=this.ty;return new B(t,e,n,r,i,o)}}(gt.API,"undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")()),v=gt.API,y=function(t){var e,n,r,i,o,a,s,u,c,l;for(/[^\x00-\xFF]/.test(t),n=[],r=0,i=(t+=e="\0\0\0\0".slice(t.length%4||4)).length;r<i;r+=4)0!==(o=(t.charCodeAt(r)<<24)+(t.charCodeAt(r+1)<<16)+(t.charCodeAt(r+2)<<8)+t.charCodeAt(r+3))?(a=(o=((o=((o=((o=(o-(l=o%85))/85)-(c=o%85))/85)-(u=o%85))/85)-(s=o%85))/85)%85,n.push(a+33,s+33,u+33,c+33,l+33)):n.push(122);return function(t,n){for(var r=e.length;0<r;r--)t.pop()}(n),String.fromCharCode.apply(String,n)+"~>"},b=function(t){var e,n,r,i,o,a=String,s="length",u="charCodeAt",c="slice",l="replace";for(t[c](-2),t=t[c](0,-2)[l](/\s/g,"")[l]("z","!!!!!"),r=[],i=0,o=(t+=e="uuuuu"[c](t[s]%5||5))[s];i<o;i+=5)n=52200625*(t[u](i)-33)+614125*(t[u](i+1)-33)+7225*(t[u](i+2)-33)+85*(t[u](i+3)-33)+(t[u](i+4)-33),r.push(255&n>>24,255&n>>16,255&n>>8,255&n);return function(t,n){for(var r=e[s];0<r;r--)t.pop()}(r),a.fromCharCode.apply(a,r)},w=function(t){for(var e="",n=0;n<t.length;n+=1)e+=("0"+t.charCodeAt(n).toString(16)).slice(-2);return e+">"},x=function(t){var e=new RegExp(/^([0-9A-Fa-f]{2})+$/);if(-1!==(t=t.replace(/\s/g,"")).indexOf(">")&&(t=t.substr(0,t.indexOf(">"))),t.length%2&&(t+="0"),!1===e.test(t))return"";for(var n="",r=0;r<t.length;r+=2)n+=String.fromCharCode("0x"+(t[r]+t[r+1]));return n},N=function(t,e){e=Object.assign({predictor:1,colors:1,bitsPerComponent:8,columns:1},e);for(var n,r,i=[],o=t.length;o--;)i[o]=t.charCodeAt(o);return n=v.adler32cs.from(t),(r=new Deflater(6)).append(new Uint8Array(i)),t=r.flush(),(i=new Uint8Array(t.length+6)).set(new Uint8Array([120,156])),i.set(t,2),i.set(new Uint8Array([255&n,n>>8&255,n>>16&255,n>>24&255]),t.length+2),String.fromCharCode.apply(null,i)},v.processDataByFilters=function(t,e){var n=0,r=t||"",i=[];for("string"==typeof(e=e||[])&&(e=[e]),n=0;n<e.length;n+=1)switch(e[n]){case"ASCII85Decode":case"/ASCII85Decode":r=b(r),i.push("/ASCII85Encode");break;case"ASCII85Encode":case"/ASCII85Encode":r=y(r),i.push("/ASCII85Decode");break;case"ASCIIHexDecode":case"/ASCIIHexDecode":r=x(r),i.push("/ASCIIHexEncode");break;case"ASCIIHexEncode":case"/ASCIIHexEncode":r=w(r),i.push("/ASCIIHexDecode");break;case"FlateEncode":case"/FlateEncode":r=N(r),i.push("/FlateDecode");break;default:throw'The filter: "'+e[n]+'" is not implemented'}return{data:r,reverseChain:i.reverse().join(" ")}},(L=gt.API).loadFile=function(t,e,n){var r;e=e||!0,n=n||function(){};try{r=function(t,e,n){var r=new XMLHttpRequest,i=[],o=0,a=function(t){var e=t.length,n=String.fromCharCode;for(o=0;o<e;o+=1)i.push(n(255&t.charCodeAt(o)));return i.join("")};if(r.open("GET",t,!e),r.overrideMimeType("text/plain; charset=x-user-defined"),!1===e&&(r.onload=function(){return a(this.responseText)}),r.send(null),200===r.status)return e?a(r.responseText):void 0;console.warn('Unable to load file "'+t+'"')}(t,e)}catch(t){r=void 0}return r},L.loadImageFile=L.loadFile,A=gt.API,S="undefined"!=typeof window&&window||void 0!==r&&r,_=function(t){var e=o(t);return"undefined"===e?"undefined":"string"===e||t instanceof String?"string":"number"===e||t instanceof Number?"number":"function"===e||t instanceof Function?"function":t&&t.constructor===Array?"array":t&&1===t.nodeType?"element":"object"===e?"object":"unknown"},C=function(t,e){var n=document.createElement(t);if(e.className&&(n.className=e.className),e.innerHTML){n.innerHTML=e.innerHTML;for(var r=n.getElementsByTagName("script"),i=r.length;0<i--;null)r[i].parentNode.removeChild(r[i])}for(var o in e.style)n.style[o]=e.style[o];return n},(((k=function t(e){var n=Object.assign(t.convert(i.resolve()),JSON.parse(JSON.stringify(t.template))),r=t.convert(i.resolve(),n);return(r=r.setProgress(1,t,1,[t])).set(e)}).prototype=Object.create(i.prototype)).constructor=k).convert=function(t,e){return t.__proto__=e||k.prototype,t},k.template={prop:{src:null,container:null,overlay:null,canvas:null,img:null,pdf:null,pageSize:null,callback:function(){}},progress:{val:0,state:null,n:0,stack:[]},opt:{filename:"file.pdf",margin:[0,0,0,0],enableLinks:!0,x:0,y:0,html2canvas:{},jsPDF:{}}},k.prototype.from=function(t,e){return this.then((function(){switch(e=e||function(t){switch(_(t)){case"string":return"string";case"element":return"canvas"===t.nodeName.toLowerCase?"canvas":"element";default:return"unknown"}}(t)){case"string":return this.set({src:C("div",{innerHTML:t})});case"element":return this.set({src:t});case"canvas":return this.set({canvas:t});case"img":return this.set({img:t});default:return this.error("Unknown source type.")}}))},k.prototype.to=function(t){switch(t){case"container":return this.toContainer();case"canvas":return this.toCanvas();case"img":return this.toImg();case"pdf":return this.toPdf();default:return this.error("Invalid target.")}},k.prototype.toContainer=function(){return this.thenList([function(){return this.prop.src||this.error("Cannot duplicate - no source HTML.")},function(){return this.prop.pageSize||this.setPageSize()}]).then((function(){var t={position:"relative",display:"inline-block",width:Math.max(this.prop.src.clientWidth,this.prop.src.scrollWidth,this.prop.src.offsetWidth)+"px",left:0,right:0,top:0,margin:"auto",backgroundColor:"white"},e=function t(e,n){for(var r=3===e.nodeType?document.createTextNode(e.nodeValue):e.cloneNode(!1),i=e.firstChild;i;i=i.nextSibling)!0!==n&&1===i.nodeType&&"SCRIPT"===i.nodeName||r.appendChild(t(i,n));return 1===e.nodeType&&("CANVAS"===e.nodeName?(r.width=e.width,r.height=e.height,r.getContext("2d").drawImage(e,0,0)):"TEXTAREA"!==e.nodeName&&"SELECT"!==e.nodeName||(r.value=e.value),r.addEventListener("load",(function(){r.scrollTop=e.scrollTop,r.scrollLeft=e.scrollLeft}),!0)),r}(this.prop.src,this.opt.html2canvas.javascriptEnabled);"BODY"===e.tagName&&(t.height=Math.max(document.body.scrollHeight,document.body.offsetHeight,document.documentElement.clientHeight,document.documentElement.scrollHeight,document.documentElement.offsetHeight)+"px"),this.prop.overlay=C("div",{className:"html2pdf__overlay",style:{position:"fixed",overflow:"hidden",zIndex:1e3,left:"-100000px",right:0,bottom:0,top:0}}),this.prop.container=C("div",{className:"html2pdf__container",style:t}),this.prop.container.appendChild(e),this.prop.container.firstChild.appendChild(C("div",{style:{clear:"both",border:"0 none transparent",margin:0,padding:0,height:0}})),this.prop.container.style.float="none",this.prop.overlay.appendChild(this.prop.container),document.body.appendChild(this.prop.overlay),this.prop.container.firstChild.style.position="relative",this.prop.container.height=Math.max(this.prop.container.firstChild.clientHeight,this.prop.container.firstChild.scrollHeight,this.prop.container.firstChild.offsetHeight)+"px"}))},k.prototype.toCanvas=function(){var t=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(t).then((function(){var t=Object.assign({},this.opt.html2canvas);if(delete t.onrendered,this.isHtml2CanvasLoaded())return html2canvas(this.prop.container,t)})).then((function(t){(this.opt.html2canvas.onrendered||function(){})(t),this.prop.canvas=t,document.body.removeChild(this.prop.overlay)}))},k.prototype.toContext2d=function(){var t=[function(){return document.body.contains(this.prop.container)||this.toContainer()}];return this.thenList(t).then((function(){var t=this.opt.jsPDF,e=Object.assign({async:!0,allowTaint:!0,backgroundColor:"#ffffff",imageTimeout:15e3,logging:!0,proxy:null,removeContainer:!0,foreignObjectRendering:!1,useCORS:!1},this.opt.html2canvas);if(delete e.onrendered,t.context2d.autoPaging=!0,t.context2d.posX=this.opt.x,t.context2d.posY=this.opt.y,e.windowHeight=e.windowHeight||0,e.windowHeight=0==e.windowHeight?Math.max(this.prop.container.clientHeight,this.prop.container.scrollHeight,this.prop.container.offsetHeight):e.windowHeight,this.isHtml2CanvasLoaded())return html2canvas(this.prop.container,e)})).then((function(t){(this.opt.html2canvas.onrendered||function(){})(t),this.prop.canvas=t,document.body.removeChild(this.prop.overlay)}))},k.prototype.toImg=function(){return this.thenList([function(){return this.prop.canvas||this.toCanvas()}]).then((function(){var t=this.prop.canvas.toDataURL("image/"+this.opt.image.type,this.opt.image.quality);this.prop.img=document.createElement("img"),this.prop.img.src=t}))},k.prototype.toPdf=function(){return this.thenList([function(){return this.toContext2d()}]).then((function(){this.prop.pdf=this.prop.pdf||this.opt.jsPDF}))},k.prototype.output=function(t,e,n){return"img"===(n=n||"pdf").toLowerCase()||"image"===n.toLowerCase()?this.outputImg(t,e):this.outputPdf(t,e)},k.prototype.outputPdf=function(t,e){return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then((function(){return this.prop.pdf.output(t,e)}))},k.prototype.outputImg=function(t,e){return this.thenList([function(){return this.prop.img||this.toImg()}]).then((function(){switch(t){case void 0:case"img":return this.prop.img;case"datauristring":case"dataurlstring":return this.prop.img.src;case"datauri":case"dataurl":return document.location.href=this.prop.img.src;default:throw'Image output type "'+t+'" is not supported.'}}))},k.prototype.isHtml2CanvasLoaded=function(){var t=void 0!==S.html2canvas;return t||console.error("html2canvas not loaded."),t},k.prototype.save=function(t){if(this.isHtml2CanvasLoaded())return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).set(t?{filename:t}:null).then((function(){this.prop.pdf.save(this.opt.filename)}))},k.prototype.doCallback=function(t){if(this.isHtml2CanvasLoaded())return this.thenList([function(){return this.prop.pdf||this.toPdf()}]).then((function(){this.prop.callback(this.prop.pdf)}))},k.prototype.set=function(t){if("object"!==_(t))return this;var e=Object.keys(t||{}).map((function(e){if(e in k.template.prop)return function(){this.prop[e]=t[e]};switch(e){case"margin":return this.setMargin.bind(this,t.margin);case"jsPDF":return function(){return this.opt.jsPDF=t.jsPDF,this.setPageSize()};case"pageSize":return this.setPageSize.bind(this,t.pageSize);default:return function(){this.opt[e]=t[e]}}}),this);return this.then((function(){return this.thenList(e)}))},k.prototype.get=function(t,e){return this.then((function(){var n=t in k.template.prop?this.prop[t]:this.opt[t];return e?e(n):n}))},k.prototype.setMargin=function(t){return this.then((function(){switch(_(t)){case"number":t=[t,t,t,t];case"array":if(2===t.length&&(t=[t[0],t[1],t[0],t[1]]),4===t.length)break;default:return this.error("Invalid margin array.")}this.opt.margin=t})).then(this.setPageSize)},k.prototype.setPageSize=function(t){function e(t,e){return Math.floor(t*e/72*96)}return this.then((function(){(t=t||gt.getPageSize(this.opt.jsPDF)).hasOwnProperty("inner")||(t.inner={width:t.width-this.opt.margin[1]-this.opt.margin[3],height:t.height-this.opt.margin[0]-this.opt.margin[2]},t.inner.px={width:e(t.inner.width,t.k),height:e(t.inner.height,t.k)},t.inner.ratio=t.inner.height/t.inner.width),this.prop.pageSize=t}))},k.prototype.setProgress=function(t,e,n,r){return null!=t&&(this.progress.val=t),null!=e&&(this.progress.state=e),null!=n&&(this.progress.n=n),null!=r&&(this.progress.stack=r),this.progress.ratio=this.progress.val/this.progress.state,this},k.prototype.updateProgress=function(t,e,n,r){return this.setProgress(t?this.progress.val+t:null,e||null,n?this.progress.n+n:null,r?this.progress.stack.concat(r):null)},k.prototype.then=function(t,e){var n=this;return this.thenCore(t,e,(function(t,e){return n.updateProgress(null,null,1,[t]),i.prototype.then.call(this,(function(e){return n.updateProgress(null,t),e})).then(t,e).then((function(t){return n.updateProgress(1),t}))}))},k.prototype.thenCore=function(t,e,n){n=n||i.prototype.then;var r=this;t&&(t=t.bind(r)),e&&(e=e.bind(r));var o=-1!==i.toString().indexOf("[native code]")&&"Promise"===i.name?r:k.convert(Object.assign({},r),i.prototype),a=n.call(o,t,e);return k.convert(a,r.__proto__)},k.prototype.thenExternal=function(t,e){return i.prototype.then.call(this,t,e)},k.prototype.thenList=function(t){var e=this;return t.forEach((function(t){e=e.thenCore(t)})),e},k.prototype.catch=function(t){t&&(t=t.bind(this));var e=i.prototype.catch.call(this,t);return k.convert(e,this)},k.prototype.catchExternal=function(t){return i.prototype.catch.call(this,t)},k.prototype.error=function(t){return this.then((function(){throw new Error(t)}))},k.prototype.using=k.prototype.set,k.prototype.saveAs=k.prototype.save,k.prototype.export=k.prototype.output,k.prototype.run=k.prototype.then,gt.getPageSize=function(t,e,n){if("object"===o(t)){var r=t;t=r.orientation,e=r.unit||e,n=r.format||n}e=e||"mm",n=n||"a4",t=(""+(t||"P")).toLowerCase();var i=(""+n).toLowerCase(),a={a0:[2383.94,3370.39],a1:[1683.78,2383.94],a2:[1190.55,1683.78],a3:[841.89,1190.55],a4:[595.28,841.89],a5:[419.53,595.28],a6:[297.64,419.53],a7:[209.76,297.64],a8:[147.4,209.76],a9:[104.88,147.4],a10:[73.7,104.88],b0:[2834.65,4008.19],b1:[2004.09,2834.65],b2:[1417.32,2004.09],b3:[1000.63,1417.32],b4:[708.66,1000.63],b5:[498.9,708.66],b6:[354.33,498.9],b7:[249.45,354.33],b8:[175.75,249.45],b9:[124.72,175.75],b10:[87.87,124.72],c0:[2599.37,3676.54],c1:[1836.85,2599.37],c2:[1298.27,1836.85],c3:[918.43,1298.27],c4:[649.13,918.43],c5:[459.21,649.13],c6:[323.15,459.21],c7:[229.61,323.15],c8:[161.57,229.61],c9:[113.39,161.57],c10:[79.37,113.39],dl:[311.81,623.62],letter:[612,792],"government-letter":[576,756],legal:[612,1008],"junior-legal":[576,360],ledger:[1224,792],tabloid:[792,1224],"credit-card":[153,243]};switch(e){case"pt":var s=1;break;case"mm":s=72/25.4;break;case"cm":s=72/2.54;break;case"in":s=72;break;case"px":s=.75;break;case"pc":case"em":s=12;break;case"ex":s=6;break;default:throw"Invalid unit: "+e}if(a.hasOwnProperty(i))var u=a[i][1]/s,c=a[i][0]/s;else try{u=n[1],c=n[0]}catch(t){throw new Error("Invalid format: "+n)}if("p"===t||"portrait"===t){if(t="p",u<c){var l=c;c=u,u=l}}else{if("l"!==t&&"landscape"!==t)throw"Invalid orientation: "+t;t="l",c<u&&(l=c,c=u,u=l)}return{width:c,height:u,unit:e,k:s}},A.html=function(t,e){(e=e||{}).callback=e.callback||function(){},e.html2canvas=e.html2canvas||{},e.html2canvas.canvas=e.html2canvas.canvas||this.canvas,e.jsPDF=e.jsPDF||this,e.jsPDF;var n=new k(e);return e.worker?n:n.from(t).doCallback()},gt.API.addJS=function(t){return T=t,this.internal.events.subscribe("postPutResources",(function(t){P=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/Names [(EmbeddedJS) "+(P+1)+" 0 R]"),this.internal.out(">>"),this.internal.out("endobj"),F=this.internal.newObject(),this.internal.out("<<"),this.internal.out("/S /JavaScript"),this.internal.out("/JS ("+T+")"),this.internal.out(">>"),this.internal.out("endobj")})),this.internal.events.subscribe("putCatalog",(function(){void 0!==P&&void 0!==F&&this.internal.out("/Names <</JavaScript "+P+" 0 R>>")})),this},
/**
   * @license
   * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */(j=gt.API).events.push(["postPutResources",function(){var t=this,e=/^(\d+) 0 obj$/;if(0<this.outline.root.children.length)for(var n=t.outline.render().split(/\r\n/),r=0;r<n.length;r++){var i=n[r],o=e.exec(i);if(null!=o){var a=o[1];t.internal.newObjectDeferredBegin(a,!1)}t.internal.write(i)}if(this.outline.createNamedDestinations){var s=this.internal.pages.length,u=[];for(r=0;r<s;r++){var c=t.internal.newObject();u.push(c);var l=t.internal.getPageInfo(r+1);t.internal.write("<< /D["+l.objId+" 0 R /XYZ null null null]>> endobj")}var f=t.internal.newObject();for(t.internal.write("<< /Names [ "),r=0;r<u.length;r++)t.internal.write("(page_"+(r+1)+")"+u[r]+" 0 R");t.internal.write(" ] >>","endobj"),t.internal.newObject(),t.internal.write("<< /Dests "+f+" 0 R"),t.internal.write(">>","endobj")}}]),j.events.push(["putCatalog",function(){0<this.outline.root.children.length&&(this.internal.write("/Outlines",this.outline.makeRef(this.outline.root)),this.outline.createNamedDestinations&&this.internal.write("/Names "+namesOid+" 0 R"))}]),j.events.push(["initialized",function(){var t=this;t.outline={createNamedDestinations:!1,root:{children:[]}},t.outline.add=function(t,e,n){var r={title:e,options:n,children:[]};return null==t&&(t=this.root),t.children.push(r),r},t.outline.render=function(){return this.ctx={},this.ctx.val="",this.ctx.pdf=t,this.genIds_r(this.root),this.renderRoot(this.root),this.renderItems(this.root),this.ctx.val},t.outline.genIds_r=function(e){e.id=t.internal.newObjectDeferred();for(var n=0;n<e.children.length;n++)this.genIds_r(e.children[n])},t.outline.renderRoot=function(t){this.objStart(t),this.line("/Type /Outlines"),0<t.children.length&&(this.line("/First "+this.makeRef(t.children[0])),this.line("/Last "+this.makeRef(t.children[t.children.length-1]))),this.line("/Count "+this.count_r({count:0},t)),this.objEnd()},t.outline.renderItems=function(e){this.ctx.pdf.internal.getCoordinateString;for(var n=this.ctx.pdf.internal.getVerticalCoordinateString,r=0;r<e.children.length;r++){var i=e.children[r];this.objStart(i),this.line("/Title "+this.makeString(i.title)),this.line("/Parent "+this.makeRef(e)),0<r&&this.line("/Prev "+this.makeRef(e.children[r-1])),r<e.children.length-1&&this.line("/Next "+this.makeRef(e.children[r+1])),0<i.children.length&&(this.line("/First "+this.makeRef(i.children[0])),this.line("/Last "+this.makeRef(i.children[i.children.length-1])));var o=this.count=this.count_r({count:0},i);if(0<o&&this.line("/Count "+o),i.options&&i.options.pageNumber){var a=t.internal.getPageInfo(i.options.pageNumber);this.line("/Dest ["+a.objId+" 0 R /XYZ 0 "+n(0)+" 0]")}this.objEnd()}for(r=0;r<e.children.length;r++)i=e.children[r],this.renderItems(i)},t.outline.line=function(t){this.ctx.val+=t+"\r\n"},t.outline.makeRef=function(t){return t.id+" 0 R"},t.outline.makeString=function(e){return"("+t.internal.pdfEscape(e)+")"},t.outline.objStart=function(t){this.ctx.val+="\r\n"+t.id+" 0 obj\r\n<<\r\n"},t.outline.objEnd=function(t){this.ctx.val+=">> \r\nendobj\r\n"},t.outline.count_r=function(t,e){for(var n=0;n<e.children.length;n++)t.count++,this.count_r(t,e.children[n]);return t.count}}]),
/**
   * @license
   * 
   * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb
   *
   * 
   * ====================================================================
   */
I=gt.API,E=function(){var t="function"==typeof Deflater;if(!t)throw new Error("requires deflate.js for compression");return t},B=function(t,e,n,r){var i=5,o=U;switch(r){case I.image_compression.FAST:i=3,o=R;break;case I.image_compression.MEDIUM:i=6,o=z;break;case I.image_compression.SLOW:i=9,o=H}t=q(t,e,n,o);var a=new Uint8Array(O(i)),s=M(t),u=new Deflater(i),c=u.append(t),l=u.flush(),f=a.length+c.length+l.length,h=new Uint8Array(f+4);return h.set(a),h.set(c,a.length),h.set(l,a.length+c.length),h[f++]=s>>>24&255,h[f++]=s>>>16&255,h[f++]=s>>>8&255,h[f++]=255&s,I.arrayBufferToBinaryString(h)},O=function(t,e){var n=Math.LOG2E*Math.log(32768)-8<<4|8,r=n<<8;return r|=Math.min(3,(e-1&255)>>1)<<6,r|=0,[n,255&(r+=31-r%31)]},M=function(t,e){for(var n,r=1,i=0,o=t.length,a=0;0<o;){for(o-=n=e<o?e:o;i+=r+=t[a++],--n;);r%=65521,i%=65521}return(i<<16|r)>>>0},q=function(t,e,n,r){for(var i,o,a,s=t.length/e,u=new Uint8Array(t.length+s),c=V(),l=0;l<s;l++){if(a=l*e,i=t.subarray(a,a+e),r)u.set(r(i,n,o),a+l);else{for(var f=0,h=c.length,p=[];f<h;f++)p[f]=c[f](i,n,o);var d=G(p.concat());u.set(p[d],a+l)}o=i}return u},D=function(t,e,n){var r=Array.apply([],t);return r.unshift(0),r},R=function(t,e,n){var r,i=[],o=0,a=t.length;for(i[0]=1;o<a;o++)r=t[o-e]||0,i[o+1]=t[o]-r+256&255;return i},U=function(t,e,n){var r,i=[],o=0,a=t.length;for(i[0]=2;o<a;o++)r=n&&n[o]||0,i[o+1]=t[o]-r+256&255;return i},z=function(t,e,n){var r,i,o=[],a=0,s=t.length;for(o[0]=3;a<s;a++)r=t[a-e]||0,i=n&&n[a]||0,o[a+1]=t[a]+256-(r+i>>>1)&255;return o},H=function(t,e,n){var r,i,o,a,s=[],u=0,c=t.length;for(s[0]=4;u<c;u++)r=t[u-e]||0,i=n&&n[u]||0,o=n&&n[u-e]||0,a=W(r,i,o),s[u+1]=t[u]-a+256&255;return s},W=function(t,e,n){var r=t+e-n,i=Math.abs(r-t),o=Math.abs(r-e),a=Math.abs(r-n);return i<=o&&i<=a?t:o<=a?e:n},V=function(){return[D,R,U,z,H]},G=function(t){for(var e,n,r,i=0,o=t.length;i<o;)((e=Y(t[i].slice(1)))<n||!n)&&(n=e,r=i),i++;return r},Y=function(t){for(var e=0,n=t.length,r=0;e<n;)r+=Math.abs(t[e++]);return r},I.processPNG=function(t,e,n,r,i){var o,a,s,u,c,l,f=this.color_spaces.DEVICE_RGB,h=this.decode.FLATE_DECODE,p=8;if(this.isArrayBuffer(t)&&(t=new Uint8Array(t)),this.isArrayBufferView(t)){if("function"!=typeof PNG||"function"!=typeof Mt)throw new Error("PNG support requires png.js and zlib.js");if(t=(o=new PNG(t)).imgData,p=o.bits,f=o.colorSpace,u=o.colors,-1!==[4,6].indexOf(o.colorType)){if(8===o.bits)for(var d,g=(_=32==o.pixelBitlength?new Uint32Array(o.decodePixels().buffer):16==o.pixelBitlength?new Uint16Array(o.decodePixels().buffer):new Uint8Array(o.decodePixels().buffer)).length,m=new Uint8Array(g*o.colors),v=new Uint8Array(g),y=o.pixelBitlength-o.bits,b=0,w=0;b<g;b++){for(x=_[b],d=0;d<y;)m[w++]=x>>>d&255,d+=o.bits;v[b]=x>>>d&255}if(16===o.bits){g=(_=new Uint32Array(o.decodePixels().buffer)).length,m=new Uint8Array(g*(32/o.pixelBitlength)*o.colors),v=new Uint8Array(g*(32/o.pixelBitlength));for(var x,N=1<o.colors,L=w=b=0;b<g;)x=_[b++],m[w++]=x>>>0&255,N&&(m[w++]=x>>>16&255,x=_[b++],m[w++]=x>>>0&255),v[L++]=x>>>16&255;p=8}r!==I.image_compression.NONE&&E()?(t=B(m,o.width*o.colors,o.colors,r),l=B(v,o.width,1,r)):(t=m,l=v,h=null)}if(3===o.colorType&&(f=this.color_spaces.INDEXED,c=o.palette,o.transparency.indexed)){var A=o.transparency.indexed,S=0;for(b=0,g=A.length;b<g;++b)S+=A[b];if((S/=255)==g-1&&-1!==A.indexOf(0))s=[A.indexOf(0)];else if(S!==g){var _=o.decodePixels();for(v=new Uint8Array(_.length),b=0,g=_.length;b<g;b++)v[b]=A[_[b]];l=B(v,o.width,1)}}var C=function(t){var e;switch(t){case I.image_compression.FAST:e=11;break;case I.image_compression.MEDIUM:e=13;break;case I.image_compression.SLOW:e=14;break;default:e=12}return e}(r);return a=h===this.decode.FLATE_DECODE?"/Predictor "+C+" /Colors "+u+" /BitsPerComponent "+p+" /Columns "+o.width:"/Colors "+u+" /BitsPerComponent "+p+" /Columns "+o.width,(this.isArrayBuffer(t)||this.isArrayBufferView(t))&&(t=this.arrayBufferToBinaryString(t)),(l&&this.isArrayBuffer(l)||this.isArrayBufferView(l))&&(l=this.arrayBufferToBinaryString(l)),this.createImageInfo(t,o.width,o.height,f,p,h,e,n,a,s,c,l,C)}throw new Error("Unsupported PNG image data, try using JPEG instead.")},
/**
   * @license
   * Copyright (c) 2017 Aras Abbasi 
   *
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */(X=gt.API).processGIF89A=function(t,e,n,r,i){var o=new jt(t),a=o.width,s=o.height,u=[];o.decodeAndBlitFrameRGBA(0,u);var c={data:u,width:a,height:s},l=new Et(100).encode(c,100);return X.processJPEG.call(this,l,e,n,r)},X.processGIF87A=X.processGIF89A,(J=gt.API).processBMP=function(t,e,n,r,i){var o=new Bt(t,!1),a=o.width,s=o.height,u={data:o.getData(),width:a,height:s},c=new Et(100).encode(u,100);return J.processJPEG.call(this,c,e,n,r)},gt.API.setLanguage=function(t){return void 0===this.internal.languageSettings&&(this.internal.languageSettings={},this.internal.languageSettings.isSubscribed=!1),void 0!=={af:"Afrikaans",sq:"Albanian",ar:"Arabic (Standard)","ar-DZ":"Arabic (Algeria)","ar-BH":"Arabic (Bahrain)","ar-EG":"Arabic (Egypt)","ar-IQ":"Arabic (Iraq)","ar-JO":"Arabic (Jordan)","ar-KW":"Arabic (Kuwait)","ar-LB":"Arabic (Lebanon)","ar-LY":"Arabic (Libya)","ar-MA":"Arabic (Morocco)","ar-OM":"Arabic (Oman)","ar-QA":"Arabic (Qatar)","ar-SA":"Arabic (Saudi Arabia)","ar-SY":"Arabic (Syria)","ar-TN":"Arabic (Tunisia)","ar-AE":"Arabic (U.A.E.)","ar-YE":"Arabic (Yemen)",an:"Aragonese",hy:"Armenian",as:"Assamese",ast:"Asturian",az:"Azerbaijani",eu:"Basque",be:"Belarusian",bn:"Bengali",bs:"Bosnian",br:"Breton",bg:"Bulgarian",my:"Burmese",ca:"Catalan",ch:"Chamorro",ce:"Chechen",zh:"Chinese","zh-HK":"Chinese (Hong Kong)","zh-CN":"Chinese (PRC)","zh-SG":"Chinese (Singapore)","zh-TW":"Chinese (Taiwan)",cv:"Chuvash",co:"Corsican",cr:"Cree",hr:"Croatian",cs:"Czech",da:"Danish",nl:"Dutch (Standard)","nl-BE":"Dutch (Belgian)",en:"English","en-AU":"English (Australia)","en-BZ":"English (Belize)","en-CA":"English (Canada)","en-IE":"English (Ireland)","en-JM":"English (Jamaica)","en-NZ":"English (New Zealand)","en-PH":"English (Philippines)","en-ZA":"English (South Africa)","en-TT":"English (Trinidad & Tobago)","en-GB":"English (United Kingdom)","en-US":"English (United States)","en-ZW":"English (Zimbabwe)",eo:"Esperanto",et:"Estonian",fo:"Faeroese",fj:"Fijian",fi:"Finnish",fr:"French (Standard)","fr-BE":"French (Belgium)","fr-CA":"French (Canada)","fr-FR":"French (France)","fr-LU":"French (Luxembourg)","fr-MC":"French (Monaco)","fr-CH":"French (Switzerland)",fy:"Frisian",fur:"Friulian",gd:"Gaelic (Scots)","gd-IE":"Gaelic (Irish)",gl:"Galacian",ka:"Georgian",de:"German (Standard)","de-AT":"German (Austria)","de-DE":"German (Germany)","de-LI":"German (Liechtenstein)","de-LU":"German (Luxembourg)","de-CH":"German (Switzerland)",el:"Greek",gu:"Gujurati",ht:"Haitian",he:"Hebrew",hi:"Hindi",hu:"Hungarian",is:"Icelandic",id:"Indonesian",iu:"Inuktitut",ga:"Irish",it:"Italian (Standard)","it-CH":"Italian (Switzerland)",ja:"Japanese",kn:"Kannada",ks:"Kashmiri",kk:"Kazakh",km:"Khmer",ky:"Kirghiz",tlh:"Klingon",ko:"Korean","ko-KP":"Korean (North Korea)","ko-KR":"Korean (South Korea)",la:"Latin",lv:"Latvian",lt:"Lithuanian",lb:"Luxembourgish",mk:"FYRO Macedonian",ms:"Malay",ml:"Malayalam",mt:"Maltese",mi:"Maori",mr:"Marathi",mo:"Moldavian",nv:"Navajo",ng:"Ndonga",ne:"Nepali",no:"Norwegian",nb:"Norwegian (Bokmal)",nn:"Norwegian (Nynorsk)",oc:"Occitan",or:"Oriya",om:"Oromo",fa:"Persian","fa-IR":"Persian/Iran",pl:"Polish",pt:"Portuguese","pt-BR":"Portuguese (Brazil)",pa:"Punjabi","pa-IN":"Punjabi (India)","pa-PK":"Punjabi (Pakistan)",qu:"Quechua",rm:"Rhaeto-Romanic",ro:"Romanian","ro-MO":"Romanian (Moldavia)",ru:"Russian","ru-MO":"Russian (Moldavia)",sz:"Sami (Lappish)",sg:"Sango",sa:"Sanskrit",sc:"Sardinian",sd:"Sindhi",si:"Singhalese",sr:"Serbian",sk:"Slovak",sl:"Slovenian",so:"Somani",sb:"Sorbian",es:"Spanish","es-AR":"Spanish (Argentina)","es-BO":"Spanish (Bolivia)","es-CL":"Spanish (Chile)","es-CO":"Spanish (Colombia)","es-CR":"Spanish (Costa Rica)","es-DO":"Spanish (Dominican Republic)","es-EC":"Spanish (Ecuador)","es-SV":"Spanish (El Salvador)","es-GT":"Spanish (Guatemala)","es-HN":"Spanish (Honduras)","es-MX":"Spanish (Mexico)","es-NI":"Spanish (Nicaragua)","es-PA":"Spanish (Panama)","es-PY":"Spanish (Paraguay)","es-PE":"Spanish (Peru)","es-PR":"Spanish (Puerto Rico)","es-ES":"Spanish (Spain)","es-UY":"Spanish (Uruguay)","es-VE":"Spanish (Venezuela)",sx:"Sutu",sw:"Swahili",sv:"Swedish","sv-FI":"Swedish (Finland)","sv-SV":"Swedish (Sweden)",ta:"Tamil",tt:"Tatar",te:"Teluga",th:"Thai",tig:"Tigre",ts:"Tsonga",tn:"Tswana",tr:"Turkish",tk:"Turkmen",uk:"Ukrainian",hsb:"Upper Sorbian",ur:"Urdu",ve:"Venda",vi:"Vietnamese",vo:"Volapuk",wa:"Walloon",cy:"Welsh",xh:"Xhosa",ji:"Yiddish",zu:"Zulu"}[t]&&(this.internal.languageSettings.languageCode=t,!1===this.internal.languageSettings.isSubscribed&&(this.internal.events.subscribe("putCatalog",(function(){this.internal.write("/Lang ("+this.internal.languageSettings.languageCode+")")})),this.internal.languageSettings.isSubscribed=!0)),this
/** @license
   * MIT license.
   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
   *               2014 Diego Casorran, https://github.com/diegocr
   *
   * 
   * ====================================================================
   */},$=gt.API,K=$.getCharWidthsArray=function(t,e){var n,r,i,o=(e=e||{}).font||this.internal.getFont(),a=e.fontSize||this.internal.getFontSize(),s=e.charSpace||this.internal.getCharSpace(),u=e.widths?e.widths:o.metadata.Unicode.widths,c=u.fof?u.fof:1,l=e.kerning?e.kerning:o.metadata.Unicode.kerning,f=l.fof?l.fof:1,h=0,p=u[0]||c,d=[];for(n=0,r=t.length;n<r;n++)i=t.charCodeAt(n),"function"==typeof o.metadata.widthOfString?d.push((o.metadata.widthOfGlyph(o.metadata.characterToGlyph(i))+s*(1e3/a)||0)/1e3):d.push((u[i]||p)/c+(l[i]&&l[i][h]||0)/f),h=i;return d},Q=$.getArraySum=function(t){for(var e=t.length,n=0;e;)n+=t[--e];return n},Z=$.getStringUnitWidth=function(t,e){var n=(e=e||{}).fontSize||this.internal.getFontSize(),r=e.font||this.internal.getFont(),i=e.charSpace||this.internal.getCharSpace();return"function"==typeof r.metadata.widthOfString?r.metadata.widthOfString(t,n,i)/n:Q(K.apply(this,arguments))},tt=function(t,e,n,r){for(var i=[],o=0,a=t.length,s=0;o!==a&&s+e[o]<n;)s+=e[o],o++;i.push(t.slice(0,o));var u=o;for(s=0;o!==a;)s+e[o]>r&&(i.push(t.slice(u,o)),s=0,u=o),s+=e[o],o++;return u!==o&&i.push(t.slice(u,o)),i},et=function(t,e,n){n||(n={});var r,i,o,a,s,u,c=[],l=[c],f=n.textIndent||0,h=0,p=0,d=t.split(" "),g=K.apply(this,[" ",n])[0];if(u=-1===n.lineIndent?d[0].length+2:n.lineIndent||0){var m=Array(u).join(" "),v=[];d.map((function(t){1<(t=t.split(/\s*\n/)).length?v=v.concat(t.map((function(t,e){return(e&&t.length?"\n":"")+t}))):v.push(t[0])})),d=v,u=Z.apply(this,[m,n])}for(o=0,a=d.length;o<a;o++){var y=0;if(r=d[o],u&&"\n"==r[0]&&(r=r.substr(1),y=1),i=K.apply(this,[r,n]),e<f+h+(p=Q(i))||y){if(e<p){for(s=tt.apply(this,[r,i,e-(f+h),e]),c.push(s.shift()),c=[s.pop()];s.length;)l.push([s.shift()]);p=Q(i.slice(r.length-(c[0]?c[0].length:0)))}else c=[r];l.push(c),f=p+u,h=g}else c.push(r),f+=h+p,h=g}if(u)var b=function(t,e){return(e?m:"")+t.join(" ")};else b=function(t){return t.join(" ")};return l.map(b)},$.splitTextToSize=function(t,e,n){var r,i=(n=n||{}).fontSize||this.internal.getFontSize(),o=function(t){if(t.widths&&t.kerning)return{widths:t.widths,kerning:t.kerning};var e=this.internal.getFont(t.fontName,t.fontStyle),n="Unicode";return e.metadata[n]?{widths:e.metadata[n].widths||{0:1},kerning:e.metadata[n].kerning||{}}:{font:e.metadata,fontSize:this.internal.getFontSize(),charSpace:this.internal.getCharSpace()}}.call(this,n);r=Array.isArray(t)?t:t.split(/\r?\n/);var a=1*this.internal.scaleFactor*e/i;o.textIndent=n.textIndent?1*n.textIndent*this.internal.scaleFactor/i:0,o.lineIndent=n.lineIndent;var s,u,c=[];for(s=0,u=r.length;s<u;s++)c=c.concat(et.apply(this,[r[s],a,o]));return c},
/** @license
   jsPDF standard_fonts_metrics plugin
   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
   * MIT license.
   * 
   * ====================================================================
   */
nt=gt.API,it={codePages:["WinAnsiEncoding"],WinAnsiEncoding:(rt=function(t){for(var e="klmnopqrstuvwxyz",n={},r=0;r<e.length;r++)n[e[r]]="0123456789abcdef"[r];var i,o,a,s,u,c={},l=1,f=c,h=[],p="",d="",g=t.length-1;for(r=1;r!=g;)u=t[r],r+=1,"'"==u?o=o?(s=o.join(""),i):[]:o?o.push(u):"{"==u?(h.push([f,s]),f={},s=i):"}"==u?((a=h.pop())[0][a[1]]=f,s=i,f=a[0]):"-"==u?l=-1:s===i?n.hasOwnProperty(u)?(p+=n[u],s=parseInt(p,16)*l,l=1,p=""):p+=u:n.hasOwnProperty(u)?(d+=n[u],f[s]=parseInt(d,16)*l,l=1,s=i,d=""):d+=u;return c})("{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}")},ot={Unicode:{Courier:it,"Courier-Bold":it,"Courier-BoldOblique":it,"Courier-Oblique":it,Helvetica:it,"Helvetica-Bold":it,"Helvetica-BoldOblique":it,"Helvetica-Oblique":it,"Times-Roman":it,"Times-Bold":it,"Times-BoldItalic":it,"Times-Italic":it}},at={Unicode:{"Courier-Oblique":rt("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-BoldItalic":rt("{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}"),"Helvetica-Bold":rt("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),Courier:rt("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-BoldOblique":rt("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Bold":rt("{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}"),Symbol:rt("{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}"),Helvetica:rt("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}"),"Helvetica-BoldOblique":rt("{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}"),ZapfDingbats:rt("{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}"),"Courier-Bold":rt("{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}"),"Times-Italic":rt("{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}"),"Times-Roman":rt("{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}"),"Helvetica-Oblique":rt("{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}")}},nt.events.push(["addFont",function(t){var e,n,r,i=t.font,o="Unicode";(e=at[o][i.postScriptName])&&((n=i.metadata[o]?i.metadata[o]:i.metadata[o]={}).widths=e.widths,n.kerning=e.kerning),(r=ot[o][i.postScriptName])&&((n=i.metadata[o]?i.metadata[o]:i.metadata[o]={}).encoding=r).codePages&&r.codePages.length&&(i.encoding=r.codePages[0])}]),
/**
   * @license
   * Licensed under the MIT License.
   * http://opensource.org/licenses/mit-license
   */
st=gt,"undefined"!=typeof self&&self||void 0!==r&&r||"undefined"!=typeof window&&window||Function("return this")(),st.API.events.push(["addFont",function(t){var e=t.font,n=t.instance;if(void 0!==n&&n.existsFileInVFS(e.postScriptName)){var r=n.getFileFromVFS(e.postScriptName);if("string"!=typeof r)throw new Error("Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('"+e.postScriptName+"').");e.metadata=st.API.TTFFont.open(e.postScriptName,e.fontName,r,e.encoding),e.metadata.Unicode=e.metadata.Unicode||{encoding:{},kerning:{},widths:[]},e.metadata.glyIdsUsed=[0]}else if(!1===e.isStandardFont)throw new Error("Font does not exist in vFS, import fonts or remove declaration doc.addFont('"+e.postScriptName+"').")}]),
/** @license
   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
   * 
   * 
   * ====================================================================
   */(ut=gt.API).addSvg=function(t,e,n,r,i){if(void 0===e||void 0===n)throw new Error("addSVG needs values for 'x' and 'y'");function o(t){for(var e=parseFloat(t[1]),n=parseFloat(t[2]),r=[],i=3,o=t.length;i<o;)"c"===t[i]?(r.push([parseFloat(t[i+1]),parseFloat(t[i+2]),parseFloat(t[i+3]),parseFloat(t[i+4]),parseFloat(t[i+5]),parseFloat(t[i+6])]),i+=7):"l"===t[i]?(r.push([parseFloat(t[i+1]),parseFloat(t[i+2])]),i+=3):i+=1;return[e,n,r]}var a,s,u,c,l,f,h,p,d=(a=t,(u=((p=(c=document).createElement("iframe"),l=".jsPDF_sillysvg_iframe {display:none;position:absolute;}",(h=(f=c).createElement("style")).type="text/css",h.styleSheet?h.styleSheet.cssText=l:h.appendChild(f.createTextNode(l)),f.getElementsByTagName("head")[0].appendChild(h),p.name="childframe",p.setAttribute("width",0),p.setAttribute("height",0),p.setAttribute("frameborder","0"),p.setAttribute("scrolling","no"),p.setAttribute("seamless","seamless"),p.setAttribute("class","jsPDF_sillysvg_iframe"),c.body.appendChild(p),s=p).contentWindow||s.contentDocument).document).write(a),u.close(),u.getElementsByTagName("svg")[0]),g=[1,1],m=parseFloat(d.getAttribute("width")),v=parseFloat(d.getAttribute("height"));m&&v&&(r&&i?g=[r/m,i/v]:r?g=[r/m,r/m]:i&&(g=[i/v,i/v]));var y,b,w,x,N=d.childNodes;for(y=0,b=N.length;y<b;y++)(w=N[y]).tagName&&"PATH"===w.tagName.toUpperCase()&&((x=o(w.getAttribute("d").split(" ")))[0]=x[0]*g[0]+e,x[1]=x[1]*g[1]+n,this.lines.call(this,x[2],x[0],x[1],g));return this},ut.addSVG=ut.addSvg,ut.addSvgAsImage=function(t,e,n,r,i,o,a,s){if(isNaN(e)||isNaN(n))throw console.error("jsPDF.addSvgAsImage: Invalid coordinates",arguments),new Error("Invalid coordinates passed to jsPDF.addSvgAsImage");if(isNaN(r)||isNaN(i))throw console.error("jsPDF.addSvgAsImage: Invalid measurements",arguments),new Error("Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage");var u=document.createElement("canvas");u.width=r,u.height=i;var c=u.getContext("2d");return c.fillStyle="#fff",c.fillRect(0,0,u.width,u.height),canvg(u,t,{ignoreMouse:!0,ignoreAnimation:!0,ignoreDimensions:!0,ignoreClear:!0}),this.addImage(u.toDataURL("image/jpeg",1),e,n,r,i,a,s),this},gt.API.putTotalPages=function(t){var e,n;n=parseInt(this.internal.getFont().id.substr(1),10)<15?(e=new RegExp(t,"g"),this.internal.getNumberOfPages()):(e=new RegExp(this.pdfEscape16(t,this.internal.getFont()),"g"),this.pdfEscape16(this.internal.getNumberOfPages()+"",this.internal.getFont()));for(var r=1;r<=this.internal.getNumberOfPages();r++)for(var i=0;i<this.internal.pages[r].length;i++)this.internal.pages[r][i]=this.internal.pages[r][i].replace(e,n);return this},gt.API.viewerPreferences=function(t,e){var n;t=t||{},e=e||!1;var r,i,a={HideToolbar:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideMenubar:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},HideWindowUI:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},FitWindow:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},CenterWindow:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.3},DisplayDocTitle:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.4},NonFullScreenPageMode:{defaultValue:"UseNone",value:"UseNone",type:"name",explicitSet:!1,valueSet:["UseNone","UseOutlines","UseThumbs","UseOC"],pdfVersion:1.3},Direction:{defaultValue:"L2R",value:"L2R",type:"name",explicitSet:!1,valueSet:["L2R","R2L"],pdfVersion:1.3},ViewArea:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},ViewClip:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintArea:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintClip:{defaultValue:"CropBox",value:"CropBox",type:"name",explicitSet:!1,valueSet:["MediaBox","CropBox","TrimBox","BleedBox","ArtBox"],pdfVersion:1.4},PrintScaling:{defaultValue:"AppDefault",value:"AppDefault",type:"name",explicitSet:!1,valueSet:["AppDefault","None"],pdfVersion:1.6},Duplex:{defaultValue:"",value:"none",type:"name",explicitSet:!1,valueSet:["Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","none"],pdfVersion:1.7},PickTrayByPDFSize:{defaultValue:!1,value:!1,type:"boolean",explicitSet:!1,valueSet:[!0,!1],pdfVersion:1.7},PrintPageRange:{defaultValue:"",value:"",type:"array",explicitSet:!1,valueSet:null,pdfVersion:1.7},NumCopies:{defaultValue:1,value:1,type:"integer",explicitSet:!1,valueSet:null,pdfVersion:1.7}},s=Object.keys(a),u=[],c=0,l=0,f=0,h=!0;function p(t,e){var n,r=!1;for(n=0;n<t.length;n+=1)t[n]===e&&(r=!0);return r}if(void 0===this.internal.viewerpreferences&&(this.internal.viewerpreferences={},this.internal.viewerpreferences.configuration=JSON.parse(JSON.stringify(a)),this.internal.viewerpreferences.isSubscribed=!1),n=this.internal.viewerpreferences.configuration,"reset"===t||!0===e){var d=s.length;for(f=0;f<d;f+=1)n[s[f]].value=n[s[f]].defaultValue,n[s[f]].explicitSet=!1}if("object"===o(t))for(r in t)if(i=t[r],p(s,r)&&void 0!==i){if("boolean"===n[r].type&&"boolean"==typeof i)n[r].value=i;else if("name"===n[r].type&&p(n[r].valueSet,i))n[r].value=i;else if("integer"===n[r].type&&Number.isInteger(i))n[r].value=i;else if("array"===n[r].type){for(c=0;c<i.length;c+=1)if(h=!0,1===i[c].length&&"number"==typeof i[c][0])u.push(String(i[c]-1));else if(1<i[c].length){for(l=0;l<i[c].length;l+=1)"number"!=typeof i[c][l]&&(h=!1);!0===h&&u.push([i[c][0]-1,i[c][1]-1].join(" "))}n[r].value="["+u.join(" ")+"]"}else n[r].value=n[r].defaultValue;n[r].explicitSet=!0}return!1===this.internal.viewerpreferences.isSubscribed&&(this.internal.events.subscribe("putCatalog",(function(){var t,e=[];for(t in n)!0===n[t].explicitSet&&("name"===n[t].type?e.push("/"+t+" /"+n[t].value):e.push("/"+t+" "+n[t].value));0!==e.length&&this.internal.write("/ViewerPreferences\n<<\n"+e.join("\n")+"\n>>")})),this.internal.viewerpreferences.isSubscribed=!0),this.internal.viewerpreferences.configuration=n,this},ct=gt.API,ht=ft=lt="",ct.addMetadata=function(t,e){return ft=e||"http://jspdf.default.namespaceuri/",lt=t,this.internal.events.subscribe("postPutResources",(function(){if(lt){var t='<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description rdf:about="" xmlns:jspdf="'+ft+'"><jspdf:metadata>',e=unescape(encodeURIComponent('<x:xmpmeta xmlns:x="adobe:ns:meta/">')),n=unescape(encodeURIComponent(t)),r=unescape(encodeURIComponent(lt)),i=unescape(encodeURIComponent("</jspdf:metadata></rdf:Description></rdf:RDF>")),o=unescape(encodeURIComponent("</x:xmpmeta>")),a=n.length+r.length+i.length+e.length+o.length;ht=this.internal.newObject(),this.internal.write("<< /Type /Metadata /Subtype /XML /Length "+a+" >>"),this.internal.write("stream"),this.internal.write(e+n+r+i+o),this.internal.write("endstream"),this.internal.write("endobj")}else ht=""})),this.internal.events.subscribe("putCatalog",(function(){ht&&this.internal.write("/Metadata "+ht+" 0 R")})),this},function(t,e){var n=t.API,r=n.pdfEscape16=function(t,e){for(var n,r=e.metadata.Unicode.widths,i=["","0","00","000","0000"],o=[""],a=0,s=t.length;a<s;++a){if(n=e.metadata.characterToGlyph(t.charCodeAt(a)),e.metadata.glyIdsUsed.push(n),e.metadata.toUnicode[n]=t.charCodeAt(a),-1==r.indexOf(n)&&(r.push(n),r.push([parseInt(e.metadata.widthOfGlyph(n),10)])),"0"==n)return o.join("");n=n.toString(16),o.push(i[4-n.length],n)}return o.join("")},i=function(t){var e,n,r,i,o,a,s;for(o="/CIDInit /ProcSet findresource begin\n12 dict begin\nbegincmap\n/CIDSystemInfo <<\n  /Registry (Adobe)\n  /Ordering (UCS)\n  /Supplement 0\n>> def\n/CMapName /Adobe-Identity-UCS def\n/CMapType 2 def\n1 begincodespacerange\n<0000><ffff>\nendcodespacerange",r=[],a=0,s=(n=Object.keys(t).sort((function(t,e){return t-e}))).length;a<s;a++)e=n[a],100<=r.length&&(o+="\n"+r.length+" beginbfchar\n"+r.join("\n")+"\nendbfchar",r=[]),i=("0000"+t[e].toString(16)).slice(-4),e=("0000"+(+e).toString(16)).slice(-4),r.push("<"+e+"><"+i+">");return r.length&&(o+="\n"+r.length+" beginbfchar\n"+r.join("\n")+"\nendbfchar\n"),o+"endcmap\nCMapName currentdict /CMap defineresource pop\nend\nend"};n.events.push(["putFont",function(e){!function(e,n,r,o){if(e.metadata instanceof t.API.TTFFont&&"Identity-H"===e.encoding){for(var a=e.metadata.Unicode.widths,s=e.metadata.subset.encode(e.metadata.glyIdsUsed,1),u="",c=0;c<s.length;c++)u+=String.fromCharCode(s[c]);var l=r();o({data:u,addLength1:!0}),n("endobj");var f=r();o({data:i(e.metadata.toUnicode),addLength1:!0}),n("endobj");var h=r();n("<<"),n("/Type /FontDescriptor"),n("/FontName /"+e.fontName),n("/FontFile2 "+l+" 0 R"),n("/FontBBox "+t.API.PDFObject.convert(e.metadata.bbox)),n("/Flags "+e.metadata.flags),n("/StemV "+e.metadata.stemV),n("/ItalicAngle "+e.metadata.italicAngle),n("/Ascent "+e.metadata.ascender),n("/Descent "+e.metadata.decender),n("/CapHeight "+e.metadata.capHeight),n(">>"),n("endobj");var p=r();n("<<"),n("/Type /Font"),n("/BaseFont /"+e.fontName),n("/FontDescriptor "+h+" 0 R"),n("/W "+t.API.PDFObject.convert(a)),n("/CIDToGIDMap /Identity"),n("/DW 1000"),n("/Subtype /CIDFontType2"),n("/CIDSystemInfo"),n("<<"),n("/Supplement 0"),n("/Registry (Adobe)"),n("/Ordering ("+e.encoding+")"),n(">>"),n(">>"),n("endobj"),e.objectNumber=r(),n("<<"),n("/Type /Font"),n("/Subtype /Type0"),n("/ToUnicode "+f+" 0 R"),n("/BaseFont /"+e.fontName),n("/Encoding /"+e.encoding),n("/DescendantFonts ["+p+" 0 R]"),n(">>"),n("endobj"),e.isAlreadyPutted=!0}}(e.font,e.out,e.newObject,e.putStream)}]),n.events.push(["putFont",function(e){!function(e,n,r,o){if(e.metadata instanceof t.API.TTFFont&&"WinAnsiEncoding"===e.encoding){e.metadata.Unicode.widths;for(var a=e.metadata.rawData,s="",u=0;u<a.length;u++)s+=String.fromCharCode(a[u]);var c=r();o({data:s,addLength1:!0}),n("endobj");var l=r();o({data:i(e.metadata.toUnicode),addLength1:!0}),n("endobj");var f=r();for(n("<<"),n("/Descent "+e.metadata.decender),n("/CapHeight "+e.metadata.capHeight),n("/StemV "+e.metadata.stemV),n("/Type /FontDescriptor"),n("/FontFile2 "+c+" 0 R"),n("/Flags 96"),n("/FontBBox "+t.API.PDFObject.convert(e.metadata.bbox)),n("/FontName /"+e.fontName),n("/ItalicAngle "+e.metadata.italicAngle),n("/Ascent "+e.metadata.ascender),n(">>"),n("endobj"),e.objectNumber=r(),u=0;u<e.metadata.hmtx.widths.length;u++)e.metadata.hmtx.widths[u]=parseInt(e.metadata.hmtx.widths[u]*(1e3/e.metadata.head.unitsPerEm));n("<</Subtype/TrueType/Type/Font/ToUnicode "+l+" 0 R/BaseFont/"+e.fontName+"/FontDescriptor "+f+" 0 R/Encoding/"+e.encoding+" /FirstChar 29 /LastChar 255 /Widths "+t.API.PDFObject.convert(e.metadata.hmtx.widths)+">>"),n("endobj"),e.isAlreadyPutted=!0}}(e.font,e.out,e.newObject,e.putStream)}]);var o=function(t){var e,n,i=t.text||"",o=t.x,a=t.y,s=t.options||{},u=t.mutex||{},c=u.pdfEscape,l=u.activeFontKey,f=u.fonts,h=(u.activeFontSize,""),p=0,d="",g=f[n=l].encoding;if("Identity-H"!==f[n].encoding)return{text:i,x:o,y:a,options:s,mutex:u};for(d=i,n=l,"[object Array]"===Object.prototype.toString.call(i)&&(d=i[0]),p=0;p<d.length;p+=1)f[n].metadata.hasOwnProperty("cmap")&&(e=f[n].metadata.cmap.unicode.codeMap[d[p].charCodeAt(0)]),e||d[p].charCodeAt(0)<256&&f[n].metadata.hasOwnProperty("Unicode")?h+=d[p]:h+="";var m="";return parseInt(n.slice(1))<14||"WinAnsiEncoding"===g?m=function(t){for(var e="",n=0;n<t.length;n++)e+=""+t.charCodeAt(n).toString(16);return e}(c(h,n)):"Identity-H"===g&&(m=r(h,f[n])),u.isHex=!0,{text:m,x:o,y:a,options:s,mutex:u}};n.events.push(["postProcessText",function(t){var e=t.text||"",n=t.x,r=t.y,i=t.options,a=t.mutex,s=(i.lang,[]),u={text:e,x:n,y:r,options:i,mutex:a};if("[object Array]"===Object.prototype.toString.call(e)){var c=0;for(c=0;c<e.length;c+=1)"[object Array]"===Object.prototype.toString.call(e[c])&&3===e[c].length?s.push([o(Object.assign({},u,{text:e[c][0]})).text,e[c][1],e[c][2]]):s.push(o(Object.assign({},u,{text:e[c]})).text);t.text=s}else t.text=o(Object.assign({},u,{text:e})).text}])}(gt,"undefined"!=typeof self&&self||void 0!==r&&r||"undefined"!=typeof window&&window||Function("return this")()),pt=gt.API,dt=function(t){return void 0!==t&&(void 0===t.vFS&&(t.vFS={}),!0)},pt.existsFileInVFS=function(t){return!!dt(this.internal)&&void 0!==this.internal.vFS[t]},pt.addFileToVFS=function(t,e){return dt(this.internal),this.internal.vFS[t]=e,this},pt.getFileFromVFS=function(t){return dt(this.internal),void 0!==this.internal.vFS[t]?this.internal.vFS[t]:null},gt.API.addHTML=function(t,e,n,r,i){if("undefined"==typeof html2canvas&&"undefined"==typeof rasterizeHTML)throw new Error("You need either https://github.com/niklasvh/html2canvas or https://github.com/cburgmer/rasterizeHTML.js");"number"!=typeof e&&(r=e,i=n),"function"==typeof r&&(i=r,r=null),"function"!=typeof i&&(i=function(){});var o=this.internal,a=o.scaleFactor,s=o.pageSize.getWidth(),u=o.pageSize.getHeight();if((r=r||{}).onrendered=function(t){e=parseInt(e)||0,n=parseInt(n)||0;var o=r.dim||{},c=Object.assign({top:0,right:0,bottom:0,left:0,useFor:"content"},r.margin),l=o.h||Math.min(u,t.height/a),f=o.w||Math.min(s,t.width/a)-e,h=r.format||"JPEG",p=r.imageCompression||"SLOW";if(t.height>u-c.top-c.bottom&&r.pagesplit){var d=function(t,e,n,i,o){var a=document.createElement("canvas");a.height=o,a.width=i;var s=a.getContext("2d");return s.mozImageSmoothingEnabled=!1,s.webkitImageSmoothingEnabled=!1,s.msImageSmoothingEnabled=!1,s.imageSmoothingEnabled=!1,s.fillStyle=r.backgroundColor||"#ffffff",s.fillRect(0,0,i,o),s.drawImage(t,e,n,i,o,0,0,i,o),a},g=function(){for(var r,o,l=0,g=0,m={},v=!1;;){var y;if(g=0,m.top=0!==l?c.top:n,m.left=0!==l?c.left:e,v=(s-c.left-c.right)*a<t.width,"content"===c.useFor?0===l?(r=Math.min((s-c.left)*a,t.width),o=Math.min((u-c.top)*a,t.height-l)):(r=Math.min(s*a,t.width),o=Math.min(u*a,t.height-l),m.top=0):(r=Math.min((s-c.left-c.right)*a,t.width),o=Math.min((u-c.bottom-c.top)*a,t.height-l)),v)for(;;){"content"===c.useFor&&(0===g?r=Math.min((s-c.left)*a,t.width):(r=Math.min(s*a,t.width-g),m.left=0));var b=[y=d(t,g,l,r,o),m.left,m.top,y.width/a,y.height/a,h,null,p];if(this.addImage.apply(this,b),(g+=r)>=t.width)break;this.addPage()}else b=[y=d(t,0,l,r,o),m.left,m.top,y.width/a,y.height/a,h,null,p],this.addImage.apply(this,b);if((l+=o)>=t.height)break;this.addPage()}i(f,l,null,b)}.bind(this);if("CANVAS"===t.nodeName){var m=new Image;m.onload=g,m.src=t.toDataURL("image/png"),t=m}else g()}else{var v=Math.random().toString(35),y=[t,e,n,f,l,h,v,p];this.addImage.apply(this,y),i(f,l,v,y)}}.bind(this),"undefined"!=typeof html2canvas&&!r.rstz)return html2canvas(t,r);if("undefined"==typeof rasterizeHTML)return null;var c="drawDocument";return"string"==typeof t&&(c=/^http/.test(t)?"drawURL":"drawHTML"),r.width=r.width||s*a,rasterizeHTML[c](t,void 0,r).then((function(t){r.onrendered(t.image)}),(function(t){i(null,t)}))
/**
   * jsPDF fromHTML plugin. BETA stage. API subject to change. Needs browser
   * Copyright (c) 2012 Willow Systems Corporation, willow-systems.com
   *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria
   *               2014 Diego Casorran, https://github.com/diegocr
   *               2014 Daniel Husar, https://github.com/danielhusar
   *               2014 Wolfgang Gassler, https://github.com/woolfg
   *               2014 Steven Spungin, https://github.com/flamenco
   *
   * @license
   * 
   * ====================================================================
   */},function(t){var e,n,r,i,a,s,u,c,l,f,h,p,d,g,m,v,y,b,w,x;e=function(){return function(e){return t.prototype=e,new t};function t(){}}(),f=function(t){var e,n,r,i,o,a,s;for(n=0,r=t.length,e=void 0,a=i=!1;!i&&n!==r;)(e=t[n]=t[n].trimLeft())&&(i=!0),n++;for(n=r-1;r&&!a&&-1!==n;)(e=t[n]=t[n].trimRight())&&(a=!0),n--;for(o=/\s+$/g,s=!0,n=0;n!==r;)"\u2028"!=t[n]&&(e=t[n].replace(/\s+/g," "),s&&(e=e.trimLeft()),e&&(s=o.test(e)),t[n]=e),n++;return t},p=function(t){var e,n,i;for(e=void 0,n=(i=t.split(",")).shift();!e&&n;)e=r[n.trim().toLowerCase()],n=i.shift();return e},d=function(t){var e;return-1<(t="auto"===t?"0px":t).indexOf("em")&&!isNaN(Number(t.replace("em","")))&&(t=18.719*Number(t.replace("em",""))+"px"),-1<t.indexOf("pt")&&!isNaN(Number(t.replace("pt","")))&&(t=1.333*Number(t.replace("pt",""))+"px"),(e=g[t])?e:void 0!==(e={"xx-small":9,"x-small":11,small:13,medium:16,large:19,"x-large":23,"xx-large":28,auto:0}[t])||(e=parseFloat(t))?g[t]=e/16:(e=t.match(/([\d\.]+)(px)/),Array.isArray(e)&&3===e.length?g[t]=parseFloat(e[1])/16:g[t]=1)},l=function(t){var e,n,r,o,l;return l=t,o=document.defaultView&&document.defaultView.getComputedStyle?document.defaultView.getComputedStyle(l,null):l.currentStyle?l.currentStyle:l.style,n=void 0,(e={})["font-family"]=p((r=function(t){return t=t.replace(/-\D/g,(function(t){return t.charAt(1).toUpperCase()})),o[t]})("font-family"))||"times",e["font-style"]=i[r("font-style")]||"normal",e["text-align"]=a[r("text-align")]||"left","bold"===(n=s[r("font-weight")]||"normal")&&("normal"===e["font-style"]?e["font-style"]=n:e["font-style"]=n+e["font-style"]),e["font-size"]=d(r("font-size"))||1,e["line-height"]=d(r("line-height"))||1,e.display="inline"===r("display")?"inline":"block",n="block"===e.display,e["margin-top"]=n&&d(r("margin-top"))||0,e["margin-bottom"]=n&&d(r("margin-bottom"))||0,e["padding-top"]=n&&d(r("padding-top"))||0,e["padding-bottom"]=n&&d(r("padding-bottom"))||0,e["margin-left"]=n&&d(r("margin-left"))||0,e["margin-right"]=n&&d(r("margin-right"))||0,e["padding-left"]=n&&d(r("padding-left"))||0,e["padding-right"]=n&&d(r("padding-right"))||0,e["page-break-before"]=r("page-break-before")||"auto",e.float=u[r("cssFloat")]||"none",e.clear=c[r("clear")]||"none",e.color=r("color"),e},m=function(t,e,n){var r,i,o,a,s;if(o=!1,a=i=void 0,r=n["#"+t.id])if("function"==typeof r)o=r(t,e);else for(i=0,a=r.length;!o&&i!==a;)o=r[i](t,e),i++;if(r=n[t.nodeName],!o&&r)if("function"==typeof r)o=r(t,e);else for(i=0,a=r.length;!o&&i!==a;)o=r[i](t,e),i++;for(s="string"==typeof t.className?t.className.split(" "):[],i=0;i<s.length;i++)if(r=n["."+s[i]],!o&&r)if("function"==typeof r)o=r(t,e);else for(i=0,a=r.length;!o&&i!==a;)o=r[i](t,e),i++;return o},x=function(t,e){var n,r,i,o,a,s,u,c,l;for(n=[],r=[],i=0,l=t.rows[0].cells.length,u=t.clientWidth;i<l;)c=t.rows[0].cells[i],r[i]={name:c.textContent.toLowerCase().replace(/\s+/g,""),prompt:c.textContent.replace(/\r?\n/g,""),width:c.clientWidth/u*e.pdf.internal.pageSize.getWidth()},i++;for(i=1;i<t.rows.length;){for(s=t.rows[i],a={},o=0;o<s.cells.length;)a[r[o].name]=s.cells[o].textContent.replace(/\r?\n/g,""),o++;n.push(a),i++}return{rows:n,headers:r}};var N={SCRIPT:1,STYLE:1,NOSCRIPT:1,OBJECT:1,EMBED:1,SELECT:1},L=1;n=function(t,r,i){var a,s,u,c,f,h,p,d;for(s=t.childNodes,a=void 0,(f="block"===(u=l(t)).display)&&(r.setBlockBoundary(),r.setBlockStyle(u)),c=0,h=s.length;c<h;){if("object"===o(a=s[c])){if(r.executeWatchFunctions(a),1===a.nodeType&&"HEADER"===a.nodeName){var g=a,y=r.pdf.margins_doc.top;r.pdf.internal.events.subscribe("addPage",(function(t){r.y=y,n(g,r,i),r.pdf.margins_doc.top=r.y+10,r.y+=10}),!1)}if(8===a.nodeType&&"#comment"===a.nodeName)~a.textContent.indexOf("ADD_PAGE")&&(r.pdf.addPage(),r.y=r.pdf.margins_doc.top);else if(1!==a.nodeType||N[a.nodeName])if(3===a.nodeType){var b=a.nodeValue;if(a.nodeValue&&"LI"===a.parentNode.nodeName)if("OL"===a.parentNode.parentNode.nodeName)b=L+++". "+b;else{var w=u["font-size"],A=(3-.75*w)*r.pdf.internal.scaleFactor,S=.75*w*r.pdf.internal.scaleFactor,_=1.74*w/r.pdf.internal.scaleFactor;d=function(t,e){this.pdf.circle(t+A,e+S,_,"FD")}}16&a.ownerDocument.body.compareDocumentPosition(a)&&r.addText(b,u)}else"string"==typeof a&&r.addText(a,u);else{var C;if("IMG"===a.nodeName){var k=a.getAttribute("src");C=v[r.pdf.sHashCode(k)||k]}if(C){r.pdf.internal.pageSize.getHeight()-r.pdf.margins_doc.bottom<r.y+a.height&&r.y>r.pdf.margins_doc.top&&(r.pdf.addPage(),r.y=r.pdf.margins_doc.top,r.executeWatchFunctions(a));var P=l(a),F=r.x,T=12/r.pdf.internal.scaleFactor,j=(P["margin-left"]+P["padding-left"])*T,I=(P["margin-right"]+P["padding-right"])*T,E=(P["margin-top"]+P["padding-top"])*T,B=(P["margin-bottom"]+P["padding-bottom"])*T;void 0!==P.float&&"right"===P.float?F+=r.settings.width-a.width-I:F+=j,r.pdf.addImage(C,F,r.y+E,a.width,a.height),C=void 0,"right"===P.float||"left"===P.float?(r.watchFunctions.push(function(t,e,n,i){return r.y>=e?(r.x+=t,r.settings.width+=n,!0):!!(i&&1===i.nodeType&&!N[i.nodeName]&&r.x+i.width>r.pdf.margins_doc.left+r.pdf.margins_doc.width)&&(r.x+=t,r.y=e,r.settings.width+=n,!0)}.bind(this,"left"===P.float?-a.width-j-I:0,r.y+a.height+E+B,a.width)),r.watchFunctions.push(function(t,e,n){return!(r.y<t&&e===r.pdf.internal.getNumberOfPages())||1===n.nodeType&&"both"===l(n).clear&&(r.y=t,!0)}.bind(this,r.y+a.height,r.pdf.internal.getNumberOfPages())),r.settings.width-=a.width+j+I,"left"===P.float&&(r.x+=a.width+j+I)):r.y+=a.height+E+B}else if("TABLE"===a.nodeName)p=x(a,r),r.y+=10,r.pdf.table(r.x,r.y,p.rows,p.headers,{autoSize:!1,printHeaders:i.printHeaders,margins:r.pdf.margins_doc,css:l(a)}),r.y=r.pdf.lastCellPos.y+r.pdf.lastCellPos.h+20;else if("OL"===a.nodeName||"UL"===a.nodeName)L=1,m(a,r,i)||n(a,r,i),r.y+=10;else if("LI"===a.nodeName){var O=r.x;r.x+=20/r.pdf.internal.scaleFactor,r.y+=3,m(a,r,i)||n(a,r,i),r.x=O}else"BR"===a.nodeName?(r.y+=u["font-size"]*r.pdf.internal.scaleFactor,r.addText("\u2028",e(u))):m(a,r,i)||n(a,r,i)}}c++}if(i.outY=r.y,f)return r.setBlockBoundary(d)},v={},y=function(t,e,n,r){var i,o=t.getElementsByTagName("img"),a=o.length,s=0;function u(){e.pdf.internal.events.publish("imagesLoaded"),r(i)}function c(t,n,r){if(t){var o=new Image;i=++s,o.crossOrigin="",o.onerror=o.onload=function(){if(o.complete&&(0===o.src.indexOf("data:image/")&&(o.width=n||o.width||0,o.height=r||o.height||0),o.width+o.height)){var i=e.pdf.sHashCode(t)||t;v[i]=v[i]||o}--s||u()},o.src=t}}for(;a--;)c(o[a].getAttribute("src"),o[a].width,o[a].height);return s||u()},b=function(t,e,r){var i=t.getElementsByTagName("footer");if(0<i.length){i=i[0];var o=e.pdf.internal.write,a=e.y;e.pdf.internal.write=function(){},n(i,e,r);var s=Math.ceil(e.y-a)+5;e.y=a,e.pdf.internal.write=o,e.pdf.margins_doc.bottom+=s;for(var u=function(t){var o=void 0!==t?t.pageNumber:1,a=e.y;e.y=e.pdf.internal.pageSize.getHeight()-e.pdf.margins_doc.bottom,e.pdf.margins_doc.bottom-=s;for(var u=i.getElementsByTagName("span"),c=0;c<u.length;++c)-1<(" "+u[c].className+" ").replace(/[\n\t]/g," ").indexOf(" pageCounter ")&&(u[c].innerHTML=o),-1<(" "+u[c].className+" ").replace(/[\n\t]/g," ").indexOf(" totalPages ")&&(u[c].innerHTML="###jsPDFVarTotalPages###");n(i,e,r),e.pdf.margins_doc.bottom+=s,e.y=a},c=i.getElementsByTagName("span"),l=0;l<c.length;++l)-1<(" "+c[l].className+" ").replace(/[\n\t]/g," ").indexOf(" totalPages ")&&e.pdf.internal.events.subscribe("htmlRenderingFinished",e.pdf.putTotalPages.bind(e.pdf,"###jsPDFVarTotalPages###"),!0);e.pdf.internal.events.subscribe("addPage",u,!1),u(),N.FOOTER=1}},w=function(t,e,r,i,o,a){if(!e)return!1;var s,u,c,l;"string"==typeof e||e.parentNode||(e=""+e.innerHTML),"string"==typeof e&&(s=e.replace(/<\/?script[^>]*?>/gi,""),l="jsPDFhtmlText"+Date.now().toString()+(1e3*Math.random()).toFixed(0),(c=document.createElement("div")).style.cssText="position: absolute !important;clip: rect(1px 1px 1px 1px); /* IE6, IE7 */clip: rect(1px, 1px, 1px, 1px);padding:0 !important;border:0 !important;height: 1px !important;width: 1px !important; top:auto;left:-100px;overflow: hidden;",c.innerHTML='<iframe style="height:1px;width:1px" name="'+l+'" />',document.body.appendChild(c),(u=window.frames[l]).document.open(),u.document.writeln(s),u.document.close(),e=u.document.body);var f,p=new h(t,r,i,o);return y.call(this,e,p,o.elementHandlers,(function(t){b(e,p,o.elementHandlers),n(e,p,o.elementHandlers),p.pdf.internal.events.publish("htmlRenderingFinished"),f=p.dispose(),"function"==typeof a?a(f):t&&console.error("jsPDF Warning: rendering issues? provide a callback to fromHTML!")})),f||{x:p.x,y:p.y}},(h=function(t,e,n,r){return this.pdf=t,this.x=e,this.y=n,this.settings=r,this.watchFunctions=[],this.init(),this}).prototype.init=function(){return this.paragraph={text:[],style:[]},this.pdf.internal.write("q")},h.prototype.dispose=function(){return this.pdf.internal.write("Q"),{x:this.x,y:this.y,ready:!0}},h.prototype.executeWatchFunctions=function(t){var e=!1,n=[];if(0<this.watchFunctions.length){for(var r=0;r<this.watchFunctions.length;++r)!0===this.watchFunctions[r](t)?e=!0:n.push(this.watchFunctions[r]);this.watchFunctions=n}return e},h.prototype.splitFragmentsIntoLines=function(t,n){var r,i,o,a,s,u,c,l,f,h,p,d,g,m;for(h=this.pdf.internal.scaleFactor,a={},u=c=l=m=s=o=f=i=void 0,d=[p=[]],r=0,g=this.settings.width;t.length;)if(s=t.shift(),m=n.shift(),s)if((o=a[(i=m["font-family"])+(f=m["font-style"])])||(o=this.pdf.internal.getFont(i,f).metadata.Unicode,a[i+f]=o),l={widths:o.widths,kerning:o.kerning,fontSize:12*m["font-size"],textIndent:r},c=this.pdf.getStringUnitWidth(s,l)*l.fontSize/h,"\u2028"==s)p=[],d.push(p);else if(g<r+c){for(u=this.pdf.splitTextToSize(s,g,l),p.push([u.shift(),m]);u.length;)p=[[u.shift(),m]],d.push(p);r=this.pdf.getStringUnitWidth(p[0][0],l)*l.fontSize/h}else p.push([s,m]),r+=c;if(void 0!==m["text-align"]&&("center"===m["text-align"]||"right"===m["text-align"]||"justify"===m["text-align"]))for(var v=0;v<d.length;++v){var y=this.pdf.getStringUnitWidth(d[v][0][0],l)*l.fontSize/h;0<v&&(d[v][0][1]=e(d[v][0][1]));var b=g-y;if("right"===m["text-align"])d[v][0][1]["margin-left"]=b;else if("center"===m["text-align"])d[v][0][1]["margin-left"]=b/2;else if("justify"===m["text-align"]){var w=d[v][0][0].split(" ").length-1;d[v][0][1]["word-spacing"]=b/w,v===d.length-1&&(d[v][0][1]["word-spacing"]=0)}}return d},h.prototype.RenderTextFragment=function(t,e){var n,r;r=0,this.pdf.internal.pageSize.getHeight()-this.pdf.margins_doc.bottom<this.y+this.pdf.internal.getFontSize()&&(this.pdf.internal.write("ET","Q"),this.pdf.addPage(),this.y=this.pdf.margins_doc.top,this.pdf.internal.write("q","BT",this.getPdfColor(e.color),this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td"),r=Math.max(r,e["line-height"],e["font-size"]),this.pdf.internal.write(0,(-12*r).toFixed(2),"Td")),n=this.pdf.internal.getFont(e["font-family"],e["font-style"]);var i=this.getPdfColor(e.color);i!==this.lastTextColor&&(this.pdf.internal.write(i),this.lastTextColor=i),void 0!==e["word-spacing"]&&0<e["word-spacing"]&&this.pdf.internal.write(e["word-spacing"].toFixed(2),"Tw"),this.pdf.internal.write("/"+n.id,(12*e["font-size"]).toFixed(2),"Tf","("+this.pdf.internal.pdfEscape(t)+") Tj"),void 0!==e["word-spacing"]&&this.pdf.internal.write(0,"Tw")},h.prototype.getPdfColor=function(t){var e,n,r,i=/rgb\s*\(\s*(\d+),\s*(\d+),\s*(\d+\s*)\)/.exec(t);if(null!=i)e=parseInt(i[1]),n=parseInt(i[2]),r=parseInt(i[3]);else{if("string"==typeof t&&"#"!=t.charAt(0)){var o=new RGBColor(t);t=o.ok?o.toHex():"#000000"}e=t.substring(1,3),e=parseInt(e,16),n=t.substring(3,5),n=parseInt(n,16),r=t.substring(5,7),r=parseInt(r,16)}if("string"==typeof e&&/^#[0-9A-Fa-f]{6}$/.test(e)){var a=parseInt(e.substr(1),16);e=a>>16&255,n=a>>8&255,r=255&a}var s=this.f3;return 0===e&&0===n&&0===r||void 0===n?s(e/255)+" g":[s(e/255),s(n/255),s(r/255),"rg"].join(" ")},h.prototype.f3=function(t){return t.toFixed(3)},h.prototype.renderParagraph=function(t){var e,n,r,i,o,a,s,u,c,l,h,p,d;if(r=f(this.paragraph.text),p=this.paragraph.style,e=this.paragraph.blockstyle,this.paragraph.priorblockstyle,this.paragraph={text:[],style:[],blockstyle:{},priorblockstyle:e},r.join("").trim()){s=this.splitFragmentsIntoLines(r,p),u=a=void 0,n=12/this.pdf.internal.scaleFactor,this.priorMarginBottom=this.priorMarginBottom||0,h=(Math.max((e["margin-top"]||0)-this.priorMarginBottom,0)+(e["padding-top"]||0))*n,l=((e["margin-bottom"]||0)+(e["padding-bottom"]||0))*n,this.priorMarginBottom=e["margin-bottom"]||0,"always"===e["page-break-before"]&&(this.pdf.addPage(),this.y=0,h=((e["margin-top"]||0)+(e["padding-top"]||0))*n),c=this.pdf.internal.write,o=i=void 0,this.y+=h,c("q","BT 0 g",this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td");for(var g=0;s.length;){for(i=u=0,o=(a=s.shift()).length;i!==o;)a[i][0].trim()&&(u=Math.max(u,a[i][1]["line-height"],a[i][1]["font-size"]),d=7*a[i][1]["font-size"]),i++;var m=0,v=0;for(void 0!==a[0][1]["margin-left"]&&0<a[0][1]["margin-left"]&&(m=(v=this.pdf.internal.getCoordinateString(a[0][1]["margin-left"]))-g,g=v),c(m+Math.max(e["margin-left"]||0,0)*n,(-12*u).toFixed(2),"Td"),i=0,o=a.length;i!==o;)a[i][0]&&this.RenderTextFragment(a[i][0],a[i][1]),i++;if(this.y+=u*n,this.executeWatchFunctions(a[0][1])&&0<s.length){var y=[],b=[];s.forEach((function(t){for(var e=0,n=t.length;e!==n;)t[e][0]&&(y.push(t[e][0]+" "),b.push(t[e][1])),++e})),s=this.splitFragmentsIntoLines(f(y),b),c("ET","Q"),c("q","BT 0 g",this.pdf.internal.getCoordinateString(this.x),this.pdf.internal.getVerticalCoordinateString(this.y),"Td")}}return t&&"function"==typeof t&&t.call(this,this.x-9,this.y-d/2),c("ET","Q"),this.y+=l}},h.prototype.setBlockBoundary=function(t){return this.renderParagraph(t)},h.prototype.setBlockStyle=function(t){return this.paragraph.blockstyle=t},h.prototype.addText=function(t,e){return this.paragraph.text.push(t),this.paragraph.style.push(e)},r={helvetica:"helvetica","sans-serif":"helvetica","times new roman":"times",serif:"times",times:"times",monospace:"courier",courier:"courier"},s={100:"normal",200:"normal",300:"normal",400:"normal",500:"bold",600:"bold",700:"bold",800:"bold",900:"bold",normal:"normal",bold:"bold",bolder:"bold",lighter:"normal"},i={normal:"normal",italic:"italic",oblique:"italic"},a={left:"left",right:"right",center:"center",justify:"justify"},u={none:"none",right:"right",left:"left"},c={none:"none",both:"both"},g={normal:1},t.fromHTML=function(t,e,n,r,i,o){return this.margins_doc=o||{top:0,bottom:0},r||(r={}),r.elementHandlers||(r.elementHandlers={}),w(this,t,isNaN(e)?4:e,isNaN(n)?4:n,r,i)}}(gt.API),gt.API,("undefined"!=typeof window&&window||void 0!==r&&r).html2pdf=function(t,e,n){var r=e.canvas;if(r){var i,o;if((r.pdf=e).annotations={_nameMap:[],createAnnotation:function(t,n){var r,i=e.context2d._wrapX(n.left),o=e.context2d._wrapY(n.top),a=(e.context2d._page(n.top),t.indexOf("#"));r=0<=a?{name:t.substring(a+1)}:{url:t},e.link(i,o,n.right-n.left,n.bottom-n.top,r)},setName:function(t,n){var r=e.context2d._wrapX(n.left),i=e.context2d._wrapY(n.top),o=e.context2d._page(n.top);this._nameMap[t]={page:o,x:r,y:i}}},r.annotations=e.annotations,e.context2d._pageBreakAt=function(t){this.pageBreaks.push(t)},e.context2d._gotoPage=function(t){for(;e.internal.getNumberOfPages()<t;)e.addPage();e.setPage(t)},"string"==typeof t){t=t.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"");var a,s,u=document.createElement("iframe");document.body.appendChild(u),null!=(a=u.contentDocument)&&null!=a||(a=u.contentWindow.document),a.open(),a.write(t),a.close(),i=a.body,s=a.body||{},t=a.documentElement||{},o=Math.max(s.scrollHeight,s.offsetHeight,t.clientHeight,t.scrollHeight,t.offsetHeight)}else s=(i=t).body||{},o=Math.max(s.scrollHeight,s.offsetHeight,t.clientHeight,t.scrollHeight,t.offsetHeight);var c={async:!0,allowTaint:!0,backgroundColor:"#ffffff",canvas:r,imageTimeout:15e3,logging:!0,proxy:null,removeContainer:!0,foreignObjectRendering:!1,useCORS:!1,windowHeight:o=e.internal.pageSize.getHeight(),scrollY:o};e.context2d.pageWrapYEnabled=!0,e.context2d.pageWrapY=e.internal.pageSize.getHeight(),html2canvas(i,c).then((function(t){n&&(u&&u.parentElement.removeChild(u),n(e))}))}else alert("jsPDF canvas plugin not installed")},window.tmp=html2pdf,function(t){var e=t.BlobBuilder||t.WebKitBlobBuilder||t.MSBlobBuilder||t.MozBlobBuilder;t.URL=t.URL||t.webkitURL||function(t,e){return(e=document.createElement("a")).href=t,e};var n=t.Blob,r=URL.createObjectURL,i=URL.revokeObjectURL,o=t.Symbol&&t.Symbol.toStringTag,a=!1,s=!1,u=!!t.ArrayBuffer,c=e&&e.prototype.append&&e.prototype.getBlob;try{a=2===new Blob(["Ã¤"]).size,s=2===new Blob([new Uint8Array([1,2])]).size}catch(a){}function l(t){return t.map((function(t){if(t.buffer instanceof ArrayBuffer){var e=t.buffer;if(t.byteLength!==e.byteLength){var n=new Uint8Array(t.byteLength);n.set(new Uint8Array(e,t.byteOffset,t.byteLength)),e=n.buffer}return e}return t}))}function f(t,n){n=n||{};var r=new e;return l(t).forEach((function(t){r.append(t)})),n.type?r.getBlob(n.type):r.getBlob()}function h(t,e){return new n(l(t),e||{})}if(t.Blob&&(f.prototype=Blob.prototype,h.prototype=Blob.prototype),o)try{File.prototype[o]="File",Blob.prototype[o]="Blob",FileReader.prototype[o]="FileReader"}catch(a){}function p(){var e=!!t.ActiveXObject||"-ms-scroll-limit"in document.documentElement.style&&"-ms-ime-align"in document.documentElement.style,n=t.XMLHttpRequest&&t.XMLHttpRequest.prototype.send;e&&n&&(XMLHttpRequest.prototype.send=function(t){t instanceof Blob&&this.setRequestHeader("Content-Type",t.type),n.call(this,t)});try{new File([],"")}catch(e){try{var r=new Function('class File extends Blob {constructor(chunks, name, opts) {opts = opts || {};super(chunks, opts || {});this.name = name;this.lastModifiedDate = opts.lastModified ? new Date(opts.lastModified) : new Date;this.lastModified = +this.lastModifiedDate;}};return new File([], ""), File')();t.File=r}catch(e){r=function(t,e,n){var r=new Blob(t,n),i=n&&void 0!==n.lastModified?new Date(n.lastModified):new Date;return r.name=e,r.lastModifiedDate=i,r.lastModified=+i,r.toString=function(){return"[object File]"},o&&(r[o]="File"),r},t.File=r}}}a?(p(),t.Blob=s?t.Blob:h):c?(p(),t.Blob=f):function(){function e(t){for(var e=[],n=0;n<t.length;n++){var r=t.charCodeAt(n);r<128?e.push(r):r<2048?e.push(192|r>>6,128|63&r):r<55296||57344<=r?e.push(224|r>>12,128|r>>6&63,128|63&r):(n++,r=65536+((1023&r)<<10|1023&t.charCodeAt(n)),e.push(240|r>>18,128|r>>12&63,128|r>>6&63,128|63&r))}return e}function n(t){var e,n,r,i,o,a;for(e="",r=t.length,n=0;n<r;)switch((i=t[n++])>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:e+=String.fromCharCode(i);break;case 12:case 13:o=t[n++],e+=String.fromCharCode((31&i)<<6|63&o);break;case 14:o=t[n++],a=t[n++],e+=String.fromCharCode((15&i)<<12|(63&o)<<6|(63&a)<<0)}return e}function o(t){for(var e=new Array(t.byteLength),n=new Uint8Array(t),r=e.length;r--;)e[r]=n[r];return e}function a(t){for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n=[],r=0;r<t.length;r+=3){var i=t[r],o=r+1<t.length,a=o?t[r+1]:0,s=r+2<t.length,u=s?t[r+2]:0,c=i>>2,l=(3&i)<<4|a>>4,f=(15&a)<<2|u>>6,h=63&u;s||(h=64,o||(f=64)),n.push(e[c],e[l],e[f],e[h])}return n.join("")}var s=Object.create||function(t){function e(){}return e.prototype=t,new e};if(u)var c=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],l=ArrayBuffer.isView||function(t){return t&&-1<c.indexOf(Object.prototype.toString.call(t))};function f(t,n){for(var r=0,i=(t=t||[]).length;r<i;r++){var a=t[r];a instanceof f?t[r]=a._buffer:"string"==typeof a?t[r]=e(a):u&&(ArrayBuffer.prototype.isPrototypeOf(a)||l(a))?t[r]=o(a):u&&(s=a)&&DataView.prototype.isPrototypeOf(s)?t[r]=o(a.buffer):t[r]=e(String(a))}var s;this._buffer=[].concat.apply([],t),this.size=this._buffer.length,this.type=n&&n.type||""}function h(t,e,n){var r=f.call(this,t,n=n||{})||this;return r.name=e,r.lastModifiedDate=n.lastModified?new Date(n.lastModified):new Date,r.lastModified=+r.lastModifiedDate,r}if(f.prototype.slice=function(t,e,n){return new f([this._buffer.slice(t||0,e||this._buffer.length)],{type:n})},f.prototype.toString=function(){return"[object Blob]"},(h.prototype=s(f.prototype)).constructor=h,Object.setPrototypeOf)Object.setPrototypeOf(h,f);else try{h.__proto__=f}catch(s){}function p(){if(!(this instanceof p))throw new TypeError("Failed to construct 'FileReader': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");var t=document.createDocumentFragment();this.addEventListener=t.addEventListener,this.dispatchEvent=function(e){var n=this["on"+e.type];"function"==typeof n&&n(e),t.dispatchEvent(e)},this.removeEventListener=t.removeEventListener}function d(t,e,n){if(!(e instanceof f))throw new TypeError("Failed to execute '"+n+"' on 'FileReader': parameter 1 is not of type 'Blob'.");t.result="",setTimeout((function(){this.readyState=p.LOADING,t.dispatchEvent(new Event("load")),t.dispatchEvent(new Event("loadend"))}))}h.prototype.toString=function(){return"[object File]"},p.EMPTY=0,p.LOADING=1,p.DONE=2,p.prototype.error=null,p.prototype.onabort=null,p.prototype.onerror=null,p.prototype.onload=null,p.prototype.onloadend=null,p.prototype.onloadstart=null,p.prototype.onprogress=null,p.prototype.readAsDataURL=function(t){d(this,t,"readAsDataURL"),this.result="data:"+t.type+";base64,"+a(t._buffer)},p.prototype.readAsText=function(t){d(this,t,"readAsText"),this.result=n(t._buffer)},p.prototype.readAsArrayBuffer=function(t){d(this,t,"readAsText"),this.result=t._buffer.slice()},p.prototype.abort=function(){},URL.createObjectURL=function(t){return t instanceof f?"data:"+t.type+";base64,"+a(t._buffer):r.call(URL,t)},URL.revokeObjectURL=function(t){i&&i.call(URL,t)};var g=t.XMLHttpRequest&&t.XMLHttpRequest.prototype.send;g&&(XMLHttpRequest.prototype.send=function(t){t instanceof f?(this.setRequestHeader("Content-Type",t.type),g.call(this,n(t._buffer))):g.call(this,t)}),t.FileReader=p,t.File=h,t.Blob=f}()}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")());var mt,vt,yt,bt,wt,xt,Nt,Lt,At,St,_t,Ct,kt,Pt,Ft,Tt=Tt||function(t){if(!(void 0===t||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var e=t.document,n=function(){return t.URL||t.webkitURL||t},r=e.createElementNS("http://www.w3.org/1999/xhtml","a"),i="download"in r,o=/constructor/i.test(t.HTMLElement)||t.safari,a=/CriOS\/[\d]+/.test(navigator.userAgent),s=t.setImmediate||t.setTimeout,u=function(t){s((function(){throw t}),0)},c=function(t){setTimeout((function(){"string"==typeof t?n().revokeObjectURL(t):t.remove()}),4e4)},l=function(t){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob([String.fromCharCode(65279),t],{type:t.type}):t},f=function(e,f,h){h||(e=l(e));var p,d=this,g="application/octet-stream"===e.type,m=function(){!function(t,e,n){for(var r=(e=[].concat(e)).length;r--;){var i=t["on"+e[r]];if("function"==typeof i)try{i.call(t,t)}catch(t){u(t)}}}(d,"writestart progress write writeend".split(" "))};if(d.readyState=d.INIT,i)return p=n().createObjectURL(e),void s((function(){var t,e;r.href=p,r.download=f,t=r,e=new MouseEvent("click"),t.dispatchEvent(e),m(),c(p),d.readyState=d.DONE}),0);!function(){if((a||g&&o)&&t.FileReader){var r=new FileReader;return r.onloadend=function(){var e=a?r.result:r.result.replace(/^data:[^;]*;/,"data:attachment/file;");t.open(e,"_blank")||(t.location.href=e),e=void 0,d.readyState=d.DONE,m()},r.readAsDataURL(e),d.readyState=d.INIT}p||(p=n().createObjectURL(e)),g?t.location.href=p:t.open(p,"_blank")||(t.location.href=p),d.readyState=d.DONE,m(),c(p)}()},h=f.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(t,e,n){return e=e||t.name||"download",n||(t=l(t)),navigator.msSaveOrOpenBlob(t,e)}:(h.abort=function(){},h.readyState=h.INIT=0,h.WRITING=1,h.DONE=2,h.error=h.onwritestart=h.onprogress=h.onwrite=h.onabort=h.onerror=h.onwriteend=null,function(t,e,n){return new f(t,e||t.name||"download",n)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0);function jt(t){var e=0;if(71!==t[e++]||73!==t[e++]||70!==t[e++]||56!==t[e++]||56!=(t[e++]+1&253)||97!==t[e++])throw"Invalid GIF 87a/89a header.";var n=t[e++]|t[e++]<<8,r=t[e++]|t[e++]<<8,i=t[e++],o=i>>7,a=1<<1+(7&i);t[e++],t[e++];var s=null;o&&(s=e,e+=3*a);var u=!0,c=[],l=0,f=null,h=0,p=null;for(this.width=n,this.height=r;u&&e<t.length;)switch(t[e++]){case 33:switch(t[e++]){case 255:if(11!==t[e]||78==t[e+1]&&69==t[e+2]&&84==t[e+3]&&83==t[e+4]&&67==t[e+5]&&65==t[e+6]&&80==t[e+7]&&69==t[e+8]&&50==t[e+9]&&46==t[e+10]&&48==t[e+11]&&3==t[e+12]&&1==t[e+13]&&0==t[e+16])e+=14,p=t[e++]|t[e++]<<8,e++;else for(e+=12;0!==(A=t[e++]);)e+=A;break;case 249:if(4!==t[e++]||0!==t[e+4])throw"Invalid graphics extension block.";var d=t[e++];l=t[e++]|t[e++]<<8,f=t[e++],0==(1&d)&&(f=null),h=d>>2&7,e++;break;case 254:for(;0!==(A=t[e++]);)e+=A;break;default:throw"Unknown graphic control label: 0x"+t[e-1].toString(16)}break;case 44:var g=t[e++]|t[e++]<<8,m=t[e++]|t[e++]<<8,v=t[e++]|t[e++]<<8,y=t[e++]|t[e++]<<8,b=t[e++],w=b>>6&1,x=s,N=!1;b>>7&&(N=!0,x=e,e+=3*(1<<1+(7&b)));var L=e;for(e++;;){var A;if(0===(A=t[e++]))break;e+=A}c.push({x:g,y:m,width:v,height:y,has_local_palette:N,palette_offset:x,data_offset:L,data_length:e-L,transparent_index:f,interlaced:!!w,delay:l,disposal:h});break;case 59:u=!1;break;default:throw"Unknown gif block: 0x"+t[e-1].toString(16)}this.numFrames=function(){return c.length},this.loopCount=function(){return p},this.frameInfo=function(t){if(t<0||t>=c.length)throw"Frame index out of range.";return c[t]},this.decodeAndBlitFrameBGRA=function(e,r){var i=this.frameInfo(e),o=i.width*i.height,a=new Uint8Array(o);It(t,i.data_offset,a,o);var s=i.palette_offset,u=i.transparent_index;null===u&&(u=256);var c=i.width,l=n-c,f=c,h=4*(i.y*n+i.x),p=4*((i.y+i.height)*n+i.x),d=h,g=4*l;!0===i.interlaced&&(g+=4*(c+l)*7);for(var m=8,v=0,y=a.length;v<y;++v){var b=a[v];if(0===f&&(f=c,p<=(d+=g)&&(g=l+4*(c+l)*(m-1),d=h+(c+l)*(m<<1),m>>=1)),b===u)d+=4;else{var w=t[s+3*b],x=t[s+3*b+1],N=t[s+3*b+2];r[d++]=N,r[d++]=x,r[d++]=w,r[d++]=255}--f}},this.decodeAndBlitFrameRGBA=function(e,r){var i=this.frameInfo(e),o=i.width*i.height,a=new Uint8Array(o);It(t,i.data_offset,a,o);var s=i.palette_offset,u=i.transparent_index;null===u&&(u=256);var c=i.width,l=n-c,f=c,h=4*(i.y*n+i.x),p=4*((i.y+i.height)*n+i.x),d=h,g=4*l;!0===i.interlaced&&(g+=4*(c+l)*7);for(var m=8,v=0,y=a.length;v<y;++v){var b=a[v];if(0===f&&(f=c,p<=(d+=g)&&(g=l+4*(c+l)*(m-1),d=h+(c+l)*(m<<1),m>>=1)),b===u)d+=4;else{var w=t[s+3*b],x=t[s+3*b+1],N=t[s+3*b+2];r[d++]=w,r[d++]=x,r[d++]=N,r[d++]=255}--f}}}function It(t,e,n,r){for(var i=t[e++],o=1<<i,a=o+1,s=a+1,u=i+1,c=(1<<u)-1,l=0,f=0,h=0,p=t[e++],d=new Int32Array(4096),g=null;;){for(;l<16&&0!==p;)f|=t[e++]<<l,l+=8,1===p?p=t[e++]:--p;if(l<u)break;var m=f&c;if(f>>=u,l-=u,m!==o){if(m===a)break;for(var v=m<s?m:g,y=0,b=v;o<b;)b=d[b]>>8,++y;var w=b;if(r<h+y+(v!==m?1:0))return void console.log("Warning, gif stream longer than expected.");n[h++]=w;var x=h+=y;for(v!==m&&(n[h++]=w),b=v;y--;)b=d[b],n[--x]=255&b,b>>=8;null!==g&&s<4096&&(d[s++]=g<<8|w,c+1<=s&&u<12&&(++u,c=c<<1|1)),g=m}else s=a+1,c=(1<<(u=i+1))-1,g=null}return h!==r&&console.log("Warning, gif stream shorter than expected."),n}try{e.GifWriter=function(t,e,n,r){var i=0,o=void 0===(r=void 0===r?{}:r).loop?null:r.loop,a=void 0===r.palette?null:r.palette;if(e<=0||n<=0||65535<e||65535<n)throw"Width/Height invalid.";function s(t){var e=t.length;if(e<2||256<e||e&e-1)throw"Invalid code/color length, must be power of 2 and 2 .. 256.";return e}t[i++]=71,t[i++]=73,t[i++]=70,t[i++]=56,t[i++]=57,t[i++]=97;var u=0,c=0;if(null!==a){for(var l=s(a);l>>=1;)++u;if(l=1<<u,--u,void 0!==r.background){if(l<=(c=r.background))throw"Background index out of range.";if(0===c)throw"Background index explicitly passed as 0."}}if(t[i++]=255&e,t[i++]=e>>8&255,t[i++]=255&n,t[i++]=n>>8&255,t[i++]=(null!==a?128:0)|u,t[i++]=c,t[i++]=0,null!==a)for(var f=0,h=a.length;f<h;++f){var p=a[f];t[i++]=p>>16&255,t[i++]=p>>8&255,t[i++]=255&p}if(null!==o){if(o<0||65535<o)throw"Loop count invalid.";t[i++]=33,t[i++]=255,t[i++]=11,t[i++]=78,t[i++]=69,t[i++]=84,t[i++]=83,t[i++]=67,t[i++]=65,t[i++]=80,t[i++]=69,t[i++]=50,t[i++]=46,t[i++]=48,t[i++]=3,t[i++]=1,t[i++]=255&o,t[i++]=o>>8&255,t[i++]=0}var d=!1;this.addFrame=function(e,n,r,o,u,c){if(!0===d&&(--i,d=!1),c=void 0===c?{}:c,e<0||n<0||65535<e||65535<n)throw"x/y invalid.";if(r<=0||o<=0||65535<r||65535<o)throw"Width/Height invalid.";if(u.length<r*o)throw"Not enough pixels for the frame size.";var l=!0,f=c.palette;if(null==f&&(l=!1,f=a),null==f)throw"Must supply either a local or global palette.";for(var h=s(f),p=0;h>>=1;)++p;h=1<<p;var g=void 0===c.delay?0:c.delay,m=void 0===c.disposal?0:c.disposal;if(m<0||3<m)throw"Disposal out of range.";var v=!1,y=0;if(void 0!==c.transparent&&null!==c.transparent&&(v=!0,(y=c.transparent)<0||h<=y))throw"Transparent color index.";if((0!==m||v||0!==g)&&(t[i++]=33,t[i++]=249,t[i++]=4,t[i++]=m<<2|(!0===v?1:0),t[i++]=255&g,t[i++]=g>>8&255,t[i++]=y,t[i++]=0),t[i++]=44,t[i++]=255&e,t[i++]=e>>8&255,t[i++]=255&n,t[i++]=n>>8&255,t[i++]=255&r,t[i++]=r>>8&255,t[i++]=255&o,t[i++]=o>>8&255,t[i++]=!0===l?128|p-1:0,!0===l)for(var b=0,w=f.length;b<w;++b){var x=f[b];t[i++]=x>>16&255,t[i++]=x>>8&255,t[i++]=255&x}i=function(t,e,n,r){t[e++]=n;var i=e++,o=1<<n,a=o-1,s=o+1,u=s+1,c=n+1,l=0,f=0;function h(n){for(;n<=l;)t[e++]=255&f,f>>=8,l-=8,e===i+256&&(t[i]=255,i=e++)}function p(t){f|=t<<l,l+=c,h(8)}var d=r[0]&a,g={};p(o);for(var m=1,v=r.length;m<v;++m){var y=r[m]&a,b=d<<8|y,w=g[b];if(void 0===w){for(f|=d<<l,l+=c;8<=l;)t[e++]=255&f,f>>=8,l-=8,e===i+256&&(t[i]=255,i=e++);4096===u?(p(o),u=s+1,c=n+1,g={}):(1<<c<=u&&++c,g[b]=u++),d=y}else d=w}return p(d),p(s),h(1),i+1===e?t[i]=0:(t[i]=e-i-1,t[e++]=0),e}(t,i,p<2?2:p,u)},this.end=function(){return!1===d&&(t[i++]=59,d=!0),i}},e.GifReader=jt}catch(s){}function Et(t){var e,n,r,i,o,a=Math.floor,s=new Array(64),u=new Array(64),c=new Array(64),l=new Array(64),f=new Array(65535),h=new Array(65535),p=new Array(64),d=new Array(64),g=[],m=0,v=7,y=new Array(64),b=new Array(64),w=new Array(64),x=new Array(256),N=new Array(2048),L=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],A=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0],S=[0,1,2,3,4,5,6,7,8,9,10,11],_=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125],C=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250],k=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0],P=[0,1,2,3,4,5,6,7,8,9,10,11],F=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119],T=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function j(t,e){for(var n=0,r=0,i=new Array,o=1;o<=16;o++){for(var a=1;a<=t[o];a++)i[e[r]]=[],i[e[r]][0]=n,i[e[r]][1]=o,r++,n++;n*=2}return i}function I(t){for(var e=t[0],n=t[1]-1;0<=n;)e&1<<n&&(m|=1<<v),n--,--v<0&&(255==m?(E(255),E(0)):E(m),v=7,m=0)}function E(t){g.push(t)}function B(t){E(t>>8&255),E(255&t)}function O(t,e,n,r,i){for(var o,a=i[0],s=i[240],u=function(t,e){var n,r,i,o,a,s,u,c,l,f,h=0;for(l=0;l<8;++l){n=t[h],r=t[h+1],i=t[h+2],o=t[h+3],a=t[h+4],s=t[h+5],u=t[h+6];var d=n+(c=t[h+7]),g=n-c,m=r+u,v=r-u,y=i+s,b=i-s,w=o+a,x=o-a,N=d+w,L=d-w,A=m+y,S=m-y;t[h]=N+A,t[h+4]=N-A;var _=.707106781*(S+L);t[h+2]=L+_,t[h+6]=L-_;var C=.382683433*((N=x+b)-(S=v+g)),k=.5411961*N+C,P=1.306562965*S+C,F=.707106781*(A=b+v),T=g+F,j=g-F;t[h+5]=j+k,t[h+3]=j-k,t[h+1]=T+P,t[h+7]=T-P,h+=8}for(l=h=0;l<8;++l){n=t[h],r=t[h+8],i=t[h+16],o=t[h+24],a=t[h+32],s=t[h+40],u=t[h+48];var I=n+(c=t[h+56]),E=n-c,B=r+u,O=r-u,M=i+s,q=i-s,D=o+a,R=o-a,U=I+D,z=I-D,H=B+M,W=B-M;t[h]=U+H,t[h+32]=U-H;var V=.707106781*(W+z);t[h+16]=z+V,t[h+48]=z-V;var G=.382683433*((U=R+q)-(W=O+E)),Y=.5411961*U+G,X=1.306562965*W+G,J=.707106781*(H=q+O),$=E+J,K=E-J;t[h+40]=K+Y,t[h+24]=K-Y,t[h+8]=$+X,t[h+56]=$-X,h++}for(l=0;l<64;++l)f=t[l]*e[l],p[l]=0<f?f+.5|0:f-.5|0;return p}(t,e),c=0;c<64;++c)d[L[c]]=u[c];var l=d[0]-n;n=d[0],0==l?I(r[0]):(I(r[h[o=32767+l]]),I(f[o]));for(var g=63;0<g&&0==d[g];g--);if(0==g)return I(a),n;for(var m,v=1;v<=g;){for(var y=v;0==d[v]&&v<=g;++v);var b=v-y;if(16<=b){m=b>>4;for(var w=1;w<=m;++w)I(s);b&=15}o=32767+d[v],I(i[(b<<4)+h[o]]),I(f[o]),v++}return 63!=g&&I(a),n}function M(t){t<=0&&(t=1),100<t&&(t=100),o!=t&&(function(t){for(var e=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99],n=0;n<64;n++){var r=a((e[n]*t+50)/100);r<1?r=1:255<r&&(r=255),s[L[n]]=r}for(var i=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99],o=0;o<64;o++){var f=a((i[o]*t+50)/100);f<1?f=1:255<f&&(f=255),u[L[o]]=f}for(var h=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379],p=0,d=0;d<8;d++)for(var g=0;g<8;g++)c[p]=1/(s[L[p]]*h[d]*h[g]*8),l[p]=1/(u[L[p]]*h[d]*h[g]*8),p++}(t<50?Math.floor(5e3/t):Math.floor(200-2*t)),o=t)}this.encode=function(t,o){var a,f;(new Date).getTime(),o&&M(o),g=new Array,m=0,v=7,B(65496),B(65504),B(16),E(74),E(70),E(73),E(70),E(0),E(1),E(1),E(0),B(1),B(1),E(0),E(0),function(){B(65499),B(132),E(0);for(var t=0;t<64;t++)E(s[t]);E(1);for(var e=0;e<64;e++)E(u[e])}(),a=t.width,f=t.height,B(65472),B(17),E(8),B(f),B(a),E(3),E(1),E(17),E(0),E(2),E(17),E(1),E(3),E(17),E(1),function(){B(65476),B(418),E(0);for(var t=0;t<16;t++)E(A[t+1]);for(var e=0;e<=11;e++)E(S[e]);E(16);for(var n=0;n<16;n++)E(_[n+1]);for(var r=0;r<=161;r++)E(C[r]);E(1);for(var i=0;i<16;i++)E(k[i+1]);for(var o=0;o<=11;o++)E(P[o]);E(17);for(var a=0;a<16;a++)E(F[a+1]);for(var s=0;s<=161;s++)E(T[s])}(),B(65498),B(12),E(3),E(1),E(0),E(2),E(17),E(3),E(17),E(0),E(63),E(0);var h=0,p=0,d=0;m=0,v=7,this.encode.displayName="_encode_";for(var x,L,j,q,D,R,U,z,H,W=t.data,V=t.width,G=t.height,Y=4*V,X=0;X<G;){for(x=0;x<Y;){for(R=D=Y*X+x,U=-1,H=z=0;H<64;H++)R=D+(z=H>>3)*Y+(U=4*(7&H)),G<=X+z&&(R-=Y*(X+1+z-G)),Y<=x+U&&(R-=x+U-Y+4),L=W[R++],j=W[R++],q=W[R++],y[H]=(N[L]+N[j+256>>0]+N[q+512>>0]>>16)-128,b[H]=(N[L+768>>0]+N[j+1024>>0]+N[q+1280>>0]>>16)-128,w[H]=(N[L+1280>>0]+N[j+1536>>0]+N[q+1792>>0]>>16)-128;h=O(y,c,h,e,r),p=O(b,l,p,n,i),d=O(w,l,d,n,i),x+=32}X+=8}if(0<=v){var J=[];J[1]=v+1,J[0]=(1<<v+1)-1,I(J)}return B(65497),new Uint8Array(g)},(new Date).getTime(),t||(t=50),function(){for(var t=String.fromCharCode,e=0;e<256;e++)x[e]=t(e)}(),e=j(A,S),n=j(k,P),r=j(_,C),i=j(F,T),function(){for(var t=1,e=2,n=1;n<=15;n++){for(var r=t;r<e;r++)h[32767+r]=n,f[32767+r]=[],f[32767+r][1]=n,f[32767+r][0]=r;for(var i=-(e-1);i<=-t;i++)h[32767+i]=n,f[32767+i]=[],f[32767+i][1]=n,f[32767+i][0]=e-1+i;t<<=1,e<<=1}}(),function(){for(var t=0;t<256;t++)N[t]=19595*t,N[t+256>>0]=38470*t,N[t+512>>0]=7471*t+32768,N[t+768>>0]=-11059*t,N[t+1024>>0]=-21709*t,N[t+1280>>0]=32768*t+8421375,N[t+1536>>0]=-27439*t,N[t+1792>>0]=-5329*t}(),M(t),(new Date).getTime()}function Bt(t,e){if(this.pos=0,this.buffer=t,this.datav=new DataView(t.buffer),this.is_with_alpha=!!e,this.bottom_up=!0,this.flag=String.fromCharCode(this.buffer[0])+String.fromCharCode(this.buffer[1]),this.pos+=2,-1===["BM","BA","CI","CP","IC","PT"].indexOf(this.flag))throw new Error("Invalid BMP File");this.parseHeader(),this.parseBGR()}window.tmp=jt,gt.API.adler32cs=(xt="function"==typeof ArrayBuffer&&"function"==typeof Uint8Array,Nt=null,Lt=function(){if(!xt)return function(){return!1};try{var t={};"function"==typeof t.Buffer&&(Nt=t.Buffer)}catch(t){}return function(t){return t instanceof ArrayBuffer||null!==Nt&&t instanceof Nt}}(),At=null!==Nt?function(t){return new Nt(t,"utf8").toString("binary")}:function(t){return unescape(encodeURIComponent(t))},St=function(t,e){for(var n=65535&t,r=t>>>16,i=0,o=e.length;i<o;i++)r=(r+(n=(n+(255&e.charCodeAt(i)))%65521))%65521;return(r<<16|n)>>>0},_t=function(t,e){for(var n=65535&t,r=t>>>16,i=0,o=e.length;i<o;i++)r=(r+(n=(n+e[i])%65521))%65521;return(r<<16|n)>>>0},kt=(Ct={}).Adler32=(((wt=(bt=function(t){if(!(this instanceof bt))throw new TypeError("Constructor cannot called be as a function.");if(!isFinite(t=null==t?1:+t))throw new Error("First arguments needs to be a finite number.");this.checksum=t>>>0}).prototype={}).constructor=bt).from=((mt=function(t){if(!(this instanceof bt))throw new TypeError("Constructor cannot called be as a function.");if(null==t)throw new Error("First argument needs to be a string.");this.checksum=St(1,t.toString())}).prototype=wt,mt),bt.fromUtf8=((vt=function(t){if(!(this instanceof bt))throw new TypeError("Constructor cannot called be as a function.");if(null==t)throw new Error("First argument needs to be a string.");var e=At(t.toString());this.checksum=St(1,e)}).prototype=wt,vt),xt&&(bt.fromBuffer=((yt=function(t){if(!(this instanceof bt))throw new TypeError("Constructor cannot called be as a function.");if(!Lt(t))throw new Error("First argument needs to be ArrayBuffer.");var e=new Uint8Array(t);return this.checksum=_t(1,e)}).prototype=wt,yt)),wt.update=function(t){if(null==t)throw new Error("First argument needs to be a string.");return t=t.toString(),this.checksum=St(this.checksum,t)},wt.updateUtf8=function(t){if(null==t)throw new Error("First argument needs to be a string.");var e=At(t.toString());return this.checksum=St(this.checksum,e)},xt&&(wt.updateBuffer=function(t){if(!Lt(t))throw new Error("First argument needs to be ArrayBuffer.");var e=new Uint8Array(t);return this.checksum=_t(this.checksum,e)}),wt.clone=function(){return new kt(this.checksum)},bt),Ct.from=function(t){if(null==t)throw new Error("First argument needs to be a string.");return St(1,t.toString())},Ct.fromUtf8=function(t){if(null==t)throw new Error("First argument needs to be a string.");var e=At(t.toString());return St(1,e)},xt&&(Ct.fromBuffer=function(t){if(!Lt(t))throw new Error("First argument need to be ArrayBuffer.");var e=new Uint8Array(t);return _t(1,e)}),Ct),function(t){t.__bidiEngine__=t.prototype.__bidiEngine__=function(t){var n,r,i,o,a,s,u,c=e,l=[[0,3,0,1,0,0,0],[0,3,0,1,2,2,0],[0,3,0,17,2,0,1],[0,3,5,5,4,1,0],[0,3,21,21,4,0,1],[0,3,5,5,4,2,0]],f=[[2,0,1,1,0,1,0],[2,0,1,1,0,2,0],[2,0,2,1,3,2,0],[2,0,2,33,3,1,1]],h={L:0,R:1,EN:2,AN:3,N:4,B:5,S:6},p={0:0,5:1,6:2,7:3,32:4,251:5,254:6,255:7},d=["(",")","(","<",">","<","[","]","[","{","}","{","Â«","Â»","Â«","â¹","âº","â¹","â","â","â","â½","â¾","â½","â","â","â","â¤","â¥","â¤","â©","âª","â©","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹","ï¹¤","ï¹¥","ï¹¤"],g=new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/),m=!1,v=0;this.__bidiEngine__={};var y=function(t){var e=t.charCodeAt(),n=e>>8,r=p[n];return void 0!==r?c[256*r+(255&e)]:252===n||253===n?"AL":g.test(n)?"L":8===n?"R":"N"},b=function(t){for(var e,n=0;n<t.length;n++){if("L"===(e=y(t.charAt(n))))return!1;if("R"===e)return!0}return!1},w=function(t,e,a,s){var u,c,l,f,h=e[s];switch(h){case"L":case"R":m=!1;break;case"N":case"AN":break;case"EN":m&&(h="AN");break;case"AL":m=!0,h="R";break;case"WS":h="N";break;case"CS":s<1||s+1>=e.length||"EN"!==(u=a[s-1])&&"AN"!==u||"EN"!==(c=e[s+1])&&"AN"!==c?h="N":m&&(c="AN"),h=c===u?c:"N";break;case"ES":h="EN"===(u=0<s?a[s-1]:"B")&&s+1<e.length&&"EN"===e[s+1]?"EN":"N";break;case"ET":if(0<s&&"EN"===a[s-1]){h="EN";break}if(m){h="N";break}for(l=s+1,f=e.length;l<f&&"ET"===e[l];)l++;h=l<f&&"EN"===e[l]?"EN":"N";break;case"NSM":if(i&&!o){for(f=e.length,l=s+1;l<f&&"NSM"===e[l];)l++;if(l<f){var p=t[s],d=1425<=p&&p<=2303||64286===p;if(u=e[l],d&&("R"===u||"AL"===u)){h="R";break}}}h=s<1||"B"===(u=e[s-1])?"N":a[s-1];break;case"B":n=!(m=!1),h=v;break;case"S":r=!0,h="N";break;case"LRE":case"RLE":case"LRO":case"RLO":case"PDF":m=!1;break;case"BN":h="N"}return h},x=function(t,e,n){var r=t.split("");return n&&N(r,n,{hiLevel:v}),r.reverse(),e&&e.reverse(),r.join("")},N=function(t,e,i){var o,a,s,u,c,p=-1,d=t.length,g=0,b=[],x=v?f:l,N=[];for(r=n=m=!1,a=0;a<d;a++)N[a]=y(t[a]);for(s=0;s<d;s++){if(c=g,b[s]=w(t,N,b,s),o=240&(g=x[c][h[b[s]]]),g&=15,e[s]=u=x[g][5],0<o)if(16===o){for(a=p;a<s;a++)e[a]=1;p=-1}else p=-1;if(x[g][6])-1===p&&(p=s);else if(-1<p){for(a=p;a<s;a++)e[a]=u;p=-1}"B"===N[s]&&(e[s]=0),i.hiLevel|=u}r&&function(t,e,n){for(var r=0;r<n;r++)if("S"===t[r]){e[r]=v;for(var i=r-1;0<=i&&"WS"===t[i];i--)e[i]=v}}(N,e,d)},L=function(t,e,r,i,o){if(!(o.hiLevel<t)){if(1===t&&1===v&&!n)return e.reverse(),void(r&&r.reverse());for(var a,s,u,c,l=e.length,f=0;f<l;){if(i[f]>=t){for(u=f+1;u<l&&i[u]>=t;)u++;for(c=f,s=u-1;c<s;c++,s--)a=e[c],e[c]=e[s],e[s]=a,r&&(a=r[c],r[c]=r[s],r[s]=a);f=u}f++}}},A=function(t,e,n){var r=t.split(""),i={hiLevel:v};return n||(n=[]),N(r,n,i),function(t,e,n){if(0!==n.hiLevel&&u)for(var r,i=0;i<t.length;i++)1===e[i]&&0<=(r=d.indexOf(t[i]))&&(t[i]=d[r+1])}(r,n,i),L(2,r,e,n,i),L(1,r,e,n,i),r.join("")};return this.__bidiEngine__.doBidiReorder=function(t,e,n){if(function(t,e){if(e)for(var n=0;n<t.length;n++)e[n]=n;void 0===o&&(o=b(t)),void 0===s&&(s=b(t))}(t,e),i||!a||s)if(i&&a&&o^s)v=o?1:0,t=x(t,e,n);else if(!i&&a&&s)v=o?1:0,t=A(t,e,n),t=x(t,e);else if(!i||o||a||s){if(i&&!a&&o^s)t=x(t,e),t=o?(v=0,A(t,e,n)):(v=1,t=A(t,e,n),x(t,e));else if(i&&o&&!a&&s)v=1,t=A(t,e,n),t=x(t,e);else if(!i&&!a&&o^s){var r=u;o?(v=1,t=A(t,e,n),v=0,u=!1,t=A(t,e,n),u=r):(v=0,t=A(t,e,n),t=x(t,e),u=!(v=1),t=A(t,e,n),u=r,t=x(t,e))}}else v=0,t=A(t,e,n);else v=o?1:0,t=A(t,e,n);return t},this.__bidiEngine__.setOptions=function(t){t&&(i=t.isInputVisual,a=t.isOutputVisual,o=t.isInputRtl,s=t.isOutputRtl,u=t.isSymmetricSwapping)},this.__bidiEngine__.setOptions(t),this.__bidiEngine__};var e=["BN","BN","BN","BN","BN","BN","BN","BN","BN","S","B","S","WS","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","B","B","B","S","WS","N","N","ET","ET","ET","N","N","N","N","N","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","BN","BN","BN","BN","BN","BN","B","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","BN","CS","N","ET","ET","ET","ET","N","N","N","N","L","N","N","BN","N","N","ET","ET","EN","EN","N","L","N","N","N","EN","L","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","L","L","L","L","L","L","L","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","L","N","N","N","N","N","ET","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","R","NSM","R","NSM","NSM","R","NSM","NSM","R","NSM","N","N","N","N","N","N","N","N","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","N","N","N","N","N","R","R","R","R","R","N","N","N","N","N","N","N","N","N","N","N","AN","AN","AN","AN","AN","AN","N","N","AL","ET","ET","AL","CS","AL","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","AN","AN","AN","AN","AN","AN","AN","AN","AN","ET","AN","AN","AL","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AN","N","NSM","NSM","NSM","NSM","NSM","NSM","AL","AL","NSM","NSM","N","NSM","NSM","NSM","NSM","AL","AL","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","AL","AL","NSM","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","AL","N","N","N","N","N","N","N","N","N","N","N","N","N","N","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","R","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","R","R","N","N","N","N","R","N","N","N","N","N","WS","WS","WS","WS","WS","WS","WS","WS","WS","WS","WS","BN","BN","BN","L","R","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","WS","B","LRE","RLE","PDF","LRO","RLO","CS","ET","ET","ET","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","CS","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","WS","BN","BN","BN","BN","BN","N","LRI","RLI","FSI","PDI","BN","BN","BN","BN","BN","BN","EN","L","N","N","EN","EN","EN","EN","EN","EN","ES","ES","N","N","N","L","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","ES","ES","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","L","L","N","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","N","N","N","N","N","R","NSM","R","R","R","R","R","R","R","R","R","R","ES","R","R","R","R","R","R","R","R","R","R","R","R","R","N","R","R","R","R","R","N","R","N","R","R","N","R","R","N","R","R","R","R","R","R","R","R","R","R","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","NSM","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","CS","N","CS","N","N","CS","N","N","N","N","N","N","N","N","N","ET","N","N","ES","ES","N","N","N","N","N","ET","ET","N","N","N","N","N","AL","AL","AL","AL","AL","N","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","AL","N","N","BN","N","N","N","ET","ET","ET","N","N","N","N","N","ES","CS","ES","CS","CS","EN","EN","EN","EN","EN","EN","EN","EN","EN","EN","CS","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","N","N","N","N","N","N","N","N","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","N","N","N","L","L","L","L","L","L","N","N","L","L","L","L","L","L","N","N","L","L","L","L","L","L","N","N","L","L","L","N","N","N","ET","ET","N","N","N","ET","ET","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N","N"],n=new t.__bidiEngine__({isInputVisual:!0});t.API.events.push(["postProcessText",function(t){var e=t.text,r=(t.x,t.y,t.options||{}),i=(t.mutex,r.lang,[]);if("[object Array]"===Object.prototype.toString.call(e)){var o=0;for(i=[],o=0;o<e.length;o+=1)"[object Array]"===Object.prototype.toString.call(e[o])?i.push([n.doBidiReorder(e[o][0]),e[o][1],e[o][2]]):i.push([n.doBidiReorder(e[o])]);t.text=i}else t.text=n.doBidiReorder(e)}])}(gt),window.tmp=Et,Bt.prototype.parseHeader=function(){if(this.fileSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.reserved=this.datav.getUint32(this.pos,!0),this.pos+=4,this.offset=this.datav.getUint32(this.pos,!0),this.pos+=4,this.headerSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.width=this.datav.getUint32(this.pos,!0),this.pos+=4,this.height=this.datav.getInt32(this.pos,!0),this.pos+=4,this.planes=this.datav.getUint16(this.pos,!0),this.pos+=2,this.bitPP=this.datav.getUint16(this.pos,!0),this.pos+=2,this.compress=this.datav.getUint32(this.pos,!0),this.pos+=4,this.rawSize=this.datav.getUint32(this.pos,!0),this.pos+=4,this.hr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.vr=this.datav.getUint32(this.pos,!0),this.pos+=4,this.colors=this.datav.getUint32(this.pos,!0),this.pos+=4,this.importantColors=this.datav.getUint32(this.pos,!0),this.pos+=4,16===this.bitPP&&this.is_with_alpha&&(this.bitPP=15),this.bitPP<15){var t=0===this.colors?1<<this.bitPP:this.colors;this.palette=new Array(t);for(var e=0;e<t;e++){var n=this.datav.getUint8(this.pos++,!0),r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0);this.palette[e]={red:i,green:r,blue:n,quad:o}}}this.height<0&&(this.height*=-1,this.bottom_up=!1)},Bt.prototype.parseBGR=function(){this.pos=this.offset;try{var t="bit"+this.bitPP,e=this.width*this.height*4;this.data=new Uint8Array(e),this[t]()}catch(t){console.log("bit decode error:"+t)}},Bt.prototype.bit1=function(){var t=Math.ceil(this.width/8),e=t%4,n=0<=this.height?this.height-1:-this.height;for(n=this.height-1;0<=n;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<t;i++)for(var o=this.datav.getUint8(this.pos++,!0),a=r*this.width*4+8*i*4,s=0;s<8&&8*i+s<this.width;s++){var u=this.palette[o>>7-s&1];this.data[a+4*s]=u.blue,this.data[a+4*s+1]=u.green,this.data[a+4*s+2]=u.red,this.data[a+4*s+3]=255}0!=e&&(this.pos+=4-e)}},Bt.prototype.bit4=function(){for(var t=Math.ceil(this.width/2),e=t%4,n=this.height-1;0<=n;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<t;i++){var o=this.datav.getUint8(this.pos++,!0),a=r*this.width*4+2*i*4,s=o>>4,u=15&o,c=this.palette[s];if(this.data[a]=c.blue,this.data[a+1]=c.green,this.data[a+2]=c.red,this.data[a+3]=255,2*i+1>=this.width)break;c=this.palette[u],this.data[a+4]=c.blue,this.data[a+4+1]=c.green,this.data[a+4+2]=c.red,this.data[a+4+3]=255}0!=e&&(this.pos+=4-e)}},Bt.prototype.bit8=function(){for(var t=this.width%4,e=this.height-1;0<=e;e--){for(var n=this.bottom_up?e:this.height-1-e,r=0;r<this.width;r++){var i=this.datav.getUint8(this.pos++,!0),o=n*this.width*4+4*r;if(i<this.palette.length){var a=this.palette[i];this.data[o]=a.red,this.data[o+1]=a.green,this.data[o+2]=a.blue,this.data[o+3]=255}else this.data[o]=255,this.data[o+1]=255,this.data[o+2]=255,this.data[o+3]=255}0!=t&&(this.pos+=4-t)}},Bt.prototype.bit15=function(){for(var t=this.width%3,e=parseInt("11111",2),n=this.height-1;0<=n;n--){for(var r=this.bottom_up?n:this.height-1-n,i=0;i<this.width;i++){var o=this.datav.getUint16(this.pos,!0);this.pos+=2;var a=(o&e)/e*255|0,s=(o>>5&e)/e*255|0,u=(o>>10&e)/e*255|0,c=o>>15?255:0,l=r*this.width*4+4*i;this.data[l]=u,this.data[l+1]=s,this.data[l+2]=a,this.data[l+3]=c}this.pos+=t}},Bt.prototype.bit16=function(){for(var t=this.width%3,e=parseInt("11111",2),n=parseInt("111111",2),r=this.height-1;0<=r;r--){for(var i=this.bottom_up?r:this.height-1-r,o=0;o<this.width;o++){var a=this.datav.getUint16(this.pos,!0);this.pos+=2;var s=(a&e)/e*255|0,u=(a>>5&n)/n*255|0,c=(a>>11)/e*255|0,l=i*this.width*4+4*o;this.data[l]=c,this.data[l+1]=u,this.data[l+2]=s,this.data[l+3]=255}this.pos+=t}},Bt.prototype.bit24=function(){for(var t=this.height-1;0<=t;t--){for(var e=this.bottom_up?t:this.height-1-t,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0),a=e*this.width*4+4*n;this.data[a]=o,this.data[a+1]=i,this.data[a+2]=r,this.data[a+3]=255}this.pos+=this.width%4}},Bt.prototype.bit32=function(){for(var t=this.height-1;0<=t;t--)for(var e=this.bottom_up?t:this.height-1-t,n=0;n<this.width;n++){var r=this.datav.getUint8(this.pos++,!0),i=this.datav.getUint8(this.pos++,!0),o=this.datav.getUint8(this.pos++,!0),a=this.datav.getUint8(this.pos++,!0),s=e*this.width*4+4*n;this.data[s]=o,this.data[s+1]=i,this.data[s+2]=r,this.data[s+3]=a}},Bt.prototype.getData=function(){return this.data},window.tmp=Bt,function(t){var e=[0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29];function n(){var t=this;function e(t,e){for(var n=0;n|=1&t,t>>>=1,n<<=1,0<--e;);return n>>>1}t.build_tree=function(n){var r,i,o,a=t.dyn_tree,s=t.stat_desc.static_tree,u=t.stat_desc.elems,c=-1;for(n.heap_len=0,n.heap_max=573,r=0;r<u;r++)0!==a[2*r]?(n.heap[++n.heap_len]=c=r,n.depth[r]=0):a[2*r+1]=0;for(;n.heap_len<2;)a[2*(o=n.heap[++n.heap_len]=c<2?++c:0)]=1,n.depth[o]=0,n.opt_len--,s&&(n.static_len-=s[2*o+1]);for(t.max_code=c,r=Math.floor(n.heap_len/2);1<=r;r--)n.pqdownheap(a,r);for(o=u;r=n.heap[1],n.heap[1]=n.heap[n.heap_len--],n.pqdownheap(a,1),i=n.heap[1],n.heap[--n.heap_max]=r,n.heap[--n.heap_max]=i,a[2*o]=a[2*r]+a[2*i],n.depth[o]=Math.max(n.depth[r],n.depth[i])+1,a[2*r+1]=a[2*i+1]=o,n.heap[1]=o++,n.pqdownheap(a,1),2<=n.heap_len;);n.heap[--n.heap_max]=n.heap[1],function(e){var n,r,i,o,a,s,u=t.dyn_tree,c=t.stat_desc.static_tree,l=t.stat_desc.extra_bits,f=t.stat_desc.extra_base,h=t.stat_desc.max_length,p=0;for(o=0;o<=15;o++)e.bl_count[o]=0;for(u[2*e.heap[e.heap_max]+1]=0,n=e.heap_max+1;n<573;n++)h<(o=u[2*u[2*(r=e.heap[n])+1]+1]+1)&&(o=h,p++),u[2*r+1]=o,r>t.max_code||(e.bl_count[o]++,a=0,f<=r&&(a=l[r-f]),s=u[2*r],e.opt_len+=s*(o+a),c&&(e.static_len+=s*(c[2*r+1]+a)));if(0!==p){do{for(o=h-1;0===e.bl_count[o];)o--;e.bl_count[o]--,e.bl_count[o+1]+=2,e.bl_count[h]--,p-=2}while(0<p);for(o=h;0!==o;o--)for(r=e.bl_count[o];0!==r;)(i=e.heap[--n])>t.max_code||(u[2*i+1]!=o&&(e.opt_len+=(o-u[2*i+1])*u[2*i],u[2*i+1]=o),r--)}}(n),function(t,n,r){var i,o,a,s=[],u=0;for(i=1;i<=15;i++)s[i]=u=u+r[i-1]<<1;for(o=0;o<=n;o++)0!==(a=t[2*o+1])&&(t[2*o]=e(s[a]++,a))}(a,t.max_code,n.bl_count)}}function r(t,e,n,r,i){this.static_tree=t,this.extra_bits=e,this.extra_base=n,this.elems=r,this.max_length=i}function i(t,e,n,r,i){this.good_length=t,this.max_lazy=e,this.nice_length=n,this.max_chain=r,this.func=i}n._length_code=[0,1,2,3,4,5,6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28],n.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],n.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],n.d_code=function(t){return t<256?e[t]:e[256+(t>>>7)]},n.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],n.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],n.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],n.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],r.static_ltree=[12,8,140,8,76,8,204,8,44,8,172,8,108,8,236,8,28,8,156,8,92,8,220,8,60,8,188,8,124,8,252,8,2,8,130,8,66,8,194,8,34,8,162,8,98,8,226,8,18,8,146,8,82,8,210,8,50,8,178,8,114,8,242,8,10,8,138,8,74,8,202,8,42,8,170,8,106,8,234,8,26,8,154,8,90,8,218,8,58,8,186,8,122,8,250,8,6,8,134,8,70,8,198,8,38,8,166,8,102,8,230,8,22,8,150,8,86,8,214,8,54,8,182,8,118,8,246,8,14,8,142,8,78,8,206,8,46,8,174,8,110,8,238,8,30,8,158,8,94,8,222,8,62,8,190,8,126,8,254,8,1,8,129,8,65,8,193,8,33,8,161,8,97,8,225,8,17,8,145,8,81,8,209,8,49,8,177,8,113,8,241,8,9,8,137,8,73,8,201,8,41,8,169,8,105,8,233,8,25,8,153,8,89,8,217,8,57,8,185,8,121,8,249,8,5,8,133,8,69,8,197,8,37,8,165,8,101,8,229,8,21,8,149,8,85,8,213,8,53,8,181,8,117,8,245,8,13,8,141,8,77,8,205,8,45,8,173,8,109,8,237,8,29,8,157,8,93,8,221,8,61,8,189,8,125,8,253,8,19,9,275,9,147,9,403,9,83,9,339,9,211,9,467,9,51,9,307,9,179,9,435,9,115,9,371,9,243,9,499,9,11,9,267,9,139,9,395,9,75,9,331,9,203,9,459,9,43,9,299,9,171,9,427,9,107,9,363,9,235,9,491,9,27,9,283,9,155,9,411,9,91,9,347,9,219,9,475,9,59,9,315,9,187,9,443,9,123,9,379,9,251,9,507,9,7,9,263,9,135,9,391,9,71,9,327,9,199,9,455,9,39,9,295,9,167,9,423,9,103,9,359,9,231,9,487,9,23,9,279,9,151,9,407,9,87,9,343,9,215,9,471,9,55,9,311,9,183,9,439,9,119,9,375,9,247,9,503,9,15,9,271,9,143,9,399,9,79,9,335,9,207,9,463,9,47,9,303,9,175,9,431,9,111,9,367,9,239,9,495,9,31,9,287,9,159,9,415,9,95,9,351,9,223,9,479,9,63,9,319,9,191,9,447,9,127,9,383,9,255,9,511,9,0,7,64,7,32,7,96,7,16,7,80,7,48,7,112,7,8,7,72,7,40,7,104,7,24,7,88,7,56,7,120,7,4,7,68,7,36,7,100,7,20,7,84,7,52,7,116,7,3,8,131,8,67,8,195,8,35,8,163,8,99,8,227,8],r.static_dtree=[0,5,16,5,8,5,24,5,4,5,20,5,12,5,28,5,2,5,18,5,10,5,26,5,6,5,22,5,14,5,30,5,1,5,17,5,9,5,25,5,5,5,21,5,13,5,29,5,3,5,19,5,11,5,27,5,7,5,23,5],r.static_l_desc=new r(r.static_ltree,n.extra_lbits,257,286,15),r.static_d_desc=new r(r.static_dtree,n.extra_dbits,0,30,15),r.static_bl_desc=new r(null,n.extra_blbits,0,19,7);var o=[new i(0,0,0,0,0),new i(4,4,8,4,1),new i(4,5,16,8,1),new i(4,6,32,32,1),new i(4,4,16,16,2),new i(8,16,32,32,2),new i(8,16,128,128,2),new i(8,32,128,256,2),new i(32,128,258,1024,2),new i(32,258,258,4096,2)],a=["need dictionary","stream end","","","stream error","data error","","buffer error","",""];function s(t,e,n,r){var i=t[2*e],o=t[2*n];return i<o||i==o&&r[e]<=r[n]}function u(){var t,e,i,u,c,l,f,h,p,d,g,m,v,y,b,w,x,N,L,A,S,_,C,k,P,F,T,j,I,E,B,O,M,q,D,R,U,z,H,W,V,G=this,Y=new n,X=new n,J=new n;function $(){var t;for(t=0;t<286;t++)B[2*t]=0;for(t=0;t<30;t++)O[2*t]=0;for(t=0;t<19;t++)M[2*t]=0;B[512]=1,G.opt_len=G.static_len=0,R=z=0}function K(t,e){var n,r,i=-1,o=t[1],a=0,s=7,u=4;for(0===o&&(s=138,u=3),t[2*(e+1)+1]=65535,n=0;n<=e;n++)r=o,o=t[2*(n+1)+1],++a<s&&r==o||(a<u?M[2*r]+=a:0!==r?(r!=i&&M[2*r]++,M[32]++):a<=10?M[34]++:M[36]++,i=r,u=(a=0)===o?(s=138,3):r==o?(s=6,3):(s=7,4))}function Q(t){G.pending_buf[G.pending++]=t}function Z(t){Q(255&t),Q(t>>>8&255)}function tt(t,e){var n,r=e;16-r<V?(Z(W|=(n=t)<<V&65535),W=n>>>16-V,V+=r-16):(W|=t<<V&65535,V+=r)}function et(t,e){var n=2*t;tt(65535&e[n],65535&e[n+1])}function nt(t,e){var n,r,i=-1,o=t[1],a=0,s=7,u=4;for(0===o&&(s=138,u=3),n=0;n<=e;n++)if(r=o,o=t[2*(n+1)+1],!(++a<s&&r==o)){if(a<u)for(;et(r,M),0!=--a;);else 0!==r?(r!=i&&(et(r,M),a--),et(16,M),tt(a-3,2)):a<=10?(et(17,M),tt(a-3,3)):(et(18,M),tt(a-11,7));i=r,u=(a=0)===o?(s=138,3):r==o?(s=6,3):(s=7,4)}}function rt(){16==V?(Z(W),V=W=0):8<=V&&(Q(255&W),W>>>=8,V-=8)}function it(t,e){var r,i,o;if(G.pending_buf[U+2*R]=t>>>8&255,G.pending_buf[U+2*R+1]=255&t,G.pending_buf[q+R]=255&e,R++,0===t?B[2*e]++:(z++,t--,B[2*(n._length_code[e]+256+1)]++,O[2*n.d_code(t)]++),0==(8191&R)&&2<T){for(r=8*R,i=S-x,o=0;o<30;o++)r+=O[2*o]*(5+n.extra_dbits[o]);if(r>>>=3,z<Math.floor(R/2)&&r<Math.floor(i/2))return!0}return R==D-1}function ot(t,e){var r,i,o,a,s=0;if(0!==R)for(;r=G.pending_buf[U+2*s]<<8&65280|255&G.pending_buf[U+2*s+1],i=255&G.pending_buf[q+s],s++,0===r?et(i,t):(et((o=n._length_code[i])+256+1,t),0!==(a=n.extra_lbits[o])&&tt(i-=n.base_length[o],a),et(o=n.d_code(--r),e),0!==(a=n.extra_dbits[o])&&tt(r-=n.base_dist[o],a)),s<R;);et(256,t),H=t[513]}function at(){8<V?Z(W):0<V&&Q(255&W),V=W=0}function st(t,e,n){var r,i;tt(0+(n?1:0),3),r=t,i=e,at(),H=8,Z(i),Z(~i),G.pending_buf.set(h.subarray(r,r+i),G.pending),G.pending+=i}function ut(e){(function(t,e,i){var o,a,s=0;0<T?(Y.build_tree(G),X.build_tree(G),s=function(){var t;for(K(B,Y.max_code),K(O,X.max_code),J.build_tree(G),t=18;3<=t&&0===M[2*n.bl_order[t]+1];t--);return G.opt_len+=3*(t+1)+5+5+4,t}(),o=G.opt_len+3+7>>>3,(a=G.static_len+3+7>>>3)<=o&&(o=a)):o=a=e+5,e+4<=o&&-1!=t?st(t,e,i):a==o?(tt(2+(i?1:0),3),ot(r.static_ltree,r.static_dtree)):(tt(4+(i?1:0),3),function(t,e,r){var i;for(tt(t-257,5),tt(e-1,5),tt(r-4,4),i=0;i<r;i++)tt(M[2*n.bl_order[i]+1],3);nt(B,t-1),nt(O,e-1)}(Y.max_code+1,X.max_code+1,s+1),ot(B,O)),$(),i&&at()})(0<=x?x:-1,S-x,e),x=S,t.flush_pending()}function ct(){var e,n,r,i;do{if(0==(i=p-C-S)&&0===S&&0===C)i=c;else if(-1==i)i--;else if(c+c-262<=S){for(h.set(h.subarray(c,c+c),0),_-=c,S-=c,x-=c,r=e=v;n=65535&g[--r],g[r]=c<=n?n-c:0,0!=--e;);for(r=e=c;n=65535&d[--r],d[r]=c<=n?n-c:0,0!=--e;);i+=c}if(0===t.avail_in)return;e=t.read_buf(h,S+C,i),3<=(C+=e)&&(m=((m=255&h[S])<<w^255&h[S+1])&b)}while(C<262&&0!==t.avail_in)}function lt(t){var e,n,r=P,i=S,o=k,a=c-262<S?S-(c-262):0,s=E,u=f,l=S+258,p=h[i+o-1],g=h[i+o];I<=k&&(r>>=2),C<s&&(s=C);do{if(h[(e=t)+o]==g&&h[e+o-1]==p&&h[e]==h[i]&&h[++e]==h[i+1]){i+=2,e++;do{}while(h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&h[++i]==h[++e]&&i<l);if(n=258-(l-i),i=l-258,o<n){if(_=t,s<=(o=n))break;p=h[i+o-1],g=h[i+o]}}}while((t=65535&d[t&u])>a&&0!=--r);return o<=C?o:C}function ft(t){return t.total_in=t.total_out=0,t.msg=null,G.pending=0,G.pending_out=0,e=113,u=0,Y.dyn_tree=B,Y.stat_desc=r.static_l_desc,X.dyn_tree=O,X.stat_desc=r.static_d_desc,J.dyn_tree=M,J.stat_desc=r.static_bl_desc,V=W=0,H=8,$(),function(){var t;for(p=2*c,t=g[v-1]=0;t<v-1;t++)g[t]=0;F=o[T].max_lazy,I=o[T].good_length,E=o[T].nice_length,P=o[T].max_chain,N=k=2,m=A=C=x=S=0}(),0}G.depth=[],G.bl_count=[],G.heap=[],B=[],O=[],M=[],G.pqdownheap=function(t,e){for(var n=G.heap,r=n[e],i=e<<1;i<=G.heap_len&&(i<G.heap_len&&s(t,n[i+1],n[i],G.depth)&&i++,!s(t,r,n[i],G.depth));)n[e]=n[i],e=i,i<<=1;n[e]=r},G.deflateInit=function(t,e,n,r,o,a){return r||(r=8),o||(o=8),a||(a=0),t.msg=null,-1==e&&(e=6),o<1||9<o||8!=r||n<9||15<n||e<0||9<e||a<0||2<a?-2:(t.dstate=G,f=(c=1<<(l=n))-1,b=(v=1<<(y=o+7))-1,w=Math.floor((y+3-1)/3),h=new Uint8Array(2*c),d=[],g=[],D=1<<o+6,G.pending_buf=new Uint8Array(4*D),i=4*D,U=Math.floor(D/2),q=3*D,T=e,j=a,ft(t))},G.deflateEnd=function(){return 42!=e&&113!=e&&666!=e?-2:(G.pending_buf=null,h=d=g=null,G.dstate=null,113==e?-3:0)},G.deflateParams=function(t,e,n){var r=0;return-1==e&&(e=6),e<0||9<e||n<0||2<n?-2:(o[T].func!=o[e].func&&0!==t.total_in&&(r=t.deflate(1)),T!=e&&(F=o[T=e].max_lazy,I=o[T].good_length,E=o[T].nice_length,P=o[T].max_chain),j=n,r)},G.deflateSetDictionary=function(t,n,r){var i,o=r,a=0;if(!n||42!=e)return-2;if(o<3)return 0;for(c-262<o&&(a=r-(o=c-262)),h.set(n.subarray(a,a+o),0),x=S=o,m=((m=255&h[0])<<w^255&h[1])&b,i=0;i<=o-3;i++)m=(m<<w^255&h[i+2])&b,d[i&f]=g[m],g[m]=i;return 0},G.deflate=function(n,s){var p,y,P,I,E,B;if(4<s||s<0)return-2;if(!n.next_out||!n.next_in&&0!==n.avail_in||666==e&&4!=s)return n.msg=a[4],-2;if(0===n.avail_out)return n.msg=a[7],-5;if(t=n,I=u,u=s,42==e&&(y=8+(l-8<<4)<<8,3<(P=(T-1&255)>>1)&&(P=3),y|=P<<6,0!==S&&(y|=32),e=113,Q((B=y+=31-y%31)>>8&255),Q(255&B)),0!==G.pending){if(t.flush_pending(),0===t.avail_out)return u=-1,0}else if(0===t.avail_in&&s<=I&&4!=s)return t.msg=a[7],-5;if(666==e&&0!==t.avail_in)return n.msg=a[7],-5;if(0!==t.avail_in||0!==C||0!=s&&666!=e){switch(E=-1,o[T].func){case 0:E=function(e){var n,r=65535;for(i-5<r&&(r=i-5);;){if(C<=1){if(ct(),0===C&&0==e)return 0;if(0===C)break}if(S+=C,n=x+r,((C=0)===S||n<=S)&&(C=S-n,S=n,ut(!1),0===t.avail_out))return 0;if(c-262<=S-x&&(ut(!1),0===t.avail_out))return 0}return ut(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(s);break;case 1:E=function(e){for(var n,r=0;;){if(C<262){if(ct(),C<262&&0==e)return 0;if(0===C)break}if(3<=C&&(m=(m<<w^255&h[S+2])&b,r=65535&g[m],d[S&f]=g[m],g[m]=S),0!==r&&(S-r&65535)<=c-262&&2!=j&&(N=lt(r)),3<=N)if(n=it(S-_,N-3),C-=N,N<=F&&3<=C){for(N--;m=(m<<w^255&h[2+ ++S])&b,r=65535&g[m],d[S&f]=g[m],g[m]=S,0!=--N;);S++}else S+=N,N=0,m=((m=255&h[S])<<w^255&h[S+1])&b;else n=it(0,255&h[S]),C--,S++;if(n&&(ut(!1),0===t.avail_out))return 0}return ut(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(s);break;case 2:E=function(e){for(var n,r,i=0;;){if(C<262){if(ct(),C<262&&0==e)return 0;if(0===C)break}if(3<=C&&(m=(m<<w^255&h[S+2])&b,i=65535&g[m],d[S&f]=g[m],g[m]=S),k=N,L=_,N=2,0!==i&&k<F&&(S-i&65535)<=c-262&&(2!=j&&(N=lt(i)),N<=5&&(1==j||3==N&&4096<S-_)&&(N=2)),3<=k&&N<=k){for(r=S+C-3,n=it(S-1-L,k-3),C-=k-1,k-=2;++S<=r&&(m=(m<<w^255&h[S+2])&b,i=65535&g[m],d[S&f]=g[m],g[m]=S),0!=--k;);if(A=0,N=2,S++,n&&(ut(!1),0===t.avail_out))return 0}else if(0!==A){if((n=it(0,255&h[S-1]))&&ut(!1),S++,C--,0===t.avail_out)return 0}else A=1,S++,C--}return 0!==A&&(n=it(0,255&h[S-1]),A=0),ut(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(s)}if(2!=E&&3!=E||(e=666),0==E||2==E)return 0===t.avail_out&&(u=-1),0;if(1==E){if(1==s)tt(2,3),et(256,r.static_ltree),rt(),1+H+10-V<9&&(tt(2,3),et(256,r.static_ltree),rt()),H=7;else if(st(0,0,!1),3==s)for(p=0;p<v;p++)g[p]=0;if(t.flush_pending(),0===t.avail_out)return u=-1,0}}return 4!=s?0:1}}function c(){this.next_in_index=0,this.next_out_index=0,this.avail_in=0,this.total_in=0,this.avail_out=0,this.total_out=0}c.prototype={deflateInit:function(t,e){return this.dstate=new u,e||(e=15),this.dstate.deflateInit(this,t,e)},deflate:function(t){return this.dstate?this.dstate.deflate(this,t):-2},deflateEnd:function(){if(!this.dstate)return-2;var t=this.dstate.deflateEnd();return this.dstate=null,t},deflateParams:function(t,e){return this.dstate?this.dstate.deflateParams(this,t,e):-2},deflateSetDictionary:function(t,e){return this.dstate?this.dstate.deflateSetDictionary(this,t,e):-2},read_buf:function(t,e,n){var r=this.avail_in;return n<r&&(r=n),0===r?0:(this.avail_in-=r,t.set(this.next_in.subarray(this.next_in_index,this.next_in_index+r),e),this.next_in_index+=r,this.total_in+=r,r)},flush_pending:function(){var t=this,e=t.dstate.pending;e>t.avail_out&&(e=t.avail_out),0!==e&&(t.next_out.set(t.dstate.pending_buf.subarray(t.dstate.pending_out,t.dstate.pending_out+e),t.next_out_index),t.next_out_index+=e,t.dstate.pending_out+=e,t.total_out+=e,t.avail_out-=e,t.dstate.pending-=e,0===t.dstate.pending&&(t.dstate.pending_out=0))}};var l=t.zip||t;l.Deflater=l._jzlib_Deflater=function(t){var e=new c,n=new Uint8Array(512),r=t?t.level:-1;void 0===r&&(r=-1),e.deflateInit(r),e.next_out=n,this.append=function(t,r){var i,o=[],a=0,s=0,u=0;if(t.length){e.next_in_index=0,e.next_in=t,e.avail_in=t.length;do{if(e.next_out_index=0,e.avail_out=512,0!=e.deflate(0))throw new Error("deflating: "+e.msg);e.next_out_index&&(512==e.next_out_index?o.push(new Uint8Array(n)):o.push(new Uint8Array(n.subarray(0,e.next_out_index)))),u+=e.next_out_index,r&&0<e.next_in_index&&e.next_in_index!=a&&(r(e.next_in_index),a=e.next_in_index)}while(0<e.avail_in||0===e.avail_out);return i=new Uint8Array(u),o.forEach((function(t){i.set(t,s),s+=t.length})),i}},this.flush=function(){var t,r,i=[],o=0,a=0;do{if(e.next_out_index=0,e.avail_out=512,1!=(t=e.deflate(4))&&0!=t)throw new Error("deflating: "+e.msg);0<512-e.avail_out&&i.push(new Uint8Array(n.subarray(0,e.next_out_index))),a+=e.next_out_index}while(0<e.avail_in||0===e.avail_out);return e.deflateEnd(),r=new Uint8Array(a),i.forEach((function(t){r.set(t,o),o+=t.length})),r}}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")()),("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")()).RGBColor=function(t){var e;t=t||"",this.ok=!1,"#"==t.charAt(0)&&(t=t.substr(1,6)),t=(t=t.replace(/ /g,"")).toLowerCase();var n={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dodgerblue:"1e90ff",feldspar:"d19275",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgrey:"d3d3d3",lightgreen:"90ee90",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslateblue:"8470ff",lightslategray:"778899",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"00ff00",limegreen:"32cd32",linen:"faf0e6",magenta:"ff00ff",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370d8",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"d87093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",red:"ff0000",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",violetred:"d02090",wheat:"f5deb3",white:"ffffff",whitesmoke:"f5f5f5",yellow:"ffff00",yellowgreen:"9acd32"};for(var r in n)t==r&&(t=n[r]);for(var i=[{re:/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,example:["rgb(123, 234, 45)","rgb(255,234,245)"],process:function(t){return[parseInt(t[1]),parseInt(t[2]),parseInt(t[3])]}},{re:/^(\w{2})(\w{2})(\w{2})$/,example:["#00ff00","336699"],process:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/^(\w{1})(\w{1})(\w{1})$/,example:["#fb0","f0f"],process:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}}],o=0;o<i.length;o++){var a=i[o].re,s=i[o].process,u=a.exec(t);u&&(e=s(u),this.r=e[0],this.g=e[1],this.b=e[2],this.ok=!0)}this.r=this.r<0||isNaN(this.r)?0:255<this.r?255:this.r,this.g=this.g<0||isNaN(this.g)?0:255<this.g?255:this.g,this.b=this.b<0||isNaN(this.b)?0:255<this.b?255:this.b,this.toRGB=function(){return"rgb("+this.r+", "+this.g+", "+this.b+")"},this.toHex=function(){var t=this.r.toString(16),e=this.g.toString(16),n=this.b.toString(16);return 1==t.length&&(t="0"+t),1==e.length&&(e="0"+e),1==n.length&&(n="0"+n),"#"+t+e+n}},function(t){var e="+".charCodeAt(0),n="/".charCodeAt(0),r="0".charCodeAt(0),i="a".charCodeAt(0),o="A".charCodeAt(0),a="-".charCodeAt(0),s="_".charCodeAt(0),u=function(t){var u=t.charCodeAt(0);return u===e||u===a?62:u===n||u===s?63:u<r?-1:u<r+10?u-r+26+26:u<o+26?u-o:u<i+26?u-i+26:void 0};t.API.TTFFont=function(){function t(t,e,n){var r;if(this.rawData=t,r=this.contents=new l(t),this.contents.pos=4,"ttcf"===r.readString(4)){if(!e)throw new Error("Must specify a font name for TTC files.");throw new Error("Font "+e+" not found in TTC file.")}r.pos=0,this.parse(),this.subset=new P(this),this.registerTTF()}return t.open=function(e,n,r,i){if("string"!=typeof r)throw new Error("Invalid argument supplied in TTFFont.open");return new t(function(t){var e,n,r,i,o,a;if(0<t.length%4)throw new Error("Invalid string. Length must be a multiple of 4");var s=t.length;o="="===t.charAt(s-2)?2:"="===t.charAt(s-1)?1:0,a=new Uint8Array(3*t.length/4-o),r=0<o?t.length-4:t.length;var c=0;function l(t){a[c++]=t}for(n=e=0;e<r;e+=4,n+=3)l((16711680&(i=u(t.charAt(e))<<18|u(t.charAt(e+1))<<12|u(t.charAt(e+2))<<6|u(t.charAt(e+3))))>>16),l((65280&i)>>8),l(255&i);return 2===o?l(255&(i=u(t.charAt(e))<<2|u(t.charAt(e+1))>>4)):1===o&&(l((i=u(t.charAt(e))<<10|u(t.charAt(e+1))<<4|u(t.charAt(e+2))>>2)>>8&255),l(255&i)),a}(r),n,i)},t.prototype.parse=function(){return this.directory=new f(this.contents),this.head=new d(this),this.name=new x(this),this.cmap=new m(this),this.toUnicode=new Map,this.hhea=new v(this),this.maxp=new N(this),this.hmtx=new L(this),this.post=new b(this),this.os2=new y(this),this.loca=new k(this),this.glyf=new S(this),this.ascender=this.os2.exists&&this.os2.ascender||this.hhea.ascender,this.decender=this.os2.exists&&this.os2.decender||this.hhea.decender,this.lineGap=this.os2.exists&&this.os2.lineGap||this.hhea.lineGap,this.bbox=[this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax]},t.prototype.registerTTF=function(){var t,e,n,r,i;if(this.scaleFactor=1e3/this.head.unitsPerEm,this.bbox=function(){var e,n,r,i;for(i=[],e=0,n=(r=this.bbox).length;e<n;e++)t=r[e],i.push(Math.round(t*this.scaleFactor));return i}.call(this),this.stemV=0,this.post.exists?(n=255&(r=this.post.italic_angle),!0&(e=r>>16)&&(e=-(1+(65535^e))),this.italicAngle=+(e+"."+n)):this.italicAngle=0,this.ascender=Math.round(this.ascender*this.scaleFactor),this.decender=Math.round(this.decender*this.scaleFactor),this.lineGap=Math.round(this.lineGap*this.scaleFactor),this.capHeight=this.os2.exists&&this.os2.capHeight||this.ascender,this.xHeight=this.os2.exists&&this.os2.xHeight||0,this.familyClass=(this.os2.exists&&this.os2.familyClass||0)>>8,this.isSerif=1===(i=this.familyClass)||2===i||3===i||4===i||5===i||7===i,this.isScript=10===this.familyClass,this.flags=0,this.post.isFixedPitch&&(this.flags|=1),this.isSerif&&(this.flags|=2),this.isScript&&(this.flags|=8),0!==this.italicAngle&&(this.flags|=64),this.flags|=32,!this.cmap.unicode)throw new Error("No unicode cmap for font")},t.prototype.characterToGlyph=function(t){var e;return(null!=(e=this.cmap.unicode)?e.codeMap[t]:void 0)||0},t.prototype.widthOfGlyph=function(t){var e;return e=1e3/this.head.unitsPerEm,this.hmtx.forGlyph(t).advance*e},t.prototype.widthOfString=function(t,e,n){var r,i,o,a,s;for(i=a=o=0,s=(t=""+t).length;0<=s?a<s:s<a;i=0<=s?++a:--a)r=t.charCodeAt(i),o+=this.widthOfGlyph(this.characterToGlyph(r))+n*(1e3/e)||0;return o*(e/1e3)},t.prototype.lineHeight=function(t,e){var n;return null==e&&(e=!1),n=e?this.lineGap:0,(this.ascender+n-this.decender)/1e3*t},t}();var c,l=function(){function t(t){this.data=null!=t?t:[],this.pos=0,this.length=this.data.length}return t.prototype.readByte=function(){return this.data[this.pos++]},t.prototype.writeByte=function(t){return this.data[this.pos++]=t},t.prototype.readUInt32=function(){return 16777216*this.readByte()+(this.readByte()<<16)+(this.readByte()<<8)+this.readByte()},t.prototype.writeUInt32=function(t){return this.writeByte(t>>>24&255),this.writeByte(t>>16&255),this.writeByte(t>>8&255),this.writeByte(255&t)},t.prototype.readInt32=function(){var t;return 2147483648<=(t=this.readUInt32())?t-4294967296:t},t.prototype.writeInt32=function(t){return t<0&&(t+=4294967296),this.writeUInt32(t)},t.prototype.readUInt16=function(){return this.readByte()<<8|this.readByte()},t.prototype.writeUInt16=function(t){return this.writeByte(t>>8&255),this.writeByte(255&t)},t.prototype.readInt16=function(){var t;return 32768<=(t=this.readUInt16())?t-65536:t},t.prototype.writeInt16=function(t){return t<0&&(t+=65536),this.writeUInt16(t)},t.prototype.readString=function(t){var e,n,r;for(n=[],e=r=0;0<=t?r<t:t<r;e=0<=t?++r:--r)n[e]=String.fromCharCode(this.readByte());return n.join("")},t.prototype.writeString=function(t){var e,n,r,i;for(i=[],e=n=0,r=t.length;0<=r?n<r:r<n;e=0<=r?++n:--n)i.push(this.writeByte(t.charCodeAt(e)));return i},t.prototype.readShort=function(){return this.readInt16()},t.prototype.writeShort=function(t){return this.writeInt16(t)},t.prototype.readLongLong=function(){var t,e,n,r,i,o,a,s;return t=this.readByte(),e=this.readByte(),n=this.readByte(),r=this.readByte(),i=this.readByte(),o=this.readByte(),a=this.readByte(),s=this.readByte(),128&t?-1*(72057594037927940*(255^t)+281474976710656*(255^e)+1099511627776*(255^n)+4294967296*(255^r)+16777216*(255^i)+65536*(255^o)+256*(255^a)+(255^s)+1):72057594037927940*t+281474976710656*e+1099511627776*n+4294967296*r+16777216*i+65536*o+256*a+s},t.prototype.writeLongLong=function(t){var e,n;return e=Math.floor(t/4294967296),n=4294967295&t,this.writeByte(e>>24&255),this.writeByte(e>>16&255),this.writeByte(e>>8&255),this.writeByte(255&e),this.writeByte(n>>24&255),this.writeByte(n>>16&255),this.writeByte(n>>8&255),this.writeByte(255&n)},t.prototype.readInt=function(){return this.readInt32()},t.prototype.writeInt=function(t){return this.writeInt32(t)},t.prototype.read=function(t){var e,n;for(e=[],n=0;0<=t?n<t:t<n;0<=t?++n:--n)e.push(this.readByte());return e},t.prototype.write=function(t){var e,n,r,i;for(i=[],n=0,r=t.length;n<r;n++)e=t[n],i.push(this.writeByte(e));return i},t}(),f=function(){var t;function e(t){var e,n,r;for(this.scalarType=t.readInt(),this.tableCount=t.readShort(),this.searchRange=t.readShort(),this.entrySelector=t.readShort(),this.rangeShift=t.readShort(),this.tables={},n=0,r=this.tableCount;0<=r?n<r:r<n;0<=r?++n:--n)e={tag:t.readString(4),checksum:t.readInt(),offset:t.readInt(),length:t.readInt()},this.tables[e.tag]=e}return e.prototype.encode=function(e){var n,r,i,o,a,s,u,c,f,h,p,d,g;for(g in p=Object.keys(e).length,s=Math.log(2),f=16*Math.floor(Math.log(p)/s),o=Math.floor(f/s),c=16*p-f,(r=new l).writeInt(this.scalarType),r.writeShort(p),r.writeShort(f),r.writeShort(o),r.writeShort(c),i=16*p,u=r.pos+i,a=null,d=[],e)for(h=e[g],r.writeString(g),r.writeInt(t(h)),r.writeInt(u),r.writeInt(h.length),d=d.concat(h),"head"===g&&(a=u),u+=h.length;u%4;)d.push(0),u++;return r.write(d),n=2981146554-t(r.data),r.pos=a+8,r.writeUInt32(n),r.data},t=function(t){var e,n,r,i;for(t=A.call(t);t.length%4;)t.push(0);for(n=new l(t),r=e=0,i=t.length;r<i;r+=4)e+=n.readUInt32();return 4294967295&e},e}(),h={}.hasOwnProperty,p=function(t,e){for(var n in e)h.call(e,n)&&(t[n]=e[n]);function r(){this.constructor=t}return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t};c=function(){function t(t){var e;this.file=t,e=this.file.directory.tables[this.tag],this.exists=!!e,e&&(this.offset=e.offset,this.length=e.length,this.parse(this.file.contents))}return t.prototype.parse=function(){},t.prototype.encode=function(){},t.prototype.raw=function(){return this.exists?(this.file.contents.pos=this.offset,this.file.contents.read(this.length)):null},t}();var d=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="head",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.revision=t.readInt(),this.checkSumAdjustment=t.readInt(),this.magicNumber=t.readInt(),this.flags=t.readShort(),this.unitsPerEm=t.readShort(),this.created=t.readLongLong(),this.modified=t.readLongLong(),this.xMin=t.readShort(),this.yMin=t.readShort(),this.xMax=t.readShort(),this.yMax=t.readShort(),this.macStyle=t.readShort(),this.lowestRecPPEM=t.readShort(),this.fontDirectionHint=t.readShort(),this.indexToLocFormat=t.readShort(),this.glyphDataFormat=t.readShort()},e.prototype.encode=function(t){var e;return(e=new l).writeInt(this.version),e.writeInt(this.revision),e.writeInt(this.checkSumAdjustment),e.writeInt(this.magicNumber),e.writeShort(this.flags),e.writeShort(this.unitsPerEm),e.writeLongLong(this.created),e.writeLongLong(this.modified),e.writeShort(this.xMin),e.writeShort(this.yMin),e.writeShort(this.xMax),e.writeShort(this.yMax),e.writeShort(this.macStyle),e.writeShort(this.lowestRecPPEM),e.writeShort(this.fontDirectionHint),e.writeShort(t),e.writeShort(this.glyphDataFormat),e.data},e}(),g=function(){function t(t,e){var n,r,i,o,a,s,u,c,l,f,h,p,d,g,m,v,y,b;switch(this.platformID=t.readUInt16(),this.encodingID=t.readShort(),this.offset=e+t.readInt(),l=t.pos,t.pos=this.offset,this.format=t.readUInt16(),this.length=t.readUInt16(),this.language=t.readUInt16(),this.isUnicode=3===this.platformID&&1===this.encodingID&&4===this.format||0===this.platformID&&4===this.format,this.codeMap={},this.format){case 0:for(s=m=0;m<256;s=++m)this.codeMap[s]=t.readByte();break;case 4:for(h=t.readUInt16(),f=h/2,t.pos+=6,i=function(){var e,n;for(n=[],s=e=0;0<=f?e<f:f<e;s=0<=f?++e:--e)n.push(t.readUInt16());return n}(),t.pos+=2,d=function(){var e,n;for(n=[],s=e=0;0<=f?e<f:f<e;s=0<=f?++e:--e)n.push(t.readUInt16());return n}(),u=function(){var e,n;for(n=[],s=e=0;0<=f?e<f:f<e;s=0<=f?++e:--e)n.push(t.readUInt16());return n}(),c=function(){var e,n;for(n=[],s=e=0;0<=f?e<f:f<e;s=0<=f?++e:--e)n.push(t.readUInt16());return n}(),r=(this.length-t.pos+this.offset)/2,a=function(){var e,n;for(n=[],s=e=0;0<=r?e<r:r<e;s=0<=r?++e:--e)n.push(t.readUInt16());return n}(),s=v=0,b=i.length;v<b;s=++v)for(g=i[s],n=y=p=d[s];p<=g?y<=g:g<=y;n=p<=g?++y:--y)0===c[s]?o=n+u[s]:0!==(o=a[c[s]/2+(n-p)-(f-s)]||0)&&(o+=u[s]),this.codeMap[n]=65535&o}t.pos=l}return t.encode=function(t,e){var n,r,i,o,a,s,u,c,f,h,p,d,g,m,v,y,b,w,x,N,L,A,S,_,C,k,P,F,T,j,I,E,B,O,M,q,D,R,U,z,H,W,V,G,Y,X;switch(F=new l,o=Object.keys(t).sort((function(t,e){return t-e})),e){case"macroman":for(g=0,m=function(){var t,e;for(e=[],d=t=0;t<256;d=++t)e.push(0);return e}(),y={0:0},i={},T=0,B=o.length;T<B;T++)null==y[V=t[r=o[T]]]&&(y[V]=++g),i[r]={old:t[r],new:y[t[r]]},m[r]=y[t[r]];return F.writeUInt16(1),F.writeUInt16(0),F.writeUInt32(12),F.writeUInt16(0),F.writeUInt16(262),F.writeUInt16(0),F.write(m),{charMap:i,subtable:F.data,maxGlyphID:g+1};case"unicode":for(k=[],f=[],y={},n={},v=u=null,j=b=0,O=o.length;j<O;j++)null==y[x=t[r=o[j]]]&&(y[x]=++b),n[r]={old:x,new:y[x]},a=y[x]-r,null!=v&&a===u||(v&&f.push(v),k.push(r),u=a),v=r;for(v&&f.push(v),f.push(65535),k.push(65535),_=2*(S=k.length),A=2*Math.pow(Math.log(S)/Math.LN2,2),h=Math.log(A/2)/Math.LN2,L=2*S-A,s=[],N=[],p=[],d=I=0,M=k.length;I<M;d=++I){if(C=k[d],c=f[d],65535===C){s.push(0),N.push(0);break}if(32768<=C-(P=n[C].new))for(s.push(0),N.push(2*(p.length+S-d)),r=E=C;C<=c?E<=c:c<=E;r=C<=c?++E:--E)p.push(n[r].new);else s.push(P-C),N.push(0)}for(F.writeUInt16(3),F.writeUInt16(1),F.writeUInt32(12),F.writeUInt16(4),F.writeUInt16(16+8*S+2*p.length),F.writeUInt16(0),F.writeUInt16(_),F.writeUInt16(A),F.writeUInt16(h),F.writeUInt16(L),H=0,q=f.length;H<q;H++)r=f[H],F.writeUInt16(r);for(F.writeUInt16(0),W=0,D=k.length;W<D;W++)r=k[W],F.writeUInt16(r);for(G=0,R=s.length;G<R;G++)a=s[G],F.writeUInt16(a);for(Y=0,U=N.length;Y<U;Y++)w=N[Y],F.writeUInt16(w);for(X=0,z=p.length;X<z;X++)g=p[X],F.writeUInt16(g);return{charMap:n,subtable:F.data,maxGlyphID:b+1}}},t}(),m=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="cmap",e.prototype.parse=function(t){var e,n,r;for(t.pos=this.offset,this.version=t.readUInt16(),n=t.readUInt16(),this.tables=[],this.unicode=null,r=0;0<=n?r<n:n<r;0<=n?++r:--r)e=new g(t,this.offset),this.tables.push(e),e.isUnicode&&null==this.unicode&&(this.unicode=e);return!0},e.encode=function(t,e){var n,r;return null==e&&(e="macroman"),n=g.encode(t,e),(r=new l).writeUInt16(0),r.writeUInt16(1),n.table=r.data.concat(n.subtable),n},e}(),v=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="hhea",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.ascender=t.readShort(),this.decender=t.readShort(),this.lineGap=t.readShort(),this.advanceWidthMax=t.readShort(),this.minLeftSideBearing=t.readShort(),this.minRightSideBearing=t.readShort(),this.xMaxExtent=t.readShort(),this.caretSlopeRise=t.readShort(),this.caretSlopeRun=t.readShort(),this.caretOffset=t.readShort(),t.pos+=8,this.metricDataFormat=t.readShort(),this.numberOfMetrics=t.readUInt16()},e}(),y=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="OS/2",e.prototype.parse=function(t){if(t.pos=this.offset,this.version=t.readUInt16(),this.averageCharWidth=t.readShort(),this.weightClass=t.readUInt16(),this.widthClass=t.readUInt16(),this.type=t.readShort(),this.ySubscriptXSize=t.readShort(),this.ySubscriptYSize=t.readShort(),this.ySubscriptXOffset=t.readShort(),this.ySubscriptYOffset=t.readShort(),this.ySuperscriptXSize=t.readShort(),this.ySuperscriptYSize=t.readShort(),this.ySuperscriptXOffset=t.readShort(),this.ySuperscriptYOffset=t.readShort(),this.yStrikeoutSize=t.readShort(),this.yStrikeoutPosition=t.readShort(),this.familyClass=t.readShort(),this.panose=function(){var e,n;for(n=[],e=0;e<10;++e)n.push(t.readByte());return n}(),this.charRange=function(){var e,n;for(n=[],e=0;e<4;++e)n.push(t.readInt());return n}(),this.vendorID=t.readString(4),this.selection=t.readShort(),this.firstCharIndex=t.readShort(),this.lastCharIndex=t.readShort(),0<this.version&&(this.ascent=t.readShort(),this.descent=t.readShort(),this.lineGap=t.readShort(),this.winAscent=t.readShort(),this.winDescent=t.readShort(),this.codePageRange=function(){var e,n;for(n=[],e=0;e<2;++e)n.push(t.readInt());return n}(),1<this.version))return this.xHeight=t.readShort(),this.capHeight=t.readShort(),this.defaultChar=t.readShort(),this.breakChar=t.readShort(),this.maxContext=t.readShort()},e}(),b=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="post",e.prototype.parse=function(t){var e,n,r,i;switch(t.pos=this.offset,this.format=t.readInt(),this.italicAngle=t.readInt(),this.underlinePosition=t.readShort(),this.underlineThickness=t.readShort(),this.isFixedPitch=t.readInt(),this.minMemType42=t.readInt(),this.maxMemType42=t.readInt(),this.minMemType1=t.readInt(),this.maxMemType1=t.readInt(),this.format){case 65536:break;case 131072:for(n=t.readUInt16(),this.glyphNameIndex=[],r=0;0<=n?r<n:n<r;0<=n?++r:--r)this.glyphNameIndex.push(t.readUInt16());for(this.names=[],i=[];t.pos<this.offset+this.length;)e=t.readByte(),i.push(this.names.push(t.readString(e)));return i;case 151552:return n=t.readUInt16(),this.offsets=t.read(n);case 196608:break;case 262144:return this.map=function(){var e,n,r;for(r=[],e=0,n=this.file.maxp.numGlyphs;0<=n?e<n:n<e;0<=n?++e:--e)r.push(t.readUInt32());return r}.call(this)}},e}(),w=function(t,e){this.raw=t,this.length=t.length,this.platformID=e.platformID,this.encodingID=e.encodingID,this.languageID=e.languageID},x=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="name",e.prototype.parse=function(t){var e,n,r,i,o,a,s,u,c,l,f,h;for(t.pos=this.offset,t.readShort(),e=t.readShort(),a=t.readShort(),n=[],i=c=0;0<=e?c<e:e<c;i=0<=e?++c:--c)n.push({platformID:t.readShort(),encodingID:t.readShort(),languageID:t.readShort(),nameID:t.readShort(),length:t.readShort(),offset:this.offset+a+t.readShort()});for(s={},i=l=0,f=n.length;l<f;i=++l)r=n[i],t.pos=r.offset,u=t.readString(r.length),o=new w(u,r),null==s[h=r.nameID]&&(s[h]=[]),s[r.nameID].push(o);this.strings=s,this.copyright=s[0],this.fontFamily=s[1],this.fontSubfamily=s[2],this.uniqueSubfamily=s[3],this.fontName=s[4],this.version=s[5];try{this.postscriptName=s[6][0].raw.replace(/[\x00-\x19\x80-\xff]/g,"")}catch(t){this.postscriptName=s[4][0].raw.replace(/[\x00-\x19\x80-\xff]/g,"")}return this.trademark=s[7],this.manufacturer=s[8],this.designer=s[9],this.description=s[10],this.vendorUrl=s[11],this.designerUrl=s[12],this.license=s[13],this.licenseUrl=s[14],this.preferredFamily=s[15],this.preferredSubfamily=s[17],this.compatibleFull=s[18],this.sampleText=s[19]},e}(),N=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="maxp",e.prototype.parse=function(t){return t.pos=this.offset,this.version=t.readInt(),this.numGlyphs=t.readUInt16(),this.maxPoints=t.readUInt16(),this.maxContours=t.readUInt16(),this.maxCompositePoints=t.readUInt16(),this.maxComponentContours=t.readUInt16(),this.maxZones=t.readUInt16(),this.maxTwilightPoints=t.readUInt16(),this.maxStorage=t.readUInt16(),this.maxFunctionDefs=t.readUInt16(),this.maxInstructionDefs=t.readUInt16(),this.maxStackElements=t.readUInt16(),this.maxSizeOfInstructions=t.readUInt16(),this.maxComponentElements=t.readUInt16(),this.maxComponentDepth=t.readUInt16()},e}(),L=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="hmtx",e.prototype.parse=function(t){var e,n,r,i,o,a,s;for(t.pos=this.offset,this.metrics=[],i=0,a=this.file.hhea.numberOfMetrics;0<=a?i<a:a<i;0<=a?++i:--i)this.metrics.push({advance:t.readUInt16(),lsb:t.readInt16()});for(n=this.file.maxp.numGlyphs-this.file.hhea.numberOfMetrics,this.leftSideBearings=function(){var e,r;for(r=[],e=0;0<=n?e<n:n<e;0<=n?++e:--e)r.push(t.readInt16());return r}(),this.widths=function(){var t,e,n,i;for(i=[],t=0,e=(n=this.metrics).length;t<e;t++)r=n[t],i.push(r.advance);return i}.call(this),e=this.widths[this.widths.length-1],s=[],o=0;0<=n?o<n:n<o;0<=n?++o:--o)s.push(this.widths.push(e));return s},e.prototype.forGlyph=function(t){return t in this.metrics?this.metrics[t]:{advance:this.metrics[this.metrics.length-1].advance,lsb:this.leftSideBearings[t-this.metrics.length]}},e}(),A=[].slice,S=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="glyf",e.prototype.parse=function(t){return this.cache={}},e.prototype.glyphFor=function(t){var e,n,r,i,o,a,s,u,c,f;return(t=t)in this.cache?this.cache[t]:(i=this.file.loca,e=this.file.contents,n=i.indexOf(t),0===(r=i.lengthOf(t))?this.cache[t]=null:(e.pos=this.offset+n,o=(a=new l(e.read(r))).readShort(),u=a.readShort(),f=a.readShort(),s=a.readShort(),c=a.readShort(),this.cache[t]=-1===o?new C(a,u,f,s,c):new _(a,o,u,f,s,c),this.cache[t]))},e.prototype.encode=function(t,e,n){var r,i,o,a,s;for(o=[],i=[],a=0,s=e.length;a<s;a++)r=t[e[a]],i.push(o.length),r&&(o=o.concat(r.encode(n)));return i.push(o.length),{table:o,offsets:i}},e}(),_=function(){function t(t,e,n,r,i,o){this.raw=t,this.numberOfContours=e,this.xMin=n,this.yMin=r,this.xMax=i,this.yMax=o,this.compound=!1}return t.prototype.encode=function(){return this.raw.data},t}(),C=function(){function t(t,e,n,r,i){var o,a;for(this.raw=t,this.xMin=e,this.yMin=n,this.xMax=r,this.yMax=i,this.compound=!0,this.glyphIDs=[],this.glyphOffsets=[],o=this.raw;a=o.readShort(),this.glyphOffsets.push(o.pos),this.glyphIDs.push(o.readShort()),32&a;)o.pos+=1&a?4:2,128&a?o.pos+=8:64&a?o.pos+=4:8&a&&(o.pos+=2)}return t.prototype.encode=function(t){var e,n,r,i,o;for(n=new l(A.call(this.raw.data)),e=r=0,i=(o=this.glyphIDs).length;r<i;e=++r)o[e],n.pos=this.glyphOffsets[e];return n.data},t}(),k=function(t){function e(){return e.__super__.constructor.apply(this,arguments)}return p(e,c),e.prototype.tag="loca",e.prototype.parse=function(t){var e;return t.pos=this.offset,e=this.file.head.indexToLocFormat,this.offsets=0===e?function(){var e,n,r;for(r=[],e=0,n=this.length;e<n;e+=2)r.push(2*t.readUInt16());return r}.call(this):function(){var e,n,r;for(r=[],e=0,n=this.length;e<n;e+=4)r.push(t.readUInt32());return r}.call(this)},e.prototype.indexOf=function(t){return this.offsets[t]},e.prototype.lengthOf=function(t){return this.offsets[t+1]-this.offsets[t]},e.prototype.encode=function(t,e){for(var n=new Uint32Array(this.offsets.length),r=0,i=0,o=0;o<n.length;++o)if(n[o]=r,i<e.length&&e[i]==o){++i,n[o]=r;var a=this.offsets[o],s=this.offsets[o+1]-a;0<s&&(r+=s)}for(var u=new Array(4*n.length),c=0;c<n.length;++c)u[4*c+3]=255&n[c],u[4*c+2]=(65280&n[c])>>8,u[4*c+1]=(16711680&n[c])>>16,u[4*c]=(4278190080&n[c])>>24;return u},e}(),P=function(){function t(t){this.font=t,this.subset={},this.unicodes={},this.next=33}return t.prototype.generateCmap=function(){var t,e,n,r,i;for(e in r=this.font.cmap.tables[0].codeMap,t={},i=this.subset)n=i[e],t[e]=r[n];return t},t.prototype.glyphsFor=function(t){var e,n,r,i,o,a,s;for(r={},o=0,a=t.length;o<a;o++)r[i=t[o]]=this.font.glyf.glyphFor(i);for(i in e=[],r)(null!=(n=r[i])?n.compound:void 0)&&e.push.apply(e,n.glyphIDs);if(0<e.length)for(i in s=this.glyphsFor(e))n=s[i],r[i]=n;return r},t.prototype.encode=function(t,e){var n,r,i,o,a,s,u,c,l,f,h,p,d,g,v;for(r in n=m.encode(this.generateCmap(),"unicode"),o=this.glyphsFor(t),h={0:0},v=n.charMap)h[(s=v[r]).old]=s.new;for(p in f=n.maxGlyphID,o)p in h||(h[p]=f++);return c=function(t){var e,n;for(e in n={},t)n[t[e]]=e;return n}(h),l=Object.keys(c).sort((function(t,e){return t-e})),d=function(){var t,e,n;for(n=[],t=0,e=l.length;t<e;t++)a=l[t],n.push(c[a]);return n}(),i=this.font.glyf.encode(o,d,h),u=this.font.loca.encode(i.offsets,d),g={cmap:this.font.cmap.raw(),glyf:i.table,loca:u,hmtx:this.font.hmtx.raw(),hhea:this.font.hhea.raw(),maxp:this.font.maxp.raw(),post:this.font.post.raw(),name:this.font.name.raw(),head:this.font.head.encode(e)},this.font.os2.exists&&(g["OS/2"]=this.font.os2.raw()),this.font.directory.encode(g)},t}();t.API.PDFObject=function(){var t;function e(){}return t=function(t,e){return(Array(e+1).join("0")+t).slice(-e)},e.convert=function(n){var r,i,o,a;if(Array.isArray(n))return"["+function(){var t,i,o;for(o=[],t=0,i=n.length;t<i;t++)r=n[t],o.push(e.convert(r));return o}().join(" ")+"]";if("string"==typeof n)return"/"+n;if(null!=n?n.isString:void 0)return"("+n+")";if(n instanceof Date)return"(D:"+t(n.getUTCFullYear(),4)+t(n.getUTCMonth(),2)+t(n.getUTCDate(),2)+t(n.getUTCHours(),2)+t(n.getUTCMinutes(),2)+t(n.getUTCSeconds(),2)+"Z)";if("[object Object]"!=={}.toString.call(n))return""+n;for(i in o=["<<"],n)a=n[i],o.push("/"+i+" "+e.convert(a));return o.push(">>"),o.join("\n")},e}()}(gt),Pt="undefined"!=typeof self&&self||"undefined"!=typeof window&&window||void 0!==r&&r||Function('return typeof this === "object" && this.content')()||Function("return this")(),Ft=function(){var t,e,n;function r(t){var e,n,r,i,o,a,s,u,c,l,f,h,p,d;for(this.data=t,this.pos=8,this.palette=[],this.imgData=[],this.transparency={},this.animation=null,this.text={},a=null;;){switch(e=this.readUInt32(),c=function(){var t,e;for(e=[],t=0;t<4;++t)e.push(String.fromCharCode(this.data[this.pos++]));return e}.call(this).join("")){case"IHDR":this.width=this.readUInt32(),this.height=this.readUInt32(),this.bits=this.data[this.pos++],this.colorType=this.data[this.pos++],this.compressionMethod=this.data[this.pos++],this.filterMethod=this.data[this.pos++],this.interlaceMethod=this.data[this.pos++];break;case"acTL":this.animation={numFrames:this.readUInt32(),numPlays:this.readUInt32()||1/0,frames:[]};break;case"PLTE":this.palette=this.read(e);break;case"fcTL":a&&this.animation.frames.push(a),this.pos+=4,a={width:this.readUInt32(),height:this.readUInt32(),xOffset:this.readUInt32(),yOffset:this.readUInt32()},o=this.readUInt16(),i=this.readUInt16()||100,a.delay=1e3*o/i,a.disposeOp=this.data[this.pos++],a.blendOp=this.data[this.pos++],a.data=[];break;case"IDAT":case"fdAT":for("fdAT"===c&&(this.pos+=4,e-=4),t=(null!=a?a.data:void 0)||this.imgData,h=0;0<=e?h<e:e<h;0<=e?++h:--h)t.push(this.data[this.pos++]);break;case"tRNS":switch(this.transparency={},this.colorType){case 3:if(r=this.palette.length/3,this.transparency.indexed=this.read(e),this.transparency.indexed.length>r)throw new Error("More transparent colors than palette size");if(0<(l=r-this.transparency.indexed.length))for(p=0;0<=l?p<l:l<p;0<=l?++p:--p)this.transparency.indexed.push(255);break;case 0:this.transparency.grayscale=this.read(e)[0];break;case 2:this.transparency.rgb=this.read(e)}break;case"tEXt":s=(f=this.read(e)).indexOf(0),u=String.fromCharCode.apply(String,f.slice(0,s)),this.text[u]=String.fromCharCode.apply(String,f.slice(s+1));break;case"IEND":return a&&this.animation.frames.push(a),this.colors=function(){switch(this.colorType){case 0:case 3:case 4:return 1;case 2:case 6:return 3}}.call(this),this.hasAlphaChannel=4===(d=this.colorType)||6===d,n=this.colors+(this.hasAlphaChannel?1:0),this.pixelBitlength=this.bits*n,this.colorSpace=function(){switch(this.colors){case 1:return"DeviceGray";case 3:return"DeviceRGB"}}.call(this),void(this.imgData=new Uint8Array(this.imgData));default:this.pos+=e}if(this.pos+=4,this.pos>this.data.length)throw new Error("Incomplete or corrupt PNG file")}}r.load=function(t,e,n){var i;return"function"==typeof e&&(n=e),(i=new XMLHttpRequest).open("GET",t,!0),i.responseType="arraybuffer",i.onload=function(){var t;return t=new r(new Uint8Array(i.response||i.mozResponseArrayBuffer)),"function"==typeof(null!=e?e.getContext:void 0)&&t.render(e),"function"==typeof n?n(t):void 0},i.send(null)},r.prototype.read=function(t){var e,n;for(n=[],e=0;0<=t?e<t:t<e;0<=t?++e:--e)n.push(this.data[this.pos++]);return n},r.prototype.readUInt32=function(){return this.data[this.pos++]<<24|this.data[this.pos++]<<16|this.data[this.pos++]<<8|this.data[this.pos++]},r.prototype.readUInt16=function(){return this.data[this.pos++]<<8|this.data[this.pos++]},r.prototype.decodePixels=function(t){var e=this.pixelBitlength/8,n=new Uint8Array(this.width*this.height*e),r=0,i=this;if(null==t&&(t=this.imgData),0===t.length)return new Uint8Array(0);function o(o,a,s,u){var c,l,f,h,p,d,g,m,v,y,b,w,x,N,L,A,S,_,C,k,P,F=Math.ceil((i.width-o)/s),T=Math.ceil((i.height-a)/u),j=i.width==F&&i.height==T;for(N=e*F,w=j?n:new Uint8Array(N*T),d=t.length,l=x=0;x<T&&r<d;){switch(t[r++]){case 0:for(h=S=0;S<N;h=S+=1)w[l++]=t[r++];break;case 1:for(h=_=0;_<N;h=_+=1)c=t[r++],p=h<e?0:w[l-e],w[l++]=(c+p)%256;break;case 2:for(h=C=0;C<N;h=C+=1)c=t[r++],f=(h-h%e)/e,L=x&&w[(x-1)*N+f*e+h%e],w[l++]=(L+c)%256;break;case 3:for(h=k=0;k<N;h=k+=1)c=t[r++],f=(h-h%e)/e,p=h<e?0:w[l-e],L=x&&w[(x-1)*N+f*e+h%e],w[l++]=(c+Math.floor((p+L)/2))%256;break;case 4:for(h=P=0;P<N;h=P+=1)c=t[r++],f=(h-h%e)/e,p=h<e?0:w[l-e],0===x?L=A=0:(L=w[(x-1)*N+f*e+h%e],A=f&&w[(x-1)*N+(f-1)*e+h%e]),g=p+L-A,m=Math.abs(g-p),y=Math.abs(g-L),b=Math.abs(g-A),v=m<=y&&m<=b?p:y<=b?L:A,w[l++]=(c+v)%256;break;default:throw new Error("Invalid filter algorithm: "+t[r-1])}if(!j){var I=((a+x*u)*i.width+o)*e,E=x*N;for(h=0;h<F;h+=1){for(var B=0;B<e;B+=1)n[I++]=w[E++];I+=(s-1)*e}}x++}}return t=(t=new Mt(t)).getBytes(),1==i.interlaceMethod?(o(0,0,8,8),o(4,0,8,8),o(0,4,4,8),o(2,0,4,4),o(0,2,2,4),o(1,0,2,2),o(0,1,1,2)):o(0,0,1,1),n},r.prototype.decodePalette=function(){var t,e,n,r,i,o,a,s,u;for(n=this.palette,o=this.transparency.indexed||[],i=new Uint8Array((o.length||0)+n.length),r=0,n.length,e=a=t=0,s=n.length;a<s;e=a+=3)i[r++]=n[e],i[r++]=n[e+1],i[r++]=n[e+2],i[r++]=null!=(u=o[t++])?u:255;return i},r.prototype.copyToImageData=function(t,e){var n,r,i,o,a,s,u,c,l,f,h;if(r=this.colors,l=null,n=this.hasAlphaChannel,this.palette.length&&(l=null!=(h=this._decodedPalette)?h:this._decodedPalette=this.decodePalette(),r=4,n=!0),c=(i=t.data||t).length,a=l||e,o=s=0,1===r)for(;o<c;)u=l?4*e[o/4]:s,f=a[u++],i[o++]=f,i[o++]=f,i[o++]=f,i[o++]=n?a[u++]:255,s=u;else for(;o<c;)u=l?4*e[o/4]:s,i[o++]=a[u++],i[o++]=a[u++],i[o++]=a[u++],i[o++]=n?a[u++]:255,s=u},r.prototype.decode=function(){var t;return t=new Uint8Array(this.width*this.height*4),this.copyToImageData(t,this.decodePixels()),t};try{e=Pt.document.createElement("canvas"),n=e.getContext("2d")}catch(t){return-1}return t=function(t){var r;return n.width=t.width,n.height=t.height,n.clearRect(0,0,t.width,t.height),n.putImageData(t,0,0),(r=new Image).src=e.toDataURL(),r},r.prototype.decodeFrames=function(e){var n,r,i,o,a,s,u,c;if(this.animation){for(c=[],r=a=0,s=(u=this.animation.frames).length;a<s;r=++a)n=u[r],i=e.createImageData(n.width,n.height),o=this.decodePixels(new Uint8Array(n.data)),this.copyToImageData(i,o),n.imageData=i,c.push(n.image=t(i));return c}},r.prototype.renderFrame=function(t,e){var n,r,i;return n=(r=this.animation.frames)[e],i=r[e-1],0===e&&t.clearRect(0,0,this.width,this.height),1===(null!=i?i.disposeOp:void 0)?t.clearRect(i.xOffset,i.yOffset,i.width,i.height):2===(null!=i?i.disposeOp:void 0)&&t.putImageData(i.imageData,i.xOffset,i.yOffset),0===n.blendOp&&t.clearRect(n.xOffset,n.yOffset,n.width,n.height),t.drawImage(n.image,n.xOffset,n.yOffset)},r.prototype.animate=function(t){var e,n,r,i,o,a,s=this;return n=0,a=this.animation,i=a.numFrames,r=a.frames,o=a.numPlays,(e=function(){var a,u;if(a=n++%i,u=r[a],s.renderFrame(t,a),1<i&&n/i<o)return s.animation._timeout=setTimeout(e,u.delay)})()},r.prototype.stopAnimation=function(){var t;return clearTimeout(null!=(t=this.animation)?t._timeout:void 0)},r.prototype.render=function(t){var e,n;return t._png&&t._png.stopAnimation(),t._png=this,t.width=this.width,t.height=this.height,e=t.getContext("2d"),this.animation?(this.decodeFrames(e),this.animate(e)):(n=e.createImageData(this.width,this.height),this.copyToImageData(n,this.decodePixels()),e.putImageData(n,0,0))},r}(),Pt.PNG=Ft;var Ot=function(){function t(){this.pos=0,this.bufferLength=0,this.eof=!1,this.buffer=null}return t.prototype={ensureBuffer:function(t){var e=this.buffer,n=e?e.byteLength:0;if(t<n)return e;for(var r=512;r<t;)r<<=1;for(var i=new Uint8Array(r),o=0;o<n;++o)i[o]=e[o];return this.buffer=i},getByte:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return this.buffer[this.pos++]},getBytes:function(t){var e=this.pos;if(t){this.ensureBuffer(e+t);for(var n=e+t;!this.eof&&this.bufferLength<n;)this.readBlock();var r=this.bufferLength;r<n&&(n=r)}else{for(;!this.eof;)this.readBlock();n=this.bufferLength}return this.pos=n,this.buffer.subarray(e,n)},lookChar:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return String.fromCharCode(this.buffer[this.pos])},getChar:function(){for(var t=this.pos;this.bufferLength<=t;){if(this.eof)return null;this.readBlock()}return String.fromCharCode(this.buffer[this.pos++])},makeSubStream:function(t,e,n){for(var r=t+e;this.bufferLength<=r&&!this.eof;)this.readBlock();return new Stream(this.buffer,t,e,n)},skip:function(t){t||(t=1),this.pos+=t},reset:function(){this.pos=0}},t}(),Mt=function(){if("undefined"!=typeof Uint32Array){var t=new Uint32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),e=new Uint32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]),n=new Uint32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]),r=[new Uint32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9],i=[new Uint32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];return(a.prototype=Object.create(Ot.prototype)).getBits=function(t){for(var e,n=this.codeSize,r=this.codeBuf,i=this.bytes,a=this.bytesPos;n<t;)void 0===(e=i[a++])&&o("Bad encoding in flate stream"),r|=e<<n,n+=8;return e=r&(1<<t)-1,this.codeBuf=r>>t,this.codeSize=n-=t,this.bytesPos=a,e},a.prototype.getCode=function(t){for(var e=t[0],n=t[1],r=this.codeSize,i=this.codeBuf,a=this.bytes,s=this.bytesPos;r<n;){var u;void 0===(u=a[s++])&&o("Bad encoding in flate stream"),i|=u<<r,r+=8}var c=e[i&(1<<n)-1],l=c>>16,f=65535&c;return(0==r||r<l||0==l)&&o("Bad encoding in flate stream"),this.codeBuf=i>>l,this.codeSize=r-l,this.bytesPos=s,f},a.prototype.generateHuffmanTable=function(t){for(var e=t.length,n=0,r=0;r<e;++r)t[r]>n&&(n=t[r]);for(var i=1<<n,o=new Uint32Array(i),a=1,s=0,u=2;a<=n;++a,s<<=1,u<<=1)for(var c=0;c<e;++c)if(t[c]==a){var l=0,f=s;for(r=0;r<a;++r)l=l<<1|1&f,f>>=1;for(r=l;r<i;r+=u)o[r]=a<<16|c;++s}return[o,n]},a.prototype.readBlock=function(){function a(t,e,n,r,i){for(var o=t.getBits(n)+r;0<o--;)e[d++]=i}var s=this.getBits(3);if(1&s&&(this.eof=!0),0!=(s>>=1)){var u,c;if(1==s)u=r,c=i;else if(2==s){for(var l=this.getBits(5)+257,f=this.getBits(5)+1,h=this.getBits(4)+4,p=Array(t.length),d=0;d<h;)p[t[d++]]=this.getBits(3);for(var g=this.generateHuffmanTable(p),m=0,v=(d=0,l+f),y=new Array(v);d<v;){var b=this.getCode(g);16==b?a(this,y,2,3,m):17==b?a(this,y,3,3,m=0):18==b?a(this,y,7,11,m=0):y[d++]=m=b}u=this.generateHuffmanTable(y.slice(0,l)),c=this.generateHuffmanTable(y.slice(l,v))}else o("Unknown block type in flate stream");for(var w=(j=this.buffer)?j.length:0,x=this.bufferLength;;){var N=this.getCode(u);if(N<256)w<=x+1&&(w=(j=this.ensureBuffer(x+1)).length),j[x++]=N;else{if(256==N)return void(this.bufferLength=x);var L=(N=e[N-=257])>>16;0<L&&(L=this.getBits(L)),m=(65535&N)+L,N=this.getCode(c),0<(L=(N=n[N])>>16)&&(L=this.getBits(L));var A=(65535&N)+L;w<=x+m&&(w=(j=this.ensureBuffer(x+m)).length);for(var S=0;S<m;++S,++x)j[x]=j[x-A]}}}else{var _,C=this.bytes,k=this.bytesPos;void 0===(_=C[k++])&&o("Bad block header in flate stream");var P=_;void 0===(_=C[k++])&&o("Bad block header in flate stream"),P|=_<<8,void 0===(_=C[k++])&&o("Bad block header in flate stream");var F=_;void 0===(_=C[k++])&&o("Bad block header in flate stream"),(F|=_<<8)!=(65535&~P)&&o("Bad uncompressed block length in flate stream"),this.codeBuf=0,this.codeSize=0;var T=this.bufferLength,j=this.ensureBuffer(T+P),I=T+P;this.bufferLength=I;for(var E=T;E<I;++E){if(void 0===(_=C[k++])){this.eof=!0;break}j[E]=_}this.bytesPos=k}},a}function o(t){throw new Error(t)}function a(t){var e=0,n=t[e++],r=t[e++];-1!=n&&-1!=r||o("Invalid header in flate stream"),8!=(15&n)&&o("Unknown compression method in flate stream"),((n<<8)+r)%31!=0&&o("Bad FCHECK in flate stream"),32&r&&o("FDICT bit set in flate stream"),this.bytes=t,this.bytesPos=2,this.codeSize=0,this.codeBuf=0,Ot.call(this)}}();window.tmp=Mt},void 0===(a="function"==typeof o?o.call(e,n,e,t):o)||(t.exports=a);try{t.exports=jsPDF}catch(t){}}).call(this,n(1),n(7))},function(t,e,n){(function(e,n){
/*!
 * @overview es6-promise - a tiny implementation of Promises/A+.
 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
 * @license   Licensed under MIT license
 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
 * @version   v4.2.8+1e68dce6
 */var r;r=function(){"use strict";function t(t){return"function"==typeof t}var r=Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},i=0,o=void 0,a=void 0,s=function(t,e){d[i]=t,d[i+1]=e,2===(i+=2)&&(a?a(g):w())},u="undefined"!=typeof window?window:void 0,c=u||{},l=c.MutationObserver||c.WebKitMutationObserver,f="undefined"==typeof self&&void 0!==e&&"[object process]"==={}.toString.call(e),h="undefined"!=typeof Uint8ClampedArray&&"undefined"!=typeof importScripts&&"undefined"!=typeof MessageChannel;function p(){var t=setTimeout;return function(){return t(g,1)}}var d=new Array(1e3);function g(){for(var t=0;t<i;t+=2)(0,d[t])(d[t+1]),d[t]=void 0,d[t+1]=void 0;i=0}var m,v,y,b,w=void 0;function x(t,e){var n=this,r=new this.constructor(A);void 0===r[L]&&E(r);var i=n._state;if(i){var o=arguments[i-1];s((function(){return j(i,r,o,n._result)}))}else F(n,r,t,e);return r}function N(t){if(t&&"object"==typeof t&&t.constructor===this)return t;var e=new this(A);return _(e,t),e}f?w=function(){return e.nextTick(g)}:l?(v=0,y=new l(g),b=document.createTextNode(""),y.observe(b,{characterData:!0}),w=function(){b.data=v=++v%2}):h?((m=new MessageChannel).port1.onmessage=g,w=function(){return m.port2.postMessage(0)}):w=void 0===u?function(){try{var t=Function("return this")().require("vertx");return void 0!==(o=t.runOnLoop||t.runOnContext)?function(){o(g)}:p()}catch(t){return p()}}():p();var L=Math.random().toString(36).substring(2);function A(){}function S(e,n,r){n.constructor===e.constructor&&r===x&&n.constructor.resolve===N?function(t,e){1===e._state?k(t,e._result):2===e._state?P(t,e._result):F(e,void 0,(function(e){return _(t,e)}),(function(e){return P(t,e)}))}(e,n):void 0===r?k(e,n):t(r)?function(t,e,n){s((function(t){var r=!1,i=function(t,e,n,r){try{t.call(e,n,r)}catch(t){return t}}(n,e,(function(n){r||(r=!0,e!==n?_(t,n):k(t,n))}),(function(e){r||(r=!0,P(t,e))}),t._label);!r&&i&&(r=!0,P(t,i))}),t)}(e,n,r):k(e,n)}function _(t,e){if(t===e)P(t,new TypeError("You cannot resolve a promise with itself"));else if(i=typeof(r=e),null===r||"object"!==i&&"function"!==i)k(t,e);else{var n=void 0;try{n=e.then}catch(e){return void P(t,e)}S(t,e,n)}var r,i}function C(t){t._onerror&&t._onerror(t._result),T(t)}function k(t,e){void 0===t._state&&(t._result=e,t._state=1,0!==t._subscribers.length&&s(T,t))}function P(t,e){void 0===t._state&&(t._state=2,t._result=e,s(C,t))}function F(t,e,n,r){var i=t._subscribers,o=i.length;t._onerror=null,i[o]=e,i[o+1]=n,i[o+2]=r,0===o&&t._state&&s(T,t)}function T(t){var e=t._subscribers,n=t._state;if(0!==e.length){for(var r=void 0,i=void 0,o=t._result,a=0;a<e.length;a+=3)r=e[a],i=e[a+n],r?j(n,r,i,o):i(o);t._subscribers.length=0}}function j(e,n,r,i){var o=t(r),a=void 0,s=void 0,u=!0;if(o){try{a=r(i)}catch(t){u=!1,s=t}if(n===a)return void P(n,new TypeError("A promises callback cannot return that same promise."))}else a=i;void 0!==n._state||(o&&u?_(n,a):!1===u?P(n,s):1===e?k(n,a):2===e&&P(n,a))}var I=0;function E(t){t[L]=I++,t._state=void 0,t._result=void 0,t._subscribers=[]}var B=function(){function t(t,e){this._instanceConstructor=t,this.promise=new t(A),this.promise[L]||E(this.promise),r(e)?(this.length=e.length,this._remaining=e.length,this._result=new Array(this.length),0===this.length?k(this.promise,this._result):(this.length=this.length||0,this._enumerate(e),0===this._remaining&&k(this.promise,this._result))):P(this.promise,new Error("Array Methods must be provided an Array"))}return t.prototype._enumerate=function(t){for(var e=0;void 0===this._state&&e<t.length;e++)this._eachEntry(t[e],e)},t.prototype._eachEntry=function(t,e){var n=this._instanceConstructor,r=n.resolve;if(r===N){var i=void 0,o=void 0,a=!1;try{i=t.then}catch(t){a=!0,o=t}if(i===x&&void 0!==t._state)this._settledAt(t._state,e,t._result);else if("function"!=typeof i)this._remaining--,this._result[e]=t;else if(n===O){var s=new n(A);a?P(s,o):S(s,t,i),this._willSettleAt(s,e)}else this._willSettleAt(new n((function(e){return e(t)})),e)}else this._willSettleAt(r(t),e)},t.prototype._settledAt=function(t,e,n){var r=this.promise;void 0===r._state&&(this._remaining--,2===t?P(r,n):this._result[e]=n),0===this._remaining&&k(r,this._result)},t.prototype._willSettleAt=function(t,e){var n=this;F(t,void 0,(function(t){return n._settledAt(1,e,t)}),(function(t){return n._settledAt(2,e,t)}))},t}(),O=function(){function e(t){this[L]=I++,this._result=this._state=void 0,this._subscribers=[],A!==t&&("function"!=typeof t&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof e?function(t,e){try{e((function(e){_(t,e)}),(function(e){P(t,e)}))}catch(e){P(t,e)}}(this,t):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}return e.prototype.catch=function(t){return this.then(null,t)},e.prototype.finally=function(e){var n=this.constructor;return t(e)?this.then((function(t){return n.resolve(e()).then((function(){return t}))}),(function(t){return n.resolve(e()).then((function(){throw t}))})):this.then(e,e)},e}();return O.prototype.then=x,O.all=function(t){return new B(this,t).promise},O.race=function(t){var e=this;return r(t)?new e((function(n,r){for(var i=t.length,o=0;o<i;o++)e.resolve(t[o]).then(n,r)})):new e((function(t,e){return e(new TypeError("You must pass an array to race."))}))},O.resolve=N,O.reject=function(t){var e=new this(A);return P(e,t),e},O._setScheduler=function(t){a=t},O._setAsap=function(t){s=t},O._asap=s,O.polyfill=function(){var t=void 0;if(void 0!==n)t=n;else if("undefined"!=typeof self)t=self;else try{t=Function("return this")()}catch(t){throw new Error("polyfill failed because global object is unavailable in this environment")}var e=t.Promise;if(e){var r=null;try{r=Object.prototype.toString.call(e.resolve())}catch(t){}if("[object Promise]"===r&&!e.cast)return}t.Promise=O},O.Promise=O,O},t.exports=r()}).call(this,n(8),n(1))},function(t,e){var n,r,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var u,c=[],l=!1,f=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):f=-1,c.length&&p())}function p(){if(!l){var t=s(h);l=!0;for(var e=c.length;e;){for(u=c,c=[];++f<e;)u&&u[f].run();f=-1,e=c.length}u=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function g(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new d(t,e)),1!==c.length||l||s(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=g,i.addListener=g,i.once=g,i.off=g,i.removeListener=g,i.removeAllListeners=g,i.emit=g,i.prependListener=g,i.prependOnceListener=g,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e,n){(function(n){var r,i,o;i=[],void 0===(o="function"==typeof(r=function(){"use strict";function e(t,e,n){var r=new XMLHttpRequest;r.open("GET",t),r.responseType="blob",r.onload=function(){a(r.response,e,n)},r.onerror=function(){console.error("could not download file")},r.send()}function r(t){var e=new XMLHttpRequest;e.open("HEAD",t,!1);try{e.send()}catch(t){}return 200<=e.status&&299>=e.status}function i(t){try{t.dispatchEvent(new MouseEvent("click"))}catch(n){var e=document.createEvent("MouseEvents");e.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),t.dispatchEvent(e)}}var o="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof n&&n.global===n?n:void 0,a=o.saveAs||("object"!=typeof window||window!==o?function(){}:"download"in HTMLAnchorElement.prototype?function(t,n,a){var s=o.URL||o.webkitURL,u=document.createElement("a");n=n||t.name||"download",u.download=n,u.rel="noopener","string"==typeof t?(u.href=t,u.origin===location.origin?i(u):r(u.href)?e(t,n,a):i(u,u.target="_blank")):(u.href=s.createObjectURL(t),setTimeout((function(){s.revokeObjectURL(u.href)}),4e4),setTimeout((function(){i(u)}),0))}:"msSaveOrOpenBlob"in navigator?function(t,n,o){if(n=n||t.name||"download","string"!=typeof t)navigator.msSaveOrOpenBlob(function(t,e){return void 0===e?e={autoBom:!1}:"object"!=typeof e&&(console.warn("Deprecated: Expected third argument to be a object"),e={autoBom:!e}),e.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob(["\ufeff",t],{type:t.type}):t}(t,o),n);else if(r(t))e(t,n,o);else{var a=document.createElement("a");a.href=t,a.target="_blank",setTimeout((function(){i(a)}))}}:function(t,n,r,i){if((i=i||open("","_blank"))&&(i.document.title=i.document.body.innerText="downloading..."),"string"==typeof t)return e(t,n,r);var a="application/octet-stream"===t.type,s=/constructor/i.test(o.HTMLElement)||o.safari,u=/CriOS\/[\d]+/.test(navigator.userAgent);if((u||a&&s)&&"object"==typeof FileReader){var c=new FileReader;c.onloadend=function(){var t=c.result;t=u?t:t.replace(/^data:[^;]*;/,"data:attachment/file;"),i?i.location.href=t:location=t,i=null},c.readAsDataURL(t)}else{var l=o.URL||o.webkitURL,f=l.createObjectURL(t);i?i.location=f:location.href=f,i=null,setTimeout((function(){l.revokeObjectURL(f)}),4e4)}});o.saveAs=a.saveAs=a,t.exports=a})?r.apply(e,i):r)||(t.exports=o)}).call(this,n(1))},function(t,e,n){var r=n(11),i=n(12);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[t.i,i,""]]);var o={insert:"head",singleton:!1};r(i,o);t.exports=i.locals||{}},function(t,e,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var t={};return function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}t[e]=n}return t[e]}}(),a=[];function s(t){for(var e=-1,n=0;n<a.length;n++)if(a[n].identifier===t){e=n;break}return e}function u(t,e){for(var n={},r=[],i=0;i<t.length;i++){var o=t[i],u=e.base?o[0]+e.base:o[0],c=n[u]||0,l="".concat(u," ").concat(c);n[u]=c+1;var f=s(l),h={css:o[1],media:o[2],sourceMap:o[3]};-1!==f?(a[f].references++,a[f].updater(h)):a.push({identifier:l,updater:m(h,e),references:1}),r.push(l)}return r}function c(t){var e=document.createElement("style"),r=t.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(t){e.setAttribute(t,r[t])})),"function"==typeof t.insert)t.insert(e);else{var a=o(t.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var l,f=(l=[],function(t,e){return l[t]=e,l.filter(Boolean).join("\n")});function h(t,e,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(t.styleSheet)t.styleSheet.cssText=f(e,i);else{var o=document.createTextNode(i),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(o,a[e]):t.appendChild(o)}}function p(t,e,n){var r=n.css,i=n.media,o=n.sourceMap;if(i?t.setAttribute("media",i):t.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var d=null,g=0;function m(t,e){var n,r,i;if(e.singleton){var o=g++;n=d||(d=c(e)),r=h.bind(null,n,o,!1),i=h.bind(null,n,o,!0)}else n=c(e),r=p.bind(null,n,e),i=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)};return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else i()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=i());var n=u(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var r=0;r<n.length;r++){var i=s(n[r]);a[i].references--}for(var o=u(t,e),c=0;c<n.length;c++){var l=s(n[c]);0===a[l].references&&(a[l].updater(),a.splice(l,1))}n=o}}}},function(t,e,n){(e=n(13)(!1)).push([t.i,'.mapboxgl-ctrl-group .mapboxgl-print-control button\n{\n    background: none;\n    border: none;\n    cursor: pointer;\n    display: block;\n    font-size: 14px;\n    padding: 8px 8px 6px;\n    text-align: right;\n    width: 100%;\n    height: auto;\n}\n\n.mapboxgl-print-control\n{ \n    background: url(\'data:image/svg+xml;charset=UTF-8,<svg id="Capa_1" enable-background="new 0 0 512 512" height="512" viewBox="0 0 512 512" width="512" xmlns="http://www.w3.org/2000/svg"><g><path d="m422.5 99v-24c0-41.355-33.645-75-75-75h-184c-41.355 0-75 33.645-75 75v24z"/><path d="m118.5 319v122 26 15c0 16.568 13.431 30 30 30h214c16.569 0 30-13.432 30-30v-15-26-122zm177 128h-80c-8.284 0-15-6.716-15-15s6.716-15 15-15h80c8.284 0 15 6.716 15 15s-6.716 15-15 15zm0-64h-80c-8.284 0-15-6.716-15-15s6.716-15 15-15h80c8.284 0 15 6.716 15 15s-6.716 15-15 15z"/><path d="m436.5 129h-361c-41.355 0-75 33.645-75 75v120c0 41.355 33.645 75 75 75h13v-80h-9c-8.284 0-15-6.716-15-15s6.716-15 15-15h24 304 24c8.284 0 15 6.716 15 15s-6.716 15-15 15h-9v80h14c41.355 0 75-33.645 75-75v-120c0-41.355-33.645-75-75-75zm-309 94h-48c-8.284 0-15-6.716-15-15s6.716-15 15-15h48c8.284 0 15 6.716 15 15s-6.716 15-15 15z"/></g></svg>\');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: 70%;\n}\n\n/*\n * Hide high-res map rendering\n*/\n.hidden-map {\n    overflow: hidden;\n    height: 0;\n    width: 0;\n    position: fixed;\n}',""]),t.exports=e},function(t,e,n){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n=function(t,e){var n=t[1]||"",r=t[3];if(!r)return n;if(e&&"function"==typeof btoa){var i=(a=r,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(u," */")),o=r.sources.map((function(t){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(t," */")}));return[n].concat(o).concat([i]).join("\n")}var a,s,u;return[n].join("\n")}(e,t);return e[2]?"@media ".concat(e[2]," {").concat(n,"}"):n})).join("")},e.i=function(t,n,r){"string"==typeof t&&(t=[[null,t,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<t.length;s++){var u=[].concat(t[s]);r&&i[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),e.push(u))}},e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,